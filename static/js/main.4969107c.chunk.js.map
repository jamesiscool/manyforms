{"version":3,"sources":["hooks/useStore.tsx","hooks/useConfig.ts","hooks/useFieldState.ts","hooks/useValues.ts","hooks/useExpression.ts","hooks/useShowIf.ts","util.ts","display/Description.tsx","validation/ValidationRules.ts","hooks/useFormState.ts","hooks/useValidation.ts","validation/ValidationExpressions.ts","FormDef.ts","formElements/formElementTypes.tsx","display/Label.tsx","display/FieldChrome.tsx","hooks/useReferenceData.ts","formElements/input/Autocomplete.tsx","hooks/usePagination.ts","formElements/pagination/Accordion.tsx","formElements/input/Dropdown.tsx","formElements/input/TextInput.tsx","formElements/output/Heading.tsx","formElements/output/Paragraph.tsx","formElements/input/ButtonGroup.tsx","formElements/pagination/Tabs.tsx","hooks/useSuggestion.ts","formElements/collection/List.tsx","formElements/ChildFormElements.tsx","Form.tsx","index.tsx"],"names":["StoreContext","createContext","StoreProvider","props","store","useCreateStore","initialState","react_default","a","createElement","Provider","value","children","_useReducer","useReducer","storeState","action","nextStoreState","produce","draftStoreState","actionType","set","path","array","get","splice","index","unset","Error","console","log","_useReducer2","Object","slicedToArray","dispatch","defaultValue","getArrayLength","length","deleteFromCollection","useStore","React","useContext","defaultConfig","showErrors","showErrorsDelay","disableNextWhenErrors","useConfig","arguments","undefined","_useStore","config","setup","formDefinitionConfig","objectSpread","useFieldState","getFieldState","concat","eventTimes","setSelectedSuggestionLabel","label","FIELD_STATE_STORE_KEY","focus","Date","now","valueChanged","blur","useValues","evaluate","useExpression","setValue","formValues","getValue","addToCollection","element","getCollectionSize","setValueFromExpression","fieldDef","expresion","extraContext","newValueObject","setUp","initialValues","jexl","addTransform","toUpperCase","toLowerCase","isAlpha","isAlphanumeric","isCurrency","isEmail","isNumeric","addBinaryOp","left","right","expression","includeFieldValue","extraContex","context","fieldValue","evalSync","useShowIf","shouldShow","showIf","some","createPath","parentPath","fieldId","Description","id","className","text","validationRules","required","validate","defaultMessage","email","alpha","numeric","alphanumeric","currency","useFormState","fromState","nextClicked","FORM_STATE_STORE_KEY","clearNextClicked","submitClicked","nextOrSubmit","useValidation","_useValues","validationExpressions","validIf","invalidIf","requiredIf","useValidationExpressions","_useState","useState","_useState2","nextTick","setNextTick","useEffect","setTimeout","validation","reduce","message","constraint","validationRule","isValidationExpresionDef","validationExpression","name","validateConstraint","shouldShowErrors","timeHasPassedAndShouldShowError","time","validateAndShouldShow","hasErrorsRecursively","childFieldDef","type","childPath","formElementCollectionTypes","hasOwnProperty","size","Label","htmlFor","error","FieldChrome","def","attributes","Label_Label","description","Description_Description","useReferenceData","referenceData","setReferenceData","data","http","forEach","httpReferenceDataDef","axios","then","response","defaultAutocompleteAttributes","options","multiple","labelKey","valueKey","postfixSearchIcon","usePagination","_useFormState","setPath","_useState3","_useState4","pages","setPages","_useState5","_useState6","currentPageIndex","setCurrentPageIndex","firstShownPage","findIndex","page","lastShownPage","findLastIndex","currentIsFirst","currentIsLast","currentPageHasErrors","disableNext","setupPages","i","pageDef","previousClicked","formElementNonCollectionTypes","accordion","pagination","currentPageRef","useRef","definition","scrollCurrentPageIntoView","current","window","scroll","top","getBoundingClientRect","goToPage","previous","next","role","aria-multiselectable","map","key","ref","onClick","ChildFormElements_ChildFormElements","childFormElements","aria-label","classNames","disabled","dropdown","_useFieldState","referenceDataOptions","FieldChrome_FieldChrome","onChange","event","currentTarget","aria-describedby","onFocus","onBlur","option","Math","random","toString","substring","textInput","heading","level","paragraph","buttonGroup","buttonFocus","setButtonFocus","checked","tabs","tabsRef","scrollIntoView","pill","href","tabIndex","aria-disabled","autocomplete","_useSuggestion","fieldState","suggestions","setSuggestions","httpSuggestions","setHttpSuggestions","inlineSuggestions","setInlineSuggestions","_useState7","selectedSuggestionLabel","_useState8","inputValue","setInputValue","_useState9","_useState10","showSuggestions","setShowSuggestions","inputChanged","newInputValue","lowerInputValue","trim","lowerSelectedLabel","matchingInlineOptions","filter","JSON","stringify","includes","url","clear","selectOption","useSuggestion","cursor","setCursor","inputContainerRef","suggestionsContainerRef","document","body","addEventListener","handlePotentialOutsideClick","removeEventListener","contains","target","handleInputChange","changedValue","handleBlur","newTarget","activeElement","handleFocus","handleInputKeyDown","keyCode","esm","_ref","onKeyDown","index_esm","icon","Search","placement","_ref2","style","data-placement","suggestion","list","times","n","s","v","ordinal","itemLabel","aria-hidden","formElementTypes","ChildFormElements","elementDef","Child","foundType","warn","lookupElement","Form","formDef","elements","ReactDOM","render","useStore_StoreProvider","Form_Form","getElementById"],"mappings":"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","file":"static/js/main.4969107c.chunk.js","sourcesContent":["import produce from 'immer'\nimport {get, set, unset} from 'lodash-es'\nimport React, {createContext, useReducer} from 'react'\n\ninterface StoreState {\n\t[key: string]: any\n}\n\ninterface Store {\n\tstore: StoreState,\n\tset: (path: string, value: any) => void\n\tget: <T extends any>(path: string, defaultValue?: T) => T\n\tgetArrayLength: (path: string) => number\n\tdeleteFromCollection: (path: string, index: number) => void\n}\n\nexport const StoreContext = createContext<Store | null>(null)\n\nexport const StoreProvider: React.FC<{ initialState?: StoreState }> = (props) => {\n\tconst store = useCreateStore(props.initialState)\n\treturn <StoreContext.Provider value={store}>\n\t\t{props.children}\n\t</StoreContext.Provider>\n}\n\n\nconst useCreateStore = (initialState?: StoreState) => {\n\tconst [store, dispatch] = useReducer((storeState: StoreState, action: { actionType: 'set' | 'deleteFromCollection' | 'unset', path: string, value?: any, index?: number }) => {\n\t\tconst nextStoreState = produce(storeState, draftStoreState => {\n\t\t\tswitch (action.actionType) {\n\t\t\t\tcase 'set':\n\t\t\t\t\tset(draftStoreState, action.path, action.value)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'deleteFromCollection':\n\t\t\t\t\tconst array = get(draftStoreState, action.path) as any[]\n\t\t\t\t\tarray.splice(action.index!, 1)\n\t\t\t\t\tset(draftStoreState, action.path, array)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'unset':\n\t\t\t\t\tunset(draftStoreState, action.path)\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error()\n\t\t\t}\n\t\t})\n\t\tconsole.log('store:', nextStoreState)\n\t\treturn nextStoreState\n\t}, initialState || {})\n\n\treturn {\n\t\tstore,\n\t\tset: (path: string, value: any) => {\n\t\t\tdispatch({actionType: 'set', path, value})\n\n\t\t},\n\t\tget: <T extends any>(path: string, defaultValue?: T): T => {\n\t\t\treturn get(store, path, defaultValue)\n\t\t},\n\t\tgetArrayLength: (path: string): number => {\n\t\t\treturn get(store, path, []).length\n\t\t},\n\t\tdeleteFromCollection: (path: string, index: number) => {\n\t\t\tdispatch({actionType: 'deleteFromCollection', path, index})\n\t\t}\n\t}\n}\n\nexport const useStore = (): Store => {\n\tconst store = React.useContext(StoreContext)\n\tif (store === null) {\n\t\tthrow new Error('Component must be wrapped with <StoreProvider>')\n\t}\n\treturn store\n}\n\n","import {useStore} from './useStore'\r\n\r\ntype showErrors = 'immediately' | 'onFocus' | 'onValueChanged' | 'onBlur' | 'nextOrSummit'\r\n\r\nexport interface Config {\r\n\tshowErrors: showErrors\r\n\tshowErrorsDelay: number //milliseconds\r\n\tdisableNextWhenErrors: boolean\r\n}\r\n\r\nconst defaultConfig: Config = {\r\n\tshowErrors: 'onFocus',\r\n\tshowErrorsDelay: 500,\r\n\tdisableNextWhenErrors: false\r\n}\r\n\r\nconst CONFIG_STORE_KEY = 'config'\r\n\r\nexport const useConfig = (formDefinitionConfig = {}) => {\r\n\tconst {set, get} = useStore()\r\n\treturn {\r\n\t\tconfig: get(CONFIG_STORE_KEY) || {},\r\n\t\tsetup: (formDefinitionConfig = {}) => {\r\n\t\t\tset(CONFIG_STORE_KEY, {...defaultConfig, ...formDefinitionConfig})\r\n\t\t}\r\n\t}\r\n}","import {useStore} from './useStore'\r\n\r\ninterface FieldStates {\r\n\t[path: string]: FieldState\r\n}\r\n\r\ninterface FieldState {\r\n\tselectedSuggestionLabel?: string,\r\n\teventTimes: EventTimes\r\n}\r\n\r\ntype EventTimes = {\r\n\t[Event in Events]?: number; //Date.now() when event first happened on the field\r\n}\r\n\r\ntype Events = 'focus' | 'valueChanged' | 'blur'\r\n\r\nconst FIELD_STATE_STORE_KEY = 'fieldStates'\r\n\r\nexport const useFieldState = () => {\r\n\tconst {set, get} = useStore()\r\n\r\n\treturn {\r\n\t\tgetFieldState: (path: string): FieldState => get(`${FIELD_STATE_STORE_KEY}.${path}`, {eventTimes: {}}),\r\n\r\n\t\tsetSelectedSuggestionLabel: (path: string, label: string) => {\r\n\t\t\tset(FIELD_STATE_STORE_KEY + '.' + path + '.selectedSuggestionLabel', label)\r\n\t\t},\r\n\r\n\t\tfocus: (path: string) => set(`${FIELD_STATE_STORE_KEY}.${path}.focus`, Date.now()),\r\n\t\tvalueChanged: (path: string) => set(`${FIELD_STATE_STORE_KEY}.${path}.valueChanged`, Date.now()),\r\n\t\tblur: (path: string) => set(`${FIELD_STATE_STORE_KEY}.${path}.blur`, Date.now()),\r\n\t}\r\n}","import {FormElementDef} from '../FormDef'\r\nimport {useExpression} from './useExpression'\r\nimport {useFieldState} from './useFieldState'\r\nimport {useStore} from './useStore'\r\n\r\nexport const VALUES_STORE_KEY = 'values'\r\n\r\nexport const useValues = () => {\r\n\tconst store = useStore()\r\n\tconst {valueChanged} = useFieldState()\r\n\tconst {evaluate} = useExpression()\r\n\r\n\tconst setValue = (path: string, value: any) => {\r\n\t\tconsole.log('path:', path)\r\n\t\tstore.set(`${VALUES_STORE_KEY}.${path}`, value)\r\n\t\tvalueChanged(path)\r\n\t}\r\n\r\n\r\n\treturn {\r\n\t\tformValues: store.get(VALUES_STORE_KEY),\r\n\t\tsetValue,\r\n\t\tgetValue: (path: string): string => {\r\n\t\t\treturn store.get(`${VALUES_STORE_KEY}.${path}`)\r\n\t\t},\r\n\t\taddToCollection: (path: string, element: any = {}) => {\r\n\t\t\tsetValue(`${path}[${store.getArrayLength(`${VALUES_STORE_KEY}.${path}`)}]`, element)\r\n\t\t},\r\n\t\tdeleteFromCollection: (path: string, index: number) => {\r\n\t\t\tstore.deleteFromCollection(`${VALUES_STORE_KEY}.${path}`, index)\r\n\t\t},\r\n\t\tgetCollectionSize: (path: string) => {\r\n\t\t\treturn store.getArrayLength(`${VALUES_STORE_KEY}.${path}`)\r\n\t\t},\r\n\t\tsetValueFromExpression: (path: string, fieldDef: FormElementDef<{}>, expresion: string, extraContext?: any) => {\r\n\t\t\tconst newValueObject = evaluate(path, fieldDef, expresion, false, extraContext)\r\n\t\t\tconsole.log('setValueFromExpression.newValueObject:', newValueObject, typeof newValueObject)\r\n\t\t\tsetValue(path, newValueObject)\r\n\t\t},\r\n\t\tsetUp: (initialValues = {}) => {\r\n\t\t\tstore.set(VALUES_STORE_KEY, initialValues)\r\n\t\t}\r\n\t}\r\n}","import jexl from 'jexl'\r\nimport isAlpha from 'validator/lib/isAlpha'\r\nimport isAlphanumeric from 'validator/lib/isAlphanumeric'\r\nimport isCurrency from 'validator/lib/isCurrency'\r\nimport isEmail from 'validator/lib/isEmail'\r\nimport isNumeric from 'validator/lib/isNumeric'\r\nimport {FormElementDef} from '../FormDef'\r\nimport {useConfig} from './useConfig'\r\nimport {useStore} from './useStore'\r\nimport {VALUES_STORE_KEY} from './useValues'\r\n\r\n//Transforms\r\njexl.addTransform('toUpperCase', (value) => value.toUpperCase())\r\njexl.addTransform('toLowerCase', (value) => value.toLowerCase())\r\n\r\n//'Is' validation\r\njexl.addTransform('isAlpha', (value) => value && isAlpha(value))\r\njexl.addTransform('isAlphanumeric', (value) => value && isAlphanumeric(value))\r\njexl.addTransform('isCurrency', (value) => value && isCurrency(value))\r\njexl.addTransform('isEmail', (value) => value && isEmail(value))\r\njexl.addTransform('isNumeric', (value) => value && isNumeric(value))\r\n\r\n//case-insensitive string equality\r\njexl.addBinaryOp('_=', 20, (left, right) => left.toLowerCase() === right.toLowerCase())\r\n\r\nexport const useExpression = () => {\r\n\tconst {config} = useConfig()\r\n\tconst {store, get} = useStore()\r\n\r\n\treturn {\r\n\t\tevaluate: <T>(path: string, fieldDef: FormElementDef<{}>, expression: string, includeFieldValue = true, extraContex?: any): T => {\r\n\t\t\tconst context = {\r\n\t\t\t\t...store,\r\n\t\t\t\tfieldDef,\r\n\t\t\t\tpath,\r\n\t\t\t\tconfig,\r\n\t\t\t\t...extraContex\r\n\t\t\t}\r\n\t\t\tif (includeFieldValue) {\r\n\t\t\t\tconst fieldValue = get(`${VALUES_STORE_KEY}.${path}`)\r\n\t\t\t\tcontext.fieldValue = fieldValue\r\n\t\t\t\tcontext.value = fieldValue\r\n\t\t\t}\r\n\t\t\treturn jexl.evalSync(expression, context)\r\n\t\t}\r\n\t}\r\n}","import {FormElementDef} from '../FormDef'\r\nimport {useExpression} from './useExpression'\r\n\r\nexport const useShowIf = () => {\r\n\tconst {evaluate} = useExpression()\r\n\treturn {\r\n\t\tshouldShow: (path: string, fieldDef: FormElementDef<{}>): boolean => {\r\n\t\t\tif (!fieldDef.showIf) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\treturn fieldDef.showIf.some(expression => evaluate(path, fieldDef, expression))\r\n\t\t}\r\n\t}\r\n}","export const createKey = () => (Math.random() + 1).toString(36).substring(2)\r\n\r\nexport const ordinal = (n: number): string => {\r\n\tconst s = ['th', 'st', 'nd', 'rd'],\r\n\t\tv = n % 100\r\n\treturn n + (s[(v - 20) % 10] || s[v] || s[0])\r\n}\r\n\r\nexport const createPath = (parentPath: string, fieldId?: string): string => {\r\n\tif (!fieldId) {\r\n\t\treturn parentPath\r\n\t}\r\n\tif (parentPath !== '') {\r\n\t\treturn parentPath + '.' + fieldId\r\n\t}\r\n\treturn fieldId\r\n\r\n}","import React from 'react'\r\n\r\ninterface DescriptionProps {\r\n\tpath: string,\r\n\ttext: string\r\n}\r\n\r\nexport const Description = (props: DescriptionProps) => (\r\n\t<div id={props.path + '_description'} className=\"pt-2 text-muted description\">{props.text}</div>\r\n)","import isAlpha from 'validator/lib/isAlpha'\r\nimport isAlphanumeric from 'validator/lib/isAlphanumeric'\r\nimport isCurrency from 'validator/lib/isCurrency'\r\nimport isEmail from 'validator/lib/isEmail'\r\nimport isNumeric from 'validator/lib/isNumeric'\r\n\r\ninterface ValidationRule {\r\n\tvalidate: (value: string, args?: string | string[]) => boolean,\r\n\tdefaultMessage: string\r\n}\r\n\r\nexport const validationRules: { [name: string]: ValidationRule } = {\r\n\trequired: {\r\n\t\tvalidate: (value: string) => !(value == null || value.length <= 0 || value === ''),\r\n\t\tdefaultMessage: 'This field is required'\r\n\t},\r\n\temail: {\r\n\t\tvalidate: (value: string) => isEmail(value),\r\n\t\tdefaultMessage: 'This field must be an email address'\r\n\t},\r\n\talpha: {\r\n\t\tvalidate: (value: string) => isAlpha(value),\r\n\t\tdefaultMessage: 'This field must be only letters'\r\n\t},\r\n\tnumeric: {\r\n\t\tvalidate: (value: string) => isNumeric(value),\r\n\t\tdefaultMessage: 'This field must be only numbers'\r\n\t},\r\n\talphanumeric: {\r\n\t\tvalidate: (value: string) => isAlphanumeric(value),\r\n\t\tdefaultMessage: 'This field must be only letters and numbers'\r\n\t},\r\n\tcurrency: {\r\n\t\tvalidate: (value: string) => isCurrency(value),\r\n\t\tdefaultMessage: 'This field must be a currency amount'\r\n\t}\r\n}","import {useStore} from './useStore'\r\n\r\ntype FormState = {\r\n\tnextClicked?: number //Date.now()\r\n\tsubmitClicked?: number\r\n}\r\n\r\nconst FORM_STATE_STORE_KEY = 'formState'\r\n\r\nexport const useFormState = () => {\r\n\tconst {set, get} = useStore()\r\n\r\n\treturn {\r\n\t\tfromState: get<FormState>(FORM_STATE_STORE_KEY),\r\n\t\tnextClicked: () => {\r\n\t\t\tif (!get(FORM_STATE_STORE_KEY + '.nextClicked')) {\r\n\t\t\t\tset(FORM_STATE_STORE_KEY + '.nextClicked', Date.now())\r\n\t\t\t}\r\n\t\t},\r\n\t\tclearNextClicked: () => {\r\n\t\t\tset(FORM_STATE_STORE_KEY + '.nextClicked', undefined)\r\n\t\t},\r\n\t\tsubmitClicked: () => {\r\n\t\t\tif (!get(FORM_STATE_STORE_KEY + '.submitClicked')) {\r\n\t\t\t\tset(FORM_STATE_STORE_KEY + '.submitClicked', Date.now())\r\n\t\t\t}\r\n\t\t},\r\n\t\tnextOrSubmit: (): boolean => {\r\n\t\t\treturn (get(FORM_STATE_STORE_KEY + '.nextClicked') || get(FORM_STATE_STORE_KEY + '.submitClicked'))\r\n\t\t}\r\n\t}\r\n}","import {useEffect, useState} from 'react'\r\nimport {FormElementDef, isValidationExpresionDef, ValidationConstraintDef} from '../FormDef'\r\nimport {isTypeACollection} from '../formElements/formElementTypes'\r\nimport {createPath} from '../util'\r\nimport {useValidationExpressions} from '../validation/ValidationExpressions'\r\nimport {validationRules} from '../validation/ValidationRules'\r\nimport {useConfig} from './useConfig'\r\nimport {useFieldState} from './useFieldState'\r\nimport {useFormState} from './useFormState'\r\nimport {useShowIf} from './useShowIf'\r\nimport {useValues} from './useValues'\r\n\r\nexport const useValidation = () => {\r\n\tconst config = useConfig().config\r\n\tconst {getValue, getCollectionSize} = useValues()\r\n\tconst {getFieldState} = useFieldState()\r\n\tconst {nextOrSubmit} = useFormState()\r\n\tconst {shouldShow} = useShowIf()\r\n\tconst validationExpressions = useValidationExpressions()\r\n\r\n\tconst [nextTick, setNextTick] = useState<number>(0)\r\n\tuseEffect(() => {\r\n\t\tif (nextTick > Date.now()) {\r\n\t\t\tsetTimeout(() => setNextTick(0), nextTick - Date.now())\r\n\t\t}\r\n\t}, [nextTick])\r\n\r\n\tconst validate = (path: string, fieldDef: FormElementDef<{}>): string | null => {\r\n\t\tif (!fieldDef.validation || fieldDef.validation.length <= 0) {\r\n\t\t\treturn null\r\n\t\t}\r\n\t\treturn fieldDef.validation.reduce<string | null>((message, constraint): string | null => {\r\n\t\t\tif (message != null) {\r\n\t\t\t\treturn message\r\n\t\t\t}\r\n\t\t\treturn validateConstraint(constraint, path, fieldDef)\r\n\t\t}, null)\r\n\t}\r\n\r\n\tfunction validateConstraint(constraint: ValidationConstraintDef | string, path: string, fieldDef: FormElementDef<{}>): string | null {\r\n\t\tif (typeof constraint === 'string') {\r\n\t\t\tconst fieldValue = getValue(path) || ''\r\n\t\t\tconst validationRule = validationRules[constraint]\r\n\t\t\tif (!validationRule.validate(fieldValue)) {\r\n\t\t\t\treturn validationRule.defaultMessage\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t} else if (!isValidationExpresionDef(constraint)) {\r\n\t\t\tconst fieldValue = getValue(path) || ''\r\n\t\t\tconst validationRule = validationRules[constraint.name]\r\n\t\t\tif (!validationRule.validate(fieldValue)) {\r\n\t\t\t\treturn constraint.message || validationRule.defaultMessage\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t} else {\r\n\t\t\tconst validationExpression = validationExpressions[constraint.name]\r\n\t\t\tif (!validationExpression.validate(path, fieldDef, constraint.expression)) {\r\n\t\t\t\treturn constraint.message || validationExpression.defaultMessage\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t}\r\n\t}\r\n\r\n\tconst validateAndShouldShow = (path: string, fieldDef: FormElementDef<{}>): string | null => {\r\n\t\treturn shouldShowErrors(path, fieldDef) ? validate(path, fieldDef) : null\r\n\t}\r\n\r\n\tconst shouldShowErrors = (path: string, fieldDef: FormElementDef<{}>): boolean => {\r\n\t\tif (nextOrSubmit() || config.showErrors === 'immediately') {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tconst eventTimes = getFieldState(path).eventTimes || {}\r\n\t\tif (config.showErrors === 'onFocus' && eventTimes.focus) {\r\n\t\t\treturn timeHasPassedAndShouldShowError(eventTimes.focus)\r\n\t\t}\r\n\t\tif (config.showErrors === 'onValueChanged' && eventTimes.valueChanged) {\r\n\t\t\treturn timeHasPassedAndShouldShowError(eventTimes.valueChanged)\r\n\t\t}\r\n\t\tif (config.showErrors === 'onBlur' && eventTimes.blur) {\r\n\t\t\treturn timeHasPassedAndShouldShowError(eventTimes.blur)\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\tconst timeHasPassedAndShouldShowError = (time: number) => {\r\n\t\tif (!config.showErrorsDelay || config.showErrorsDelay === 0) {\r\n\t\t\treturn true\r\n\t\t} else if ((time + config.showErrorsDelay) < Date.now()) {\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\tsetNextTick(time + config.showErrorsDelay)\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\tconst hasErrorsRecursively = (path: string, fieldDef?: FormElementDef<{}>): boolean => {\r\n\t\tif (!fieldDef || !shouldShow(path, fieldDef)) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif (validate(path, fieldDef) != null) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tif (fieldDef.children) {\r\n\t\t\treturn fieldDef.children.some((childFieldDef) => {\r\n\t\t\t\tconst childPath = createPath(path, childFieldDef.fieldId)\r\n\t\t\t\tif (!shouldShow(childPath, childFieldDef)) {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\tif (isTypeACollection(childFieldDef.type)) {\r\n\t\t\t\t\tconst size = getCollectionSize(childPath)\r\n\t\t\t\t\tfor (let index = 0; index < size; index++) {\r\n\t\t\t\t\t\tif (hasErrorsRecursively(childPath + '[' + index + ']', childFieldDef)) {\r\n\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn hasErrorsRecursively(childPath, childFieldDef)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\r\n\treturn {validate, shouldShowErrors, validateAndShouldShow, hasErrorsRecursively}\r\n}","import {FormElementDef} from '../FormDef'\nimport {useExpression} from '../hooks/useExpression'\nimport {useValues} from '../hooks/useValues'\nimport {validationRules} from './ValidationRules'\n\nexport const useValidationExpressions = () => {\n\tconst {evaluate} = useExpression()\n\tconst {getValue} = useValues()\n\n\tinterface ValidationExpression {\n\t\tvalidate: (path: string, fieldDef: FormElementDef<{}>, expression: string) => boolean,\n\t\tdefaultMessage: string\n\t}\n\n\tconst validationsExpressions: { [name: string]: ValidationExpression } = {\n\t\tvalidIf: {\n\t\t\tvalidate: (path: string, fieldDef: FormElementDef<{}>, expression: string) => evaluate(path, fieldDef, expression),\n\t\t\tdefaultMessage: 'This field is invalid' // The form editor should make the user enter message as this does not give the user any information about why the field is invalid\n\t\t},\n\t\tinvalidIf: {\n\t\t\tvalidate: (path: string, fieldDef: FormElementDef<{}>, expression: string) => !evaluate(path, fieldDef, expression),\n\t\t\tdefaultMessage: 'This field is invalid' // As with validIf form editor should make the user enter message as this does not give the user any information about why the field is invalid\n\t\t},\n\t\trequiredIf: {\n\t\t\tvalidate: (path: string, fieldDef: FormElementDef<{}>, expression: string) => {\n\t\t\t\tif (evaluate(path, fieldDef, expression)) {\n\t\t\t\t\treturn validationRules.required.validate(getValue(path))\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t},\n\t\t\tdefaultMessage: validationRules.required.defaultMessage\n\t\t}\n\t}\n\n\treturn validationsExpressions\n}","import {Config} from './hooks/useConfig'\r\n\r\nexport default interface FormDef {\r\n\telements: FormElementDef<{}>[]\r\n\tconfig?: Config\r\n\treferenceData?: ReferenceDataDef\r\n}\r\n\r\nexport interface FormElementDef<Attributes> {\r\n\ttype: string,\r\n\tattributes: Attributes,\r\n\tfieldId?: string,\r\n\tchildren?: Array<FormElementDef<any>>\r\n\tvalidation?: Array<string | ValidationConstraintDef>\r\n\tshowIf?: string[]\r\n\thidden: boolean\r\n}\r\n\r\nexport type ValidationConstraintDef = ValidationRuleDef | ValidationExpresionDef\r\n\r\nexport function isValidationExpresionDef(constraint: ValidationConstraintDef): constraint is ValidationExpresionDef {\r\n\treturn (constraint as ValidationExpresionDef).expression !== undefined\r\n}\r\n\r\nexport interface ValidationRuleDef {\r\n\tname: string,\r\n\targuments?: string[],\r\n\tmessage?: string\r\n}\r\n\r\nexport interface ValidationExpresionDef {\r\n\tname: string,\r\n\texpression: string,\r\n\tmessage?: string\r\n}\r\n\r\nexport interface ReferenceDataDef {\r\n\tinline?: {\r\n\t\t[name: string]: any\r\n\t}\r\n\thttp?: {\r\n\t\tname: string,\r\n\t\turl: string,\r\n\t\tmethod?: 'get' | 'GET' | 'post' | 'POST',\r\n\t\tbaseURL?: string\r\n\t}[]\r\n}\r\n\r\n","import React from 'react'\r\nimport {List} from './collection/List'\r\nimport {Autocomplete} from './input/Autocomplete'\r\nimport {ButtonGroup} from './input/ButtonGroup'\r\nimport {Dropdown} from './input/Dropdown'\r\nimport {TextInput} from './input/TextInput'\r\nimport {Heading} from './output/Heading'\r\nimport {Paragraph} from './output/Paragraph'\r\nimport {Accordion} from './pagination/Accordion'\r\nimport {Tabs} from './pagination/Tabs'\r\n\r\ninterface FormElementTypesMap {\r\n\t[type: string]: React.ReactNode\r\n}\r\n\r\nexport const formElementNonCollectionTypes: FormElementTypesMap = {\r\n\t'accordion': Accordion,\r\n\t'dropdown': Dropdown,\r\n\t'textInput': TextInput,\r\n\t'heading': Heading,\r\n\t'paragraph': Paragraph,\r\n\t'buttonGroup': ButtonGroup,\r\n\t'tabs': Tabs,\r\n\t'autocomplete': Autocomplete\r\n}\r\n\r\nexport const formElementCollectionTypes: FormElementTypesMap = {\r\n\t'list': List\r\n}\r\n\r\nexport const formElementTypes: FormElementTypesMap = {...formElementNonCollectionTypes, ...formElementCollectionTypes}\r\n\r\nexport function lookupElement(type: string): React.ReactNode {\r\n\tconst foundType = formElementTypes[type]\r\n\tif (!foundType) {\r\n\t\tconsole.warn('Could not find form element type:' + type)\r\n\t\treturn () => <div>Could not find form element type <code>{type}</code>.</div>\r\n\t}\r\n\treturn foundType\r\n}\r\n\r\nexport function isTypeACollection(type: string): boolean {\r\n\treturn formElementCollectionTypes.hasOwnProperty(type)\r\n}","import React from 'react'\r\n\r\ninterface LabelProps {\r\n\ttext: string,\r\n\thtmlFor: string,\r\n\terror: boolean\r\n}\r\n\r\nexport const Label = (props: LabelProps) => <label htmlFor={props.htmlFor} className={'mr-2 h5 ' + (props.error ? 'text-danger' : '')}>{props.text}</label>","import React from 'react'\r\nimport {FormElementDef} from '../FormDef'\r\nimport {useValidation} from '../hooks/useValidation'\r\nimport {Description} from './Description'\r\nimport {Label} from './Label'\r\n\r\n\r\ninterface FieldChromeProps {\r\n\tpath: string\r\n\tdef: FormElementDef<any>\r\n}\r\n\r\nexport const FieldChrome: React.FC<FieldChromeProps> = (props) => {\r\n\tconst error = useValidation().validateAndShouldShow(props.path, props.def)\r\n\r\n\treturn (<div className=\"form-group pt-2\">\r\n\t\t{props.def.attributes.label && <Label htmlFor={props.path} text={props.def.attributes.label} error={!!error}/>}\r\n\t\t{props.children}\r\n\t\t{error && <div className=\"error-message text-danger pt-2\">{error}</div>}\r\n\t\t{props.def.attributes.description && <Description path={props.path} text={props.def.attributes.description}/>}\r\n\t</div>)\r\n}","import axios from 'axios'\r\nimport {ReferenceDataDef} from '../FormDef'\r\nimport {useStore} from './useStore'\r\n\r\ninterface ReferenceData {\r\n\t[name: string]: any\r\n}\r\n\r\nconst REFERENCE_DATA_STORE_KEY = 'referenceData'\r\n\r\nexport const useReferenceData = () => {\r\n\tconst {set, get} = useStore()\r\n\r\n\treturn {\r\n\t\treferenceData: get<ReferenceData>(REFERENCE_DATA_STORE_KEY),\r\n\t\tsetReferenceData: (name: string, data: any) => {\r\n\t\t\tset(`${REFERENCE_DATA_STORE_KEY}.name`, data)\r\n\t\t},\r\n\t\tsetup: (referenceDataDef: ReferenceDataDef = {}) => {\r\n\t\t\treferenceDataDef.http!.forEach(httpReferenceDataDef => {\r\n\t\t\t\taxios(httpReferenceDataDef)\r\n\t\t\t\t\t.then(function (response) {\r\n\t\t\t\t\t\tset(`${REFERENCE_DATA_STORE_KEY}.${httpReferenceDataDef.name}`, response.data)\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}","import Octicon, {Search} from '@primer/octicons-react'\r\nimport React, {KeyboardEvent, useEffect, useRef, useState} from 'react'\r\nimport {Manager, Popper, Reference} from 'react-popper'\r\nimport {FieldChrome} from '../../display/FieldChrome'\r\nimport {useFieldState} from '../../hooks/useFieldState'\r\nimport {useSuggestion} from '../../hooks/useSuggestion'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\nexport interface AutocompleteAttributes {\r\n\tlabel: string\r\n\tdescription: string\r\n\tinfo?: string\r\n\toptions?: any[]\r\n\treferenceDataOptions?: string\r\n\tmultiple?: boolean\r\n\tlabelKey?: string\r\n\tvalueKey?: string\r\n\thttp?: { url?: string }\r\n\tpostfixSearchIcon?: boolean\r\n\r\n}\r\n\r\nconst defaultAutocompleteAttributes = {\r\n\toptions: [],\r\n\tmultiple: false,\r\n\tlabelKey: 'label',\r\n\tvalueKey: 'value',\r\n\tpostfixSearchIcon: true\r\n}\r\n\r\nexport const Autocomplete = (props: FormElementProps<AutocompleteAttributes>) => {\r\n\tconst attributes = {...defaultAutocompleteAttributes, ...props.definition.attributes}\r\n\r\n\tconst {focus, blur} = useFieldState()\r\n\tconst {inputValue, inputChanged, suggestions, showSuggestions, clear, selectOption} = useSuggestion(props.path, attributes)\r\n\tconst [cursor, setCursor] = useState<number>(-1)\r\n\r\n\tconst inputContainerRef = useRef<HTMLDivElement>(null)\r\n\tconst suggestionsContainerRef = useRef<HTMLDivElement>(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (showSuggestions && suggestions && suggestions.length > 0) {\r\n\t\t\tinputContainerRef.current!.scrollIntoView()\r\n\t\t}\r\n\t}, [showSuggestions, suggestions])\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.body.addEventListener('touchend', handlePotentialOutsideClick!)\r\n\t\tdocument.body.addEventListener('click', handlePotentialOutsideClick!)\r\n\t\treturn () => {\r\n\t\t\tdocument.body.removeEventListener('touchend', handlePotentialOutsideClick!)\r\n\t\t\tdocument.body.removeEventListener('click', handlePotentialOutsideClick!)\r\n\t\t}\r\n\t})\r\n\r\n\tconst handlePotentialOutsideClick = (event: Event) => {\r\n\t\tif (inputContainerRef && !inputContainerRef.current!.contains(event.target as Node)\r\n\t\t\t&& suggestionsContainerRef && !suggestionsContainerRef.current!.contains(event.target as Node)) {\r\n\t\t\tclear()\r\n\t\t}\r\n\t}\r\n\tconst handleInputChange = (changedValue: string) => {\r\n\t\tinputChanged(changedValue)\r\n\t\tsetCursor(-1)\r\n\t}\r\n\tconst handleSelectionClicked = (option: any) => {\r\n\t\tselectOption(option)\r\n\t\tsetCursor(-1)\r\n\t}\r\n\tconst handleBlur = () => {\r\n\t\tblur(props.path)\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst newTarget = document.activeElement\r\n\t\t\tif (!inputContainerRef.current!.contains(newTarget) && !suggestionsContainerRef.current!.contains(newTarget)) {\r\n\t\t\t\tclear()\r\n\t\t\t}\r\n\t\t}, 1)// Have to wait 1 ms so that document.activeElement is not body\r\n\t}\r\n\tconst handleFocus = () => {\r\n\t\tfocus(props.path)\r\n\t\tif (inputValue && inputValue.length > 0) {\r\n\t\t\thandleInputChange(inputValue)\r\n\t\t}\r\n\t}\r\n\tconst handleInputKeyDown = (event: KeyboardEvent) => {\r\n\t\tif (event.keyCode === 38 && cursor > 0) { // up\r\n\t\t\tsetCursor(cursor - 1)\r\n\t\t} else if (event.keyCode === 40 && cursor < suggestions.length - 1) { // down\r\n\t\t\tsetCursor(cursor + 1)\r\n\t\t} else if (event.keyCode === 13 && cursor >= 0 && cursor < suggestions.length) { // enter\r\n\t\t\tselectOption(suggestions[cursor])\r\n\t\t} else if (event.keyCode === 27) { // esc\r\n\t\t\tclear()\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn <FieldChrome path={props.path} def={props.definition}>\r\n\t\t<Manager>\r\n\t\t\t<Reference>\r\n\t\t\t\t{({ref}) => (<div ref={inputContainerRef} className=\"input-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\tid={props.path}\r\n\t\t\t\t\t\t\taria-describedby={props.path + '_description'}\r\n\t\t\t\t\t\t\tvalue={inputValue || ''}\r\n\t\t\t\t\t\t\tonChange={event => handleInputChange(event.target.value)}\r\n\t\t\t\t\t\t\tonKeyDown={handleInputKeyDown}\r\n\t\t\t\t\t\t\tonFocus={handleFocus}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{attributes.postfixSearchIcon && <div className=\"input-group-append\" onClick={() => inputChanged(inputValue)}>\r\n\t\t\t\t\t\t\t<span className=\"input-group-text\">\r\n\t\t\t\t\t\t\t\t<Octicon icon={Search} size='small'/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Reference>\r\n\t\t\t<Popper placement=\"bottom-start\">\r\n\t\t\t\t{({ref, style, placement}) => (\r\n\t\t\t\t\t<div ref={suggestionsContainerRef}>\r\n\t\t\t\t\t\t<div ref={ref} style={style} className=\"popper\" data-placement={placement}>\r\n\t\t\t\t\t\t\t{showSuggestions && suggestions && suggestions.length > 0 && <div className=\"dropdown-menu show\">\r\n\t\t\t\t\t\t\t\t{suggestions.map((suggestion, index) => {\r\n\t\t\t\t\t\t\t\t\tconst value = suggestion[attributes.valueKey]\r\n\t\t\t\t\t\t\t\t\tconst label = suggestion[attributes.labelKey]\r\n\t\t\t\t\t\t\t\t\treturn <button className={'dropdown-item' + (cursor === index ? ' active' : '')} key={value + label} onClick={() => handleSelectionClicked(suggestion)}>{label}</button>\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Popper>\r\n\t\t</Manager>\r\n\t</FieldChrome>\r\n}","import {findLastIndex} from 'lodash-es'\r\nimport {useState} from 'react'\r\nimport {FormElementDef} from '../FormDef'\r\nimport {useConfig} from './useConfig'\r\nimport {useFormState} from './useFormState'\r\nimport {useShowIf} from './useShowIf'\r\nimport {useValidation} from './useValidation'\r\n\r\nexport const usePagination = () => {\r\n\tconst config = useConfig().config\r\n\tconst {hasErrorsRecursively} = useValidation()\r\n\tconst {nextClicked, clearNextClicked, submitClicked} = useFormState()\r\n\tconst {shouldShow} = useShowIf()\r\n\tconst [path, setPath] = useState<string>('')\r\n\tconst [pages, setPages] = useState<FormElementDef<any>[]>([])\r\n\tconst [currentPageIndex, setCurrentPageIndex] = useState<number>(-1)\r\n\r\n\tconst firstShownPage = pages.findIndex(page => shouldShow(path, page))\r\n\tconst lastShownPage = findLastIndex(pages, page => shouldShow(path, page))\r\n\r\n\tconst currentIsFirst = currentPageIndex === firstShownPage\r\n\tconst currentIsLast = currentPageIndex === lastShownPage\r\n\r\n\tconst currentPageHasErrors = () => hasErrorsRecursively(path, pages[currentPageIndex])\r\n\tconst disableNext = config.disableNextWhenErrors && currentPageHasErrors()\r\n\r\n\r\n\treturn {\r\n\t\tsetUp: (path: string, setupPages: FormElementDef<any>[]) => {\r\n\t\t\tsetPath(path)\r\n\t\t\tsetPages(setupPages)\r\n\t\t\tif (currentPageIndex < 0) {\r\n\t\t\t\tsetCurrentPageIndex(setupPages.findIndex(page => shouldShow(path, page)))\r\n\t\t\t}\r\n\t\t},\r\n\t\tnextClicked: () => {\r\n\t\t\tif (currentPageHasErrors()) {\r\n\t\t\t\tnextClicked()\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = currentPageIndex + 1; i < pages.length; i++) {\r\n\t\t\t\t\tconst pageDef = pages[i]\r\n\t\t\t\t\tif (pageDef && shouldShow(path, pageDef)) {\r\n\t\t\t\t\t\tclearNextClicked()\r\n\t\t\t\t\t\tsetCurrentPageIndex(i)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tpreviousClicked: () => {\r\n\t\t\tfor (let i = currentPageIndex - 1; i >= 0; i--) {\r\n\t\t\t\tconst pageDef = pages[i]\r\n\t\t\t\tif (pageDef && shouldShow(path, pageDef)) {\r\n\t\t\t\t\tclearNextClicked()\r\n\t\t\t\t\tsetCurrentPageIndex(i)\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsubmitClicked: () => {\r\n\t\t\tif (currentPageHasErrors()) {\r\n\t\t\t\tsubmitClicked()\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Submit')\r\n\t\t\t}\r\n\t\t},\r\n\t\tcurrentPageIndex, setCurrentPageIndex, currentIsFirst, currentIsLast, currentPageHasErrors, disableNext\r\n\t}\r\n}","import classNames from 'classnames'\r\nimport React, {useEffect, useRef} from 'react'\r\nimport {FormElementDef} from '../../FormDef'\r\nimport {usePagination} from '../../hooks/usePagination'\r\nimport {useShowIf} from '../../hooks/useShowIf'\r\nimport {ChildFormElements} from '../ChildFormElements'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\nexport const Accordion = (props: FormElementProps<void>) => {\r\n\tconst {shouldShow} = useShowIf()\r\n\tconst pagination = usePagination()\r\n\tconst currentPageRef = useRef<HTMLDivElement>(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.definition.children && pagination.setUp(props.path, props.definition.children)\r\n\t})\r\n\r\n\tif (!props.definition.children) {\r\n\t\treturn null\r\n\t}\r\n\r\n\r\n\tconst scrollCurrentPageIntoView = () => {\r\n\t\tif (currentPageRef && currentPageRef.current) {\r\n\t\t\twindow.scroll({top: currentPageRef.current.getBoundingClientRect().top - 100})\r\n\t\t}\r\n\t}\r\n\r\n\tconst goToPage = (index: number) => {\r\n\t\tpagination.setCurrentPageIndex(index)\r\n\t\tscrollCurrentPageIntoView()\r\n\t}\r\n\r\n\tconst previous = () => {\r\n\t\tpagination.previousClicked()\r\n\t\tscrollCurrentPageIntoView()\r\n\t}\r\n\r\n\tconst next = () => {\r\n\t\tpagination.nextClicked()\r\n\t\tscrollCurrentPageIntoView()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\r\n\t\t\t{props.definition.children!.map((page, index) => shouldShow(props.path, page) && <div className=\"card\" key={props.path + '_PAGE_' + index}>\r\n\t\t\t\t\t{pagination.currentPageIndex === index && <div ref={currentPageRef}/>}\r\n\t\t\t\t\t<div className=\"card-header cursor-pointer\" onClick={() => goToPage(index)}>\r\n\t\t\t\t\t\t<h3 className=\"d-inline\">{page.attributes.label}</h3>{index < pagination.currentPageIndex && <button className=\"link-button text-muted px-1\" onClick={() => goToPage(index)}><u>edit</u></button>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{pagination.currentPageIndex === index && <div className=\"card-body m-1\">\r\n\t\t\t\t\t\t{page.children && <ChildFormElements childFormElements={page.children as FormElementDef<any>[]} parentPath={props.parentPath}/>}\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<nav aria-label=\"Page navigation\">\r\n\t\t\t\t\t\t\t\t\t<ul className=\"pagination mb-0\">\r\n\t\t\t\t\t\t\t\t\t\t{!pagination.currentIsFirst && <li className=\"page-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"page-link\" onClick={previous}>Previous</button>\r\n\t\t\t\t\t\t\t\t\t\t</li>}\r\n\t\t\t\t\t\t\t\t\t\t{!pagination.currentIsLast && <li className={classNames('page-item', {disabled: pagination.disableNext})}>\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"page-link\" onClick={next} disabled={pagination.disableNext}>Next</button>\r\n\t\t\t\t\t\t\t\t\t\t</li>}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{pagination.currentIsLast && <div className=\"col\">\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary float-right\" onClick={pagination.submitClicked}>Submit</button>\r\n\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\nimport {FieldChrome} from '../../display/FieldChrome'\nimport {useFieldState} from '../../hooks/useFieldState'\nimport {useReferenceData} from '../../hooks/useReferenceData'\nimport {useValues} from '../../hooks/useValues'\nimport {createKey} from '../../util'\nimport {FormElementProps} from '../FormElementProps'\n\nexport interface DropdownAttributes {\n\tlabel: string\n\tdescription: string\n\tinfo?: string\n\toptions?: string[]\n\treferenceDataOptions?: string\n}\n\ninterface Option {\n\tvalue: string | number,\n\tlabel: string\n}\n\ntype Data = string | number\n\nexport const Dropdown = (props: FormElementProps<DropdownAttributes>) => {\n\tconst referenceData = useReferenceData().referenceData\n\tconst {getValue, setValue} = useValues()\n\tconst {blur, focus} = useFieldState()\n\tlet options: Array<Option | Data> = props.definition.attributes.options || []\n\tif (props.definition.attributes.referenceDataOptions) {\n\t\toptions = options.concat(referenceData[props.definition.attributes.referenceDataOptions])\n\t}\n\treturn <FieldChrome path={props.path} def={props.definition}>\n\t\t<select\n\t\t\tclassName=\"form-control custom-select\"\n\t\t\tid={props.definition.fieldId}\n\t\t\tvalue={getValue(props.path) || ''}\n\t\t\tonChange={event => setValue(props.path, event.currentTarget.value)}\n\t\t\taria-describedby={props.definition.fieldId + '_description'}\n\t\t\tonFocus={() => focus(props.path)}\n\t\t\tonBlur={() => blur(props.path)}\n\t\t>\n\t\t\t<option value=\"\"/>\n\t\t\t{options.map((option) => {\n\t\t\t\tconst label = typeof option === 'object' ? option.label : option\n\t\t\t\tconst value = typeof option === 'object' ? option.value : option\n\t\t\t\treturn <option value={value} key={value || createKey()}>{label}</option>\n\t\t\t})}\n\t\t</select>\n\t</FieldChrome>\n}","import React from 'react'\nimport {FieldChrome} from '../../display/FieldChrome'\nimport {useFieldState} from '../../hooks/useFieldState'\nimport {useValues} from '../../hooks/useValues'\nimport {FormElementProps} from '../FormElementProps'\n\ninterface TextInputAttributes {\n\tlabel: string\n\tdescription: string\n\tinfo?: string\n}\n\nexport const TextInput = (props: FormElementProps<TextInputAttributes>) => {\n\tconst {getValue, setValue} = useValues()\n\tconst {blur, focus} = useFieldState()\n\n\treturn (<FieldChrome path={props.path} def={props.definition}>\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tclassName=\"form-control\"\n\t\t\tid={props.path}\n\t\t\taria-describedby={props.path + '_description'}\n\t\t\tvalue={getValue(props.path) || ''}\n\t\t\tonChange={event => setValue(props.path, event.currentTarget.value)}\n\t\t\tonFocus={() => focus(props.path)}\n\t\t\tonBlur={() => blur(props.path)}\n\t\t/>\n\t</FieldChrome>)\n}","import React from 'react'\nimport {FormElementProps} from '../FormElementProps'\n\ninterface HeadingAttributes {\n\tlevel: number\n\ttext: string\n}\n\nexport const Heading = (props: FormElementProps<HeadingAttributes>) =>\n\tReact.createElement('h' + props.definition.attributes.level, null, props.definition.attributes.text)","import React from 'react'\nimport {FormElementProps} from '../FormElementProps'\n\n\ninterface ParagraphAttributes {\n\ttext: string\n}\n\nexport const Paragraph = (props: FormElementProps<ParagraphAttributes>) => <p>{props.definition.attributes.text}</p>","import React, {useState} from 'react'\nimport {FieldChrome} from '../../display/FieldChrome'\nimport {useFieldState} from '../../hooks/useFieldState'\n\nimport {useValues} from '../../hooks/useValues'\nimport {FormElementProps} from '../FormElementProps'\n\ninterface ButtonGroupAttributes {\n\tlabel: string\n\tdescription?: string\n\tinfo?: string\n\toptions: string[]\n}\n\nexport const ButtonGroup = (props: FormElementProps<ButtonGroupAttributes>) => {\n\tconst {setValue, getValue} = useValues()\n\tconst {blur, focus} = useFieldState()\n\tconst value = getValue(props.path)\n\tconst [buttonFocus, setButtonFocus] = useState<number | null>(null)\n\n\treturn (\n\t\t<FieldChrome path={props.path} def={props.definition}>\n\t\t\t<div className=\"btn-group-wrapper\"\n\t\t\t\t onFocus={() => focus(props.path)}\n\t\t\t\t onBlur={() => blur(props.path)}\n\t\t\t>\n\t\t\t\t<div className=\"btn-group btn-group-toggle\">\n\t\t\t\t\t{props.definition.attributes.options.map((option, index) => (\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\tclassName={'btn btn-outline-primary' + (value === option ? ' active' : '') + (buttonFocus === index ? ' focus' : '')}\n\t\t\t\t\t\t\tkey={props.path + '_OPTION_' + option}\n\t\t\t\t\t\t\tonFocus={() => setButtonFocus(index)}\n\t\t\t\t\t\t\tonBlur={() => setButtonFocus(null)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tvalue={option}\n\t\t\t\t\t\t\t\tchecked={option === value}\n\t\t\t\t\t\t\t\tonChange={event => setValue(props.path, event.currentTarget.value)}\n\t\t\t\t\t\t\t/>{option}\n\t\t\t\t\t\t</label>))\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</FieldChrome>)\n}","import classNames from 'classnames'\r\nimport React, {useEffect, useRef} from 'react'\r\nimport {FormElementDef} from '../../FormDef'\r\nimport {usePagination} from '../../hooks/usePagination'\r\nimport {useShowIf} from '../../hooks/useShowIf'\r\nimport {ChildFormElements} from '../ChildFormElements'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\ninterface TabAttributes {\r\n\tpill?: boolean\r\n}\r\n\r\n\r\nexport const Tabs = (props: FormElementProps<TabAttributes>) => {\r\n\tconst {shouldShow} = useShowIf()\r\n\tconst pagination = usePagination()\r\n\tconst tabsRef = useRef<HTMLDivElement>(null)\r\n\r\n\t/* eslint-disable react-hooks/exhaustive-deps */\r\n\tuseEffect(() => {\r\n\t\tprops.definition.children && pagination.setUp(props.path, props.definition.children)\r\n\t}, [props.definition.children, props.path])\r\n\t/* eslint-enable react-hooks/exhaustive-deps */\r\n\r\n\tuseEffect(() => {\r\n\t\tif (tabsRef && tabsRef.current && tabsRef.current.getBoundingClientRect().top < 0) {\r\n\t\t\ttabsRef.current.scrollIntoView()\r\n\t\t}\r\n\t}, [pagination.currentPageIndex])\r\n\r\n\tif (!props.definition.children) {\r\n\t\treturn null\r\n\t}\r\n\r\n\tif (pagination.currentPageIndex < 0) {\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"card rounded-0\">\r\n\t\t\t<div className=\"card-header\" ref={tabsRef}>\r\n\t\t\t\t<ul className={'nav ' + (props.definition.attributes.pill ? 'nav-pills card-header-pills' : 'nav-tabs card-header-tabs')}>\r\n\t\t\t\t\t{props.definition.children!.map((page, index) => {\r\n\t\t\t\t\t\tif (!shouldShow(props.path, page)) {\r\n\t\t\t\t\t\t\treturn null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst key = props.path + '_PAGE_' + index\r\n\t\t\t\t\t\t//The bootstrap btn-link doesn't style the same as a link with a href when used as nav-link\r\n\t\t\t\t\t\t/* eslint-disable jsx-a11y/anchor-is-valid, no-script-url */\r\n\t\t\t\t\t\tif (index < pagination.currentPageIndex) {\r\n\t\t\t\t\t\t\treturn <li className=\"nav-item\" key={key}>\r\n\t\t\t\t\t\t\t\t<a className=\"nav-link\" href=\"javascript:void(0)\" onClick={() => pagination.setCurrentPageIndex(index)}>{page.attributes.label}</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/* eslint-enable no-script-url, jsx-a11y/anchor-is-valid */\r\n\t\t\t\t\t\tif (index === pagination.currentPageIndex) {\r\n\t\t\t\t\t\t\treturn <li className=\"nav-item\" key={key}>\r\n\t\t\t\t\t\t\t\t<button className=\"nav-link active\">{page.attributes.label}</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (index > pagination.currentPageIndex) {\r\n\t\t\t\t\t\t\treturn <li className=\"nav-item\" key={key}>\r\n\t\t\t\t\t\t\t\t<button className=\"nav-link disabled\" tabIndex={-1} aria-disabled=\"true\">{page.attributes.label}</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<ChildFormElements childFormElements={props.definition.children[pagination.currentPageIndex].children as FormElementDef<any>[]} parentPath={props.parentPath}/>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<nav aria-label=\"Page navigation\">\r\n\t\t\t\t\t\t\t\t<ul className=\"pagination mb-0\">\r\n\t\t\t\t\t\t\t\t\t{!pagination.currentIsFirst && <li className=\"page-item\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"page-link\" onClick={pagination.previousClicked}>Previous</button>\r\n\t\t\t\t\t\t\t\t\t</li>}\r\n\t\t\t\t\t\t\t\t\t{!pagination.currentIsLast && <li className={classNames('page-item', {disabled: pagination.disableNext})}>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"page-link\" onClick={pagination.nextClicked} disabled={pagination.disableNext}>Next</button>\r\n\t\t\t\t\t\t\t\t\t</li>}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{pagination.currentIsLast && <div className=\"col\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-primary float-right\" onClick={pagination.submitClicked}>Submit</button>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>)\r\n}","import axios from 'axios'\nimport {useEffect, useState} from 'react'\nimport {useFieldState} from './useFieldState'\nimport {useReferenceData} from './useReferenceData'\nimport {useValues} from './useValues'\n\ninterface SuggestAttributes {\n\toptions?: any[]\n\treferenceDataOptions?: string\n\tmultiple?: boolean\n\tlabelKey?: string\n\tvalueKey?: string\n\thttp?: { url?: string }\n}\n\nexport function useSuggestion(path: string, attributes: SuggestAttributes) {\n\tconst {referenceData} = useReferenceData()\n\tconst {setValue} = useValues()\n\tconst {getFieldState, setSelectedSuggestionLabel} = useFieldState()\n\tconst fieldState = getFieldState(path)\n\n\tconst [suggestions, setSuggestions] = useState<any[]>([])\n\tconst [httpSuggestions, setHttpSuggestions] = useState<any[]>([])\n\tconst [inlineSuggestions, setInlineSuggestions] = useState<any[]>([])\n\tconst [inputValue, setInputValue] = useState<string>(fieldState.selectedSuggestionLabel || '')\n\tconst [showSuggestions, setShowSuggestions] = useState(false)\n\n\tuseEffect(() => {\n\t\tsetSuggestions(inlineSuggestions.concat(httpSuggestions))\n\t}, [inlineSuggestions, httpSuggestions])\n\n\tconst inputChanged = (newInputValue: string) => {\n\t\tsetInputValue(newInputValue)\n\t\tsetInlineSuggestions([])\n\t\tsetHttpSuggestions([])\n\t\tsetSuggestions([])\n\t\tconst lowerInputValue = newInputValue.trim().toLowerCase()\n\t\tconst lowerSelectedLabel = fieldState.selectedSuggestionLabel && fieldState.selectedSuggestionLabel.toLowerCase()\n\t\tif (lowerInputValue !== lowerSelectedLabel && lowerInputValue.length > 0) {\n\n\t\t\tconst referenceDataOptions = (attributes.referenceDataOptions && referenceData[attributes.referenceDataOptions]) || []\n\t\t\tconst inlineOptions = attributes.options!.concat(referenceDataOptions)\n\n\t\t\tconst matchingInlineOptions = inlineOptions.filter(option => {\n\t\t\t\treturn JSON.stringify(option).toLowerCase().includes(lowerInputValue)\n\t\t\t})\n\n\t\t\tsetInlineSuggestions(matchingInlineOptions)\n\n\t\t\tif (attributes.http && attributes.http.url) {\n\t\t\t\taxios.get<any[]>(attributes.http.url + newInputValue)\n\t\t\t\t\t.then(function (response) {\n\t\t\t\t\t\tsetHttpSuggestions(response.data)\n\t\t\t\t\t})\n\t\t\t}\n\n\t\t\tsetShowSuggestions(true)\n\t\t}\n\t}\n\n\tconst clear = () => {\n\t\tsetShowSuggestions(false)\n\t}\n\n\tconst selectOption = (option: any) => {\n\t\tif (typeof option === 'string') {\n\n\t\t\tsetValue(path, option)\n\t\t\tsetSelectedSuggestionLabel(path, option)\n\t\t\tsetInputValue(option)\n\n\t\t} else if (typeof option === 'object') {\n\n\t\t\tif (attributes.valueKey) {\n\t\t\t\tsetValue(path, option[attributes.valueKey])\n\t\t\t}\n\t\t\tsetSelectedSuggestionLabel(path, option[attributes.labelKey || 'label'])\n\t\t\tsetInputValue(option[attributes.labelKey || 'label'])\n\n\t\t}\n\t\tsetShowSuggestions(false)\n\t}\n\n\treturn {inputValue, inputChanged, suggestions, showSuggestions, clear, selectOption}\n}","import {times} from 'lodash-es'\nimport React from 'react'\nimport {Description} from '../../display/Description'\nimport {useValues} from '../../hooks/useValues'\nimport {ordinal} from '../../util'\nimport {ChildFormElements} from '../ChildFormElements'\nimport {FormElementProps} from '../FormElementProps'\n\n\nexport interface IterationAttributes {\n\tlabel: string\n\titemLabel: string\n\tdescription: string\n}\n\nexport const List = (props: FormElementProps<IterationAttributes>) => {\n\tconst {getCollectionSize, addToCollection, deleteFromCollection} = useValues()\n\treturn (\n\t\t<div className=\"form-group\">\n\t\t\t<span className=\"h4 align-middle mr-2\">{props.definition.attributes.label}</span>\n\t\t\t{props.definition.attributes.description && <Description path={props.path} text={props.definition.attributes.description}/>}\n\t\t\t{times(getCollectionSize(props.path), (index: number) =>\n\t\t\t\t<div className={'card border-bottom mb-3' + (index === 0 ? ' mt-2' : '')} key={props.path + '_COLLECTION_' + index}>\n\t\t\t\t\t<h5 className=\"card-header\">{ordinal(index + 1)} {props.definition.attributes.itemLabel}\n\t\t\t\t\t\t<button className=\"close text-dark\" onClick={() => deleteFromCollection(props.path, index)}>\n\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</h5>\n\t\t\t\t\t<div className=\"card-body pb-0\">\n\t\t\t\t\t\t{props.definition.children && <ChildFormElements childFormElements={props.definition.children} parentPath={props.path + '[' + index + ']'}/>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<button className=\"btn btn-primary d-inline\" onClick={() => addToCollection(props.path)}>Add</button>\n\t\t</div>)\n}\n","import React from 'react'\r\nimport {FormElementDef} from '../FormDef'\r\nimport {useShowIf} from '../hooks/useShowIf'\r\nimport {createPath} from '../util'\r\nimport {lookupElement} from './formElementTypes'\r\n\r\ninterface ChildFormElementsProps {\r\n\tchildFormElements: FormElementDef<any>[]\r\n\tparentPath: string\r\n}\r\n\r\nexport const ChildFormElements = (props: ChildFormElementsProps) => {\r\n\tconst {shouldShow} = useShowIf()\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.childFormElements.map((elementDef, index) => {\r\n\t\t\t\tconst path = createPath(props.parentPath, elementDef.fieldId)\r\n\t\t\t\tif (!shouldShow(path, elementDef)) {\r\n\t\t\t\t\treturn null\r\n\t\t\t\t}\r\n\t\t\t\tconst Child: any = lookupElement(elementDef.type)\r\n\t\t\t\treturn React.createElement(Child, {\r\n\t\t\t\t\tdefinition: elementDef,\r\n\t\t\t\t\tparentPath: props.parentPath,\r\n\t\t\t\t\tpath: path,\r\n\t\t\t\t\tkey: props.parentPath + '_' + index\r\n\t\t\t\t})\r\n\t\t\t})}\r\n\t\t</div>)\r\n}","import React, {useEffect} from 'react'\r\nimport FormDef from './FormDef'\r\nimport {ChildFormElements} from './formElements/ChildFormElements'\r\nimport {useConfig} from './hooks/useConfig'\r\nimport {useReferenceData} from './hooks/useReferenceData'\r\n\r\nexport interface FormProps {\r\n\tformDef: FormDef\r\n}\r\n\r\nexport const Form: React.FC<FormProps> = (props) => {\r\n\tconst config = useConfig()\r\n\tconst referenceData = useReferenceData()\r\n\r\n\t/* eslint-disable react-hooks/exhaustive-deps */\r\n\tuseEffect(() => {\r\n\t\tconfig.setup(props.formDef.config)\r\n\t\treferenceData.setup(props.formDef.referenceData)\r\n\t}, [props.formDef.config, props.formDef.referenceData])\r\n\r\n\treturn <div className=\"\">\r\n\t\t<ChildFormElements childFormElements={props.formDef.elements} parentPath=\"\"/>\r\n\t</div>\r\n}","//import 'react-app-polyfill/ie11'\r\nimport axios from 'axios'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Form} from './Form'\r\nimport FormDef from './FormDef'\r\nimport {StoreProvider} from './hooks/useStore'\r\n\r\nimport './index.css'\r\n\r\naxios.get<FormDef>('api/formDefinition/exampleFormDefinition.json')\r\n\t.then(function (response) {\r\n\t\tReactDOM.render(\r\n\t\t\t<StoreProvider>\r\n\t\t\t\t<Form formDef={response.data}/>\r\n\t\t\t</StoreProvider>,\r\n\t\t\tdocument.getElementById('form')\r\n\t\t)\r\n\t})"],"sourceRoot":""}