{"version":3,"sources":["validation/ValidationRule.ts","state/useContainer.tsx","state/ConfigContainer.ts","state/FieldStateContainer.ts","state/ValuesContainer.ts","state/ExpressionContainer.ts","state/ShowIfContainer.ts","util.ts","display/Description.tsx","state/FormStateContainer.ts","state/ValidationContainer.ts","FormDef.ts","formElements/formElementTypes.tsx","display/Label.tsx","display/FieldChrome.tsx","state/ReferenceDataContainer.ts","state/PaginationContainer.ts","formElements/pagination/Accordion.tsx","formElements/input/Dropdown.tsx","formElements/input/TextInput.tsx","formElements/output/Heading.tsx","formElements/output/Paragraph.tsx","formElements/input/ButtonGroup.tsx","formElements/pagination/Tabs.tsx","formElements/input/Suggest.tsx","formElements/collection/List.tsx","formElements/ChildFormElements.tsx","Form.tsx","index.tsx"],"names":["validationRuleMap","required","validate","value","length","defaultMessage","email","isEmail","alpha","isAlpha","numeric","isNumeric","alphanumeric","isAlphanumeric","currency","isCurrency","createContainer","useHook","Context","React","createContext","Provider","props","initialState","react_default","a","createElement","children","useContainer","useContext","Error","container","defaultConfig","showErrors","showErrorsDelay","disableNextWhenErrors","ConfigContainer","userConfig","arguments","undefined","config","Object","objectSpread","FieldStateContainer","_useState","useState","_useState2","slicedToArray","fieldStates","setFieldStates","setEventNow","path","event","nextFieldStates","produce","draftFieldStates","fieldState","Date","now","get","focus","valueChanged","blur","ValuesContainer","fieldStateContainer","formValues","setFormValues","setValue","nextFormValues","draftFormValues","set","console","log","JSON","stringify","getValue","addToCollection","oldCollection","newCollection","concat","toConsumableArray","deleteFromCollection","index","slice","getCollectionSize","collection","jexl","addTransform","val","toUpperCase","toLowerCase","addBinaryOp","left","right","ExpressionContainer","configContainer","valuesContainer","evaluate","fieldDef","expression","fieldValue","context","evalSync","expressionValidations","validIf","invalidIf","requiredIf","ShowIfContainer","expressionContainer","shouldShow","showIf","some","createPath","parentPath","fieldId","Description","id","className","text","FormStateContainer","formState","setFormState","nextClicked","nextFormStates","draftFormState","clearNextClicked","submitClicked","nextOrSubmit","ValidationContainer","formStateContainer","showIfContainer","nextTick","setNextTick","useEffect","setTimeout","validation","reduce","message","constraint","validationRule","isValidationExpresionDef","expressionValidation","name","validateConstraint","shouldShowErrors","timeHasPassedAndShouldShowError","time","validateAndShouldShow","hasErrorsRecursively","childFieldDef","type","childPath","formElementCollectionTypes","hasOwnProperty","size","Label","htmlFor","error","FieldChrome","def","attributes","label","Label_Label","description","Description_Description","ReferenceDataContainer","referenceDataDef","inline","referenceData","setReferenceData","http","forEach","httpReferenceDataDef","axios","then","response","data","draftReferenceData","PaginationContainer","validationContainer","setPath","_useState3","_useState4","pages","setPages","_useState5","_useState6","currentPageIndex","setCurrentPageIndex","firstShownPage","findIndex","page","lastShownPage","findLastIndex","currentIsFirst","currentIsLast","currentPageHasErrors","disableNext","setUp","setupPages","previousClicked","i","pageDef","formElementNonCollectionTypes","accordion","paginationContainer","currentPageRef","useRef","definition","scrollCurrentPageIntoView","current","window","scroll","top","getBoundingClientRect","goToPage","previous","next","role","aria-multiselectable","map","key","ref","onClick","ChildFormElements_ChildFormElements","childFormElements","aria-label","classNames","disabled","dropdown","referenceDataContainer","formValuesContainer","options","referenceDataOptions","FieldChrome_FieldChrome","onChange","currentTarget","aria-describedby","onFocus","onBlur","option","Math","random","toString","substring","textInput","heading","level","paragraph","buttonGroup","setFocus","checked","tabs","pill","href","tabIndex","aria-disabled","suggest","lib","multiple","placeholder","list","times","n","s","v","ordinal","itemLabel","aria-hidden","formElementTypes","ChildFormElements","elementDef","hidden","Child","foundType","warn","lookupElement","Form","formDef","elements","ReactDOM","render","Form_Form","document","getElementById","catch"],"mappings":"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","file":"static/js/main.ee329108.chunk.js","sourcesContent":["import isAlpha from 'validator/lib/isAlpha'\r\nimport isAlphanumeric from 'validator/lib/isAlphanumeric'\r\nimport isCurrency from 'validator/lib/isCurrency'\r\nimport isEmail from 'validator/lib/isEmail'\r\nimport isNumeric from 'validator/lib/isNumeric'\r\n\r\ninterface ValidationRule {\r\n\tvalidate: (value: string, args?: string | string[]) => boolean,\r\n\tdefaultMessage: string\r\n}\r\n\r\nexport const validationRuleMap: { [name: string]: ValidationRule } = {\r\n\trequired: {\r\n\t\tvalidate: (value: string) => !(value == null || value.length <= 0 || value === ''),\r\n\t\tdefaultMessage: 'This field is required'\r\n\t},\r\n\temail: {\r\n\t\tvalidate: (value: string) => isEmail(value),\r\n\t\tdefaultMessage: 'This field must be an email address'\r\n\t},\r\n\talpha: {\r\n\t\tvalidate: (value: string) => isAlpha(value),\r\n\t\tdefaultMessage: 'This field must be only letters'\r\n\t},\r\n\tnumeric: {\r\n\t\tvalidate: (value: string) => isNumeric(value),\r\n\t\tdefaultMessage: 'This field must be only numbers'\r\n\t},\r\n\talphanumeric: {\r\n\t\tvalidate: (value: string) => isAlphanumeric(value),\r\n\t\tdefaultMessage: 'This field must be only letters and numbers'\r\n\t},\r\n\tcurrency: {\r\n\t\tvalidate: (value: string) => isCurrency(value),\r\n\t\tdefaultMessage: 'This field must be a currency amount'\r\n\t}\r\n}","import React from 'react'\r\n\r\nexport interface ContainerProviderProps<State = any> {\r\n\tinitialState?: State\r\n\tchildren: React.ReactNode\r\n}\r\n\r\nexport interface Container<Value, State = any> {\r\n\tProvider: React.ComponentType<ContainerProviderProps<State>>\r\n\tuseContainer: () => Value\r\n}\r\n\r\nexport function createContainer<Value, State = any>(useHook: (initialState?: State) => Value): Container<Value, State> {\r\n\tlet Context = React.createContext<Value | null>(null)\r\n\r\n\tfunction Provider(props: ContainerProviderProps<State>) {\r\n\t\tlet value = useHook(props.initialState)\r\n\t\treturn <Context.Provider value={value}>{props.children}</Context.Provider>\r\n\t}\r\n\r\n\tfunction useContainer(): Value {\r\n\t\tlet value = React.useContext(Context)\r\n\t\tif (value === null) {\r\n\t\t\tthrow new Error('Component must be wrapped with <Container.Provider>')\r\n\t\t}\r\n\t\treturn value\r\n\t}\r\n\r\n\treturn {Provider, useContainer}\r\n}\r\n\r\nexport function useContainer<Value, State = any>(container: Container<Value, State>): Value {\r\n\treturn container.useContainer()\r\n}","import {createContainer} from './useContainer'\r\n\r\n\r\ntype showErrors = 'immediately' | 'onFocus' | 'onValueChanged' | 'onBlur' | 'nextOrSummit'\r\n\r\nexport interface Config {\r\n\tshowErrors: showErrors\r\n\tshowErrorsDelay: number //milliseconds\r\n\tdisableNextWhenErrors: boolean\r\n}\r\n\r\nconst defaultConfig: Config = {\r\n\tshowErrors: 'onFocus',\r\n\tshowErrorsDelay: 500,\r\n\tdisableNextWhenErrors: false\r\n}\r\n\r\nexport const ConfigContainer = createContainer((userConfig = {}) => {\r\n\tconst config = {...defaultConfig, ...userConfig}\r\n\treturn {config}\r\n})","import produce from 'immer'\r\nimport {useState} from 'react'\r\nimport {createContainer} from './useContainer'\r\n\r\ntype Events = 'focus' | 'valueChanged' | 'blur'\r\n\r\ntype FieldState = {\r\n\t[Event in Events]: number //Date.now() when field first got focused\r\n}\r\n\r\nexport const FieldStateContainer = createContainer(() => {\r\n\tconst [fieldStates, setFieldStates] = useState<{ [path: string]: FieldState }>({})\r\n\tconst get = (path: string) => fieldStates[path] || {}\r\n\tconst setEventNow = (path: string, event: Events) => {\r\n\t\tconst nextFieldStates = produce(fieldStates, draftFieldStates => {\r\n\t\t\t\tconst fieldState = draftFieldStates[path] || {}\r\n\t\t\t\tif (!fieldState[event]) {\r\n\t\t\t\t\tfieldState[event] = Date.now()\r\n\t\t\t\t}\r\n\t\t\t\tdraftFieldStates[path] = fieldState\r\n\t\t\t}\r\n\t\t)\r\n\t\tsetFieldStates(nextFieldStates)\r\n\t}\r\n\tconst focus = (path: string) => setEventNow(path, 'focus')\r\n\tconst valueChanged = (path: string) => setEventNow(path, 'valueChanged')\r\n\tconst blur = (path: string) => setEventNow(path, 'blur')\r\n\r\n\treturn {fieldStates, get, focus, valueChanged, blur}\r\n})","import produce from 'immer'\r\nimport get from 'lodash-es/get'\r\nimport set from 'lodash-es/set'\r\nimport {useState} from 'react'\r\nimport {FieldStateContainer} from './FieldStateContainer'\r\nimport {createContainer, useContainer} from './useContainer'\r\n\r\nexport const ValuesContainer = createContainer((initialState = {}) => {\r\n\tconst fieldStateContainer = useContainer(FieldStateContainer)\r\n\tconst [formValues, setFormValues] = useState<{}>(initialState)\r\n\r\n\tconst setValue = (path: string, value: any) => {\r\n\t\tconst nextFormValues = produce(formValues, draftFormValues => {\r\n\t\t\tset(draftFormValues, path, value)\r\n\t\t})\r\n\t\tsetFormValues(nextFormValues)\r\n\t\tfieldStateContainer.valueChanged(path)\r\n\t\tconsole.log('formValues:', JSON.stringify(nextFormValues, null, 2))\r\n\t}\r\n\r\n\tfunction getValue(path: string): string {\r\n\t\treturn get(formValues, path)\r\n\t}\r\n\r\n\tconst addToCollection = (path: string) => {\r\n\t\tconst nextFormValues = produce(formValues, draftFormValues => {\r\n\t\t\tconst oldCollection = get(draftFormValues, path, [])\r\n\t\t\tconst newCollection = [...oldCollection, {}]\r\n\t\t\tset(draftFormValues, path, newCollection)\r\n\t\t})\r\n\t\tsetFormValues(nextFormValues)\r\n\t}\r\n\tconst deleteFromCollection = (path: string, index: number) => {\r\n\t\tconst nextFormValues = produce(formValues, draftFormValues => {\r\n\t\t\tconst oldCollection = get(draftFormValues, path)\r\n\t\t\tconst newCollection = [...oldCollection.slice(0, index), ...oldCollection.slice(index + 1)]\r\n\t\t\tset(draftFormValues, path, newCollection)\r\n\t\t})\r\n\t\tsetFormValues(nextFormValues)\r\n\t}\r\n\tconst getCollectionSize = (path: string) => {\r\n\t\tconst collection = get(formValues, path)\r\n\t\treturn collection ? collection.length : 0\r\n\t}\r\n\treturn {formValues, setValue, getValue, addToCollection, deleteFromCollection, getCollectionSize}\r\n})","import jexl from 'jexl'\r\nimport isAlpha from 'validator/lib/isAlpha'\r\nimport isAlphanumeric from 'validator/lib/isAlphanumeric'\r\nimport isCurrency from 'validator/lib/isCurrency'\r\nimport isEmail from 'validator/lib/isEmail'\r\nimport isNumeric from 'validator/lib/isNumeric'\r\nimport {FormElementDef} from '../FormDef'\r\nimport {validationRuleMap} from '../validation/ValidationRule'\r\nimport {ConfigContainer} from './ConfigContainer'\r\nimport {createContainer, useContainer} from './useContainer'\r\nimport {ValuesContainer} from './ValuesContainer'\r\n\r\n//Basic transforms\r\njexl.addTransform('toUpperCase', (val) => val.toUpperCase())\r\njexl.addTransform('toLowerCase', (val) => val.toLowerCase())\r\n\r\n//Transform as a boolean validation\r\njexl.addTransform('isAlpha', (val) => val && isAlpha(val))\r\njexl.addTransform('isAlphanumeric', (val) => val && isAlphanumeric(val))\r\njexl.addTransform('isCurrency', (val) => val && isCurrency(val))\r\njexl.addTransform('isEmail', (val) => val && isEmail(val))\r\njexl.addTransform('isNumeric', (val) => val && isNumeric(val))\r\n\r\n//case-insensitive string equality\r\njexl.addBinaryOp('_=', 20, (left, right) => left.toLowerCase() === right.toLowerCase())\r\n\r\ninterface ValidationExpression {\r\n\tvalidate: (path: string, fieldDef: FormElementDef<{}>, expression: string) => boolean,\r\n\tdefaultMessage: string\r\n}\r\n\r\nfunction useExpression() {\r\n\tconst configContainer = useContainer(ConfigContainer)\r\n\tconst valuesContainer = useContainer(ValuesContainer)\r\n\r\n\r\n\tconst evaluate = <T>(path: string, fieldDef: FormElementDef<{}>, expression: string): T => {\r\n\t\tconst fieldValue = valuesContainer.getValue(path)\r\n\t\tconst context = {\r\n\t\t\tformValues: valuesContainer.formValues,\r\n\t\t\tfieldValue,\r\n\t\t\tvalue: fieldValue,\r\n\t\t\tconfig: configContainer.config,\r\n\t\t\tfieldDef\r\n\t\t}\r\n\t\treturn jexl.evalSync(expression, context)\r\n\t}\r\n\r\n\tconst expressionValidations: { [name: string]: ValidationExpression } = {\r\n\t\tvalidIf: {\r\n\t\t\tvalidate: (path: string, fieldDef: FormElementDef<{}>, expression: string) => evaluate(path, fieldDef, expression),\r\n\t\t\tdefaultMessage: 'This field is invalid' // The form editor should make the user enter message as this does not give the user any information about why the field is invalid\r\n\t\t},\r\n\t\tinvalidIf: {\r\n\t\t\tvalidate: (path: string, fieldDef: FormElementDef<{}>, expression: string) => !evaluate(path, fieldDef, expression),\r\n\t\t\tdefaultMessage: 'This field is invalid' // As with validIf form editor should make the user enter message as this does not give the user any information about why the field is invalid\r\n\t\t},\r\n\t\trequiredIf: {\r\n\t\t\tvalidate: (path: string, fieldDef: FormElementDef<{}>, expression: string) => {\r\n\t\t\t\tif (evaluate(path, fieldDef, expression)) {\r\n\t\t\t\t\treturn validationRuleMap.required.validate(valuesContainer.getValue(path))\r\n\t\t\t\t}\r\n\t\t\t\treturn true\r\n\t\t\t},\r\n\t\t\tdefaultMessage: validationRuleMap.required.defaultMessage\r\n\t\t}\r\n\t}\r\n\r\n\treturn {evaluate, expressionValidations}\r\n}\r\n\r\nexport const ExpressionContainer = createContainer(useExpression)","import {FormElementDef} from '../FormDef'\r\nimport {ExpressionContainer} from './ExpressionContainer'\r\nimport {createContainer, useContainer} from './useContainer'\r\n\r\nexport const ShowIfContainer = createContainer(() => {\r\n\tconst expressionContainer = useContainer(ExpressionContainer)\r\n\r\n\tfunction shouldShow(path: string, fieldDef: FormElementDef<{}>): boolean {\r\n\t\tif (!fieldDef.showIf) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\treturn fieldDef.showIf.some(expression => expressionContainer.evaluate(path, fieldDef, expression))\r\n\t}\r\n\r\n\treturn {shouldShow}\r\n})","export const createKey = () => (Math.random() + 1).toString(36).substring(2)\r\n\r\nexport const ordinal = (n: number): string => {\r\n\tconst s = ['th', 'st', 'nd', 'rd'],\r\n\t\tv = n % 100\r\n\treturn n + (s[(v - 20) % 10] || s[v] || s[0])\r\n}\r\n\r\nexport const createPath = (parentPath: string, fieldId?: string): string => {\r\n\tif (!fieldId) {\r\n\t\treturn parentPath\r\n\t}\r\n\tif (parentPath !== '') {\r\n\t\treturn parentPath + '.' + fieldId\r\n\t}\r\n\treturn fieldId\r\n\r\n}","import React from 'react'\r\n\r\ninterface DescriptionProps {\r\n\tpath: string,\r\n\ttext: string\r\n}\r\n\r\nexport const Description = (props: DescriptionProps) => (\r\n\t<div id={props.path + '_description'} className=\"pt-2 text-muted description\">{props.text}</div>\r\n)","import produce from 'immer'\r\nimport {useState} from 'react'\r\nimport {createContainer} from './useContainer'\r\n\r\ntype FormState = {\r\n\tnextClicked?: number\r\n\tsubmitClicked?: number\r\n\tnextOrSubmitClicked?: number //Date.now() when field first got focused\r\n}\r\n\r\nexport const FormStateContainer = createContainer(() => {\r\n\tconst [formState, setFormState] = useState<FormState>({})\r\n\r\n\tconst nextClicked = () => {\r\n\t\tconst nextFormStates = produce(formState, draftFormState => {\r\n\t\t\t\tif (!draftFormState.nextClicked) {\r\n\t\t\t\t\tdraftFormState.nextClicked = Date.now()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t\tsetFormState(nextFormStates)\r\n\t}\r\n\r\n\tconst clearNextClicked = () => {\r\n\t\tconst nextFormStates = produce(formState, draftFormState => {\r\n\t\t\t\tdraftFormState.nextClicked = undefined\r\n\t\t\t}\r\n\t\t)\r\n\t\tsetFormState(nextFormStates)\r\n\r\n\t}\r\n\r\n\tconst submitClicked = () => {\r\n\t\tconst nextFormStates = produce(formState, draftFormState => {\r\n\t\t\t\tif (!draftFormState.submitClicked) {\r\n\t\t\t\t\tdraftFormState.submitClicked = Date.now()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t)\r\n\t\tsetFormState(nextFormStates)\r\n\t}\r\n\r\n\tconst nextOrSubmit = (): boolean => {\r\n\t\treturn !!formState.nextClicked || !!formState.submitClicked\r\n\t}\r\n\r\n\treturn {formState, nextClicked, clearNextClicked, submitClicked, nextOrSubmit}\r\n})","import {useEffect, useState} from 'react'\r\nimport {FormElementDef, isValidationExpresionDef, ValidationConstraintDef} from '../FormDef'\r\nimport {isTypeACollection} from '../formElements/formElementTypes'\r\nimport {createPath} from '../util'\r\nimport {validationRuleMap} from '../validation/ValidationRule'\r\nimport {ConfigContainer} from './ConfigContainer'\r\nimport {ExpressionContainer} from './ExpressionContainer'\r\nimport {FieldStateContainer} from './FieldStateContainer'\r\nimport {FormStateContainer} from './FormStateContainer'\r\nimport {ShowIfContainer} from './ShowIfContainer'\r\nimport {createContainer, useContainer} from './useContainer'\r\nimport {ValuesContainer} from './ValuesContainer'\r\n\r\nexport const ValidationContainer = createContainer(() => {\r\n\tconst configContainer = useContainer(ConfigContainer)\r\n\tconst valuesContainer = useContainer(ValuesContainer)\r\n\tconst fieldStateContainer = useContainer(FieldStateContainer)\r\n\tconst formStateContainer = useContainer(FormStateContainer)\r\n\tconst expressionContainer = useContainer(ExpressionContainer)\r\n\tconst showIfContainer = useContainer(ShowIfContainer)\r\n\r\n\tconst [nextTick, setNextTick] = useState<number>(0)\r\n\tuseEffect(() => {\r\n\t\tif (nextTick > Date.now()) {\r\n\t\t\tsetTimeout(() => setNextTick(0), nextTick - Date.now())\r\n\t\t}\r\n\t}, [nextTick])\r\n\r\n\tconst config = configContainer.config\r\n\r\n\tconst validate = (path: string, fieldDef: FormElementDef<{}>): string | null => {\r\n\t\tif (!fieldDef.validation || fieldDef.validation.length <= 0) {\r\n\t\t\treturn null\r\n\t\t}\r\n\t\treturn fieldDef.validation.reduce<string | null>((message, constraint): string | null => {\r\n\t\t\tif (message != null) {\r\n\t\t\t\treturn message\r\n\t\t\t}\r\n\t\t\treturn validateConstraint(constraint, path, fieldDef)\r\n\t\t}, null)\r\n\t}\r\n\r\n\tfunction validateConstraint(constraint: ValidationConstraintDef | string, path: string, fieldDef: FormElementDef<{}>): string | null {\r\n\t\tif (typeof constraint === 'string') {\r\n\t\t\tconst fieldValue = valuesContainer.getValue(path) || ''\r\n\t\t\tconst validationRule = validationRuleMap[constraint]\r\n\t\t\tif (!validationRule.validate(fieldValue)) {\r\n\t\t\t\treturn validationRule.defaultMessage\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t} else if (!isValidationExpresionDef(constraint)) {\r\n\t\t\tconst fieldValue = valuesContainer.getValue(path) || ''\r\n\t\t\tconst validationRule = validationRuleMap[constraint.name]\r\n\t\t\tif (!validationRule.validate(fieldValue)) {\r\n\t\t\t\treturn constraint.message || validationRule.defaultMessage\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t} else {\r\n\t\t\tconst expressionValidation = expressionContainer.expressionValidations[constraint.name]\r\n\t\t\tif (!expressionValidation.validate(path, fieldDef, constraint.expression)) {\r\n\t\t\t\treturn constraint.message || expressionValidation.defaultMessage\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t}\r\n\t}\r\n\r\n\tconst validateAndShouldShow = (path: string, fieldDef: FormElementDef<{}>): string | null => {\r\n\t\treturn shouldShowErrors(path, fieldDef) ? validate(path, fieldDef) : null\r\n\t}\r\n\r\n\tconst shouldShowErrors = (path: string, fieldDef: FormElementDef<{}>): boolean => {\r\n\t\tif (formStateContainer.nextOrSubmit() || config.showErrors === 'immediately') {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tconst fieldState = fieldStateContainer.get(path)\r\n\t\tif (config.showErrors === 'onFocus' && fieldState.focus) {\r\n\t\t\treturn timeHasPassedAndShouldShowError(fieldState.focus)\r\n\t\t}\r\n\t\tif (config.showErrors === 'onValueChanged' && fieldState.valueChanged) {\r\n\t\t\treturn timeHasPassedAndShouldShowError(fieldState.valueChanged)\r\n\t\t}\r\n\t\tif (config.showErrors === 'onBlur' && fieldState.blur) {\r\n\t\t\treturn timeHasPassedAndShouldShowError(fieldState.blur)\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\tconst timeHasPassedAndShouldShowError = (time: number) => {\r\n\t\tif (!config.showErrorsDelay || config.showErrorsDelay === 0) {\r\n\t\t\treturn true\r\n\t\t} else if ((time + config.showErrorsDelay) < Date.now()) {\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\tsetNextTick(time + config.showErrorsDelay)\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\tconst hasErrorsRecursively = (path: string, fieldDef?: FormElementDef<{}>): boolean => {\r\n\t\tif (!fieldDef || !showIfContainer.shouldShow(path, fieldDef)) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif (validate(path, fieldDef) != null) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tif (fieldDef.children) {\r\n\t\t\treturn fieldDef.children.some((childFieldDef) => {\r\n\t\t\t\tconst childPath = createPath(path, childFieldDef.fieldId)\r\n\t\t\t\tif (!showIfContainer.shouldShow(childPath, childFieldDef)) {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\tif (isTypeACollection(childFieldDef.type)) {\r\n\t\t\t\t\tconst size = valuesContainer.getCollectionSize(childPath)\r\n\t\t\t\t\tfor (let index = 0; index < size; index++) {\r\n\t\t\t\t\t\tif (hasErrorsRecursively(childPath + '[' + index + ']', childFieldDef)) {\r\n\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn hasErrorsRecursively(childPath, childFieldDef)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\treturn {validate, shouldShowErrors, validateAndShouldShow, hasErrorsRecursively}\r\n})","import {Config} from './state/ConfigContainer'\r\n\r\nexport default interface FormDef {\r\n\telements: FormElementDef<{}>[]\r\n\tconfig?: Config\r\n\treferenceData?: ReferenceDataDef\r\n}\r\n\r\nexport interface FormElementDef<Attributes> {\r\n\ttype: string,\r\n\tattributes: Attributes,\r\n\tfieldId?: string,\r\n\tchildren?: Array<FormElementDef<any>>\r\n\tvalidation?: Array<string | ValidationConstraintDef>\r\n\tshowIf?: string[]\r\n\thidden: boolean\r\n}\r\n\r\nexport type ValidationConstraintDef = ValidationRuleDef | ValidationExpresionDef\r\n\r\nexport function isValidationExpresionDef(constraint: ValidationConstraintDef): constraint is ValidationExpresionDef {\r\n\treturn (constraint as ValidationExpresionDef).expression !== undefined\r\n}\r\n\r\nexport interface ValidationRuleDef {\r\n\tname: string,\r\n\targuments?: string[],\r\n\tmessage?: string\r\n}\r\n\r\nexport interface ValidationExpresionDef {\r\n\tname: string,\r\n\texpression: string,\r\n\tmessage?: string\r\n}\r\n\r\nexport interface ReferenceDataDef {\r\n\tinline?: {\r\n\t\t[name: string]: any\r\n\t}\r\n\thttp?: {\r\n\t\tname: string,\r\n\t\turl: string,\r\n\t\tmethod?: 'get' | 'GET' | 'post' | 'POST',\r\n\t\tbaseURL?: string\r\n\t}[]\r\n}\r\n\r\n","import React from 'react'\r\nimport {List} from './collection/List'\r\nimport {ButtonGroup} from './input/ButtonGroup'\r\nimport {Dropdown} from './input/Dropdown'\r\nimport {Suggest} from './input/Suggest'\r\nimport {TextInput} from './input/TextInput'\r\nimport {Heading} from './output/Heading'\r\nimport {Paragraph} from './output/Paragraph'\r\nimport {Accordion} from './pagination/Accordion'\r\nimport {Tabs} from './pagination/Tabs'\r\n\r\ninterface FormElementTypesMap {\r\n\t[type: string]: React.ReactNode\r\n}\r\n\r\nexport const formElementNonCollectionTypes: FormElementTypesMap = {\r\n\t'accordion': Accordion,\r\n\t'dropdown': Dropdown,\r\n\t'textInput': TextInput,\r\n\t'heading': Heading,\r\n\t'paragraph': Paragraph,\r\n\t'buttonGroup': ButtonGroup,\r\n\t'tabs': Tabs,\r\n\t'suggest': Suggest\r\n}\r\n\r\nexport const formElementCollectionTypes: FormElementTypesMap = {\r\n\t'list': List\r\n}\r\n\r\nexport const formElementTypes: FormElementTypesMap = {...formElementNonCollectionTypes, ...formElementCollectionTypes}\r\n\r\nexport function lookupElement(type: string): React.ReactNode {\r\n\tconst foundType = formElementTypes[type]\r\n\tif (!foundType) {\r\n\t\tconsole.warn('Could not find form element type:' + type)\r\n\t\treturn () => <div>Could not find form element type {type}.</div>\r\n\t}\r\n\treturn foundType\r\n}\r\n\r\nexport function isTypeACollection(type: string): boolean {\r\n\treturn formElementCollectionTypes.hasOwnProperty(type)\r\n}","import React from 'react'\r\n\r\ninterface LabelProps {\r\n\ttext: string,\r\n\thtmlFor: string,\r\n\terror: boolean\r\n}\r\n\r\nexport const Label = (props: LabelProps) => <label htmlFor={props.htmlFor} className={'mr-2 h5 ' + (props.error ? 'text-danger' : '')}>{props.text}</label>","import React from 'react'\r\nimport {FormElementDef} from '../FormDef'\r\nimport {useContainer} from '../state/useContainer'\r\nimport {ValidationContainer} from '../state/ValidationContainer'\r\nimport {Description} from './Description'\r\nimport {Label} from './Label'\r\n\r\n\r\ninterface FieldChromeProps {\r\n\tpath: string\r\n\tdef: FormElementDef<any>\r\n}\r\n\r\nexport const FieldChrome: React.FC<FieldChromeProps> = (props) => {\r\n\tconst validationContainer = useContainer(ValidationContainer)\r\n\tconst error = validationContainer.validateAndShouldShow(props.path, props.def)\r\n\r\n\treturn (<div className=\"form-group pt-2\">\r\n\t\t{props.def.attributes.label && <Label htmlFor={props.path} text={props.def.attributes.label} error={!!error}/>}\r\n\t\t{props.children}\r\n\t\t{error && <div className=\"error-message text-danger pt-2\">{error}</div>}\r\n\t\t{props.def.attributes.description && <Description path={props.path} text={props.def.attributes.description}/>}\r\n\t</div>)\r\n}","import axios from 'axios'\r\nimport produce from 'immer'\r\nimport {useEffect, useState} from 'react'\r\nimport {ReferenceDataDef} from '../FormDef'\r\nimport {createContainer} from './useContainer'\r\n\r\nexport const ReferenceDataContainer = createContainer((referenceDataDef: ReferenceDataDef = {}) => {\r\n\tconst [referenceData, setReferenceData] = useState<{ [name: string]: any }>(referenceDataDef.inline || {})\r\n\r\n\tuseEffect(() => {\r\n\t\treferenceDataDef.http!.forEach(httpReferenceDataDef => {\r\n\t\t\taxios(httpReferenceDataDef)\r\n\t\t\t\t.then(function (response) {\r\n\t\t\t\t\tset(httpReferenceDataDef.name, response.data)\r\n\t\t\t\t})\r\n\t\t})\r\n\t}, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\tconst set = (name: string, data: any) => {\r\n\t\tsetReferenceData(produce(referenceData, draftReferenceData => {\r\n\t\t\tdraftReferenceData[name] = data\r\n\t\t}))\r\n\t}\r\n\r\n\treturn {referenceData, set}\r\n})","import {findLastIndex} from 'lodash-es'\r\nimport {useState} from 'react'\r\nimport {FormElementDef} from '../FormDef'\r\nimport {ConfigContainer} from './ConfigContainer'\r\nimport {FormStateContainer} from './FormStateContainer'\r\nimport {ShowIfContainer} from './ShowIfContainer'\r\nimport {createContainer, useContainer} from './useContainer'\r\nimport {ValidationContainer} from './ValidationContainer'\r\n\r\nexport const PaginationContainer = createContainer((initialState = {}) => {\r\n\tconst configContainer = useContainer(ConfigContainer)\r\n\tconst validationContainer = useContainer(ValidationContainer)\r\n\tconst formStateContainer = useContainer(FormStateContainer)\r\n\tconst showIfContainer = useContainer(ShowIfContainer)\r\n\tconst [path, setPath] = useState<string>('')\r\n\tconst [pages, setPages] = useState<FormElementDef<any>[]>([])\r\n\tconst [currentPageIndex, setCurrentPageIndex] = useState<number>(-1)\r\n\r\n\tconst setUp = (path: string, setupPages: FormElementDef<any>[]) => {\r\n\t\tsetPath(path)\r\n\t\tsetPages(setupPages)\r\n\t\tif (currentPageIndex < 0) {\r\n\t\t\tsetCurrentPageIndex(setupPages.findIndex(page => showIfContainer.shouldShow(path, page)))\r\n\t\t}\r\n\t}\r\n\r\n\tconst firstShownPage = pages.findIndex(page => showIfContainer.shouldShow(path, page))\r\n\tconst lastShownPage = findLastIndex(pages, page => showIfContainer.shouldShow(path, page))\r\n\r\n\tconst currentIsFirst = currentPageIndex === firstShownPage\r\n\tconst currentIsLast = currentPageIndex === lastShownPage\r\n\r\n\tconst currentPageHasErrors = () => validationContainer.hasErrorsRecursively(path, pages[currentPageIndex])\r\n\tconst disableNext = configContainer.config.disableNextWhenErrors && currentPageHasErrors()\r\n\r\n\tconst previousClicked = () => {\r\n\t\tfor (let i = currentPageIndex - 1; i >= 0; i--) {\r\n\t\t\tconst pageDef = pages[i]\r\n\t\t\tif (pageDef && showIfContainer.shouldShow(path, pageDef)) {\r\n\t\t\t\tformStateContainer.clearNextClicked()\r\n\t\t\t\tsetCurrentPageIndex(i)\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst nextClicked = () => {\r\n\t\tif (currentPageHasErrors()) {\r\n\t\t\tformStateContainer.nextClicked()\r\n\t\t} else {\r\n\t\t\tfor (let i = currentPageIndex + 1; i < pages.length; i++) {\r\n\t\t\t\tconst pageDef = pages[i]\r\n\t\t\t\tif (pageDef && showIfContainer.shouldShow(path, pageDef)) {\r\n\t\t\t\t\tformStateContainer.clearNextClicked()\r\n\t\t\t\t\tsetCurrentPageIndex(i)\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst submitClicked = () => {\r\n\t\tif (currentPageHasErrors()) {\r\n\t\t\tformStateContainer.submitClicked()\r\n\t\t} else {\r\n\t\t\tconsole.log('Submit')\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn {setUp, currentPageIndex, setCurrentPageIndex, currentIsFirst, currentIsLast, currentPageHasErrors, disableNext, previousClicked, nextClicked, submitClicked}\r\n})","import classNames from 'classnames'\r\nimport React, {useEffect, useRef} from 'react'\r\nimport {FormElementDef} from '../../FormDef'\r\nimport {PaginationContainer} from '../../state/PaginationContainer'\r\nimport {ShowIfContainer} from '../../state/ShowIfContainer'\r\nimport {useContainer} from '../../state/useContainer'\r\nimport {ChildFormElements} from '../ChildFormElements'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\nexport const Accordion = (props: FormElementProps<void>) => {\r\n\tconst showIfContainer = useContainer(ShowIfContainer)\r\n\tconst paginationContainer = useContainer(PaginationContainer)\r\n\r\n\tconst currentPageRef = useRef<HTMLDivElement>(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.definition.children && paginationContainer.setUp(props.path, props.definition.children)\r\n\t}, [props.definition.children,props.path, paginationContainer ])\r\n\r\n\tif (!props.definition.children) {\r\n\t\treturn null\r\n\t}\r\n\r\n\r\n\tconst scrollCurrentPageIntoView = () => {\r\n\t\tif (currentPageRef && currentPageRef.current) {\r\n\t\t\twindow.scroll({top: currentPageRef.current.getBoundingClientRect().top - 100})\r\n\t\t}\r\n\t}\r\n\r\n\tconst goToPage = (index: number) => {\r\n\t\tpaginationContainer.setCurrentPageIndex(index)\r\n\t\tscrollCurrentPageIntoView()\r\n\t}\r\n\r\n\tconst previous = () => {\r\n\t\tpaginationContainer.previousClicked()\r\n\t\tscrollCurrentPageIntoView()\r\n\t}\r\n\r\n\tconst next = () => {\r\n\t\tpaginationContainer.nextClicked()\r\n\t\tscrollCurrentPageIntoView()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\r\n\t\t\t{props.definition.children!.map((page, index) => showIfContainer.shouldShow(props.path, page) && <div className=\"card\" key={props.path + '_PAGE_' + index}>\r\n\t\t\t\t\t{paginationContainer.currentPageIndex === index && <div ref={currentPageRef}/>}\r\n\t\t\t\t\t<div className=\"card-header cursor-pointer\" onClick={() => goToPage(index)}>\r\n\t\t\t\t\t\t<h3 className=\"d-inline\">{page.attributes.label}</h3>{index < paginationContainer.currentPageIndex && <button className=\"link-button text-muted px-1\" onClick={() => goToPage(index)}><u>edit</u></button>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{paginationContainer.currentPageIndex === index && <div className=\"card-body m-1\">\r\n\t\t\t\t\t\t{page.children && <ChildFormElements childFormElements={page.children as FormElementDef<any>[]} parentPath={props.parentPath}/>}\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<nav aria-label=\"Page navigation\">\r\n\t\t\t\t\t\t\t\t\t<ul className=\"pagination mb-0\">\r\n\t\t\t\t\t\t\t\t\t\t{!paginationContainer.currentIsFirst && <li className=\"page-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"page-link\" onClick={previous}>Previous</button>\r\n\t\t\t\t\t\t\t\t\t\t</li>}\r\n\t\t\t\t\t\t\t\t\t\t{!paginationContainer.currentIsLast && <li className={classNames('page-item', {disabled: paginationContainer.disableNext})}>\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"page-link\" onClick={next} disabled={paginationContainer.disableNext}>Next</button>\r\n\t\t\t\t\t\t\t\t\t\t</li>}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{paginationContainer.currentIsLast && <div className=\"col\">\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary float-right\" onClick={paginationContainer.submitClicked}>Submit</button>\r\n\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\nimport {FieldChrome} from '../../display/FieldChrome'\nimport {FieldStateContainer} from '../../state/FieldStateContainer'\nimport {ReferenceDataContainer} from '../../state/ReferenceDataContainer'\nimport {useContainer} from '../../state/useContainer'\nimport {ValuesContainer} from '../../state/ValuesContainer'\nimport {createKey} from '../../util'\nimport {FormElementProps} from '../FormElementProps'\n\nexport interface DropdownAttributes {\n\tlabel: string\n\tdescription: string\n\tinfo?: string\n\toptions?: string[]\n\treferenceDataOptions?: string\n}\n\ninterface Option {\n\tvalue: string | number,\n\tlabel: string\n}\n\ntype Data = string | number\n\nexport const Dropdown = (props: FormElementProps<DropdownAttributes>) => {\n\tconst referenceDataContainer = useContainer(ReferenceDataContainer)\n\tconst formValuesContainer = useContainer(ValuesContainer)\n\tconst fieldStateContainer = useContainer(FieldStateContainer)\n\tlet options: Array<Option | Data> = props.definition.attributes.options || []\n\tif (props.definition.attributes.referenceDataOptions) {\n\t\toptions = options.concat(referenceDataContainer.referenceData[props.definition.attributes.referenceDataOptions])\n\t}\n\treturn <FieldChrome path={props.path} def={props.definition}>\n\t\t<select\n\t\t\tclassName=\"form-control custom-select\"\n\t\t\tid={props.definition.fieldId}\n\t\t\tvalue={formValuesContainer.getValue(props.path) || ''}\n\t\t\tonChange={event => formValuesContainer.setValue(props.path, event.currentTarget.value)}\n\t\t\taria-describedby={props.definition.fieldId + '_description'}\n\t\t\tonFocus={() => fieldStateContainer.focus(props.path)}\n\t\t\tonBlur={() => fieldStateContainer.blur(props.path)}\n\t\t>\n\t\t\t<option value=\"\"/>\n\t\t\t{options.map((option) => {\n\t\t\t\tconst label = typeof option === 'object' ? option.label : option\n\t\t\t\tconst value = typeof option === 'object' ? option.value : option\n\t\t\t\treturn <option value={value} key={value || createKey()}>{label}</option>\n\t\t\t})}\n\t\t</select>\n\t</FieldChrome>\n}","import React from 'react'\nimport {FieldChrome} from '../../display/FieldChrome'\nimport {FieldStateContainer} from '../../state/FieldStateContainer'\nimport {useContainer} from '../../state/useContainer'\nimport {ValuesContainer} from '../../state/ValuesContainer'\nimport {FormElementProps} from '../FormElementProps'\n\ninterface TextInputAttributes {\n\tlabel: string\n\tdescription: string\n\tinfo?: string\n}\n\nexport const TextInput = (props: FormElementProps<TextInputAttributes>) => {\n\tconst formValuesContainer = useContainer(ValuesContainer)\n\tconst fieldStateContainer = useContainer(FieldStateContainer)\n\n\treturn (<FieldChrome path={props.path} def={props.definition}>\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tclassName=\"form-control\"\n\t\t\tid={props.definition.fieldId}\n\t\t\taria-describedby={props.path + '_description'}\n\t\t\tvalue={formValuesContainer.getValue(props.path) || ''}\n\t\t\tonChange={event => formValuesContainer.setValue(props.path, event.currentTarget.value)}\n\t\t\tonFocus={() => fieldStateContainer.focus(props.path)}\n\t\t\tonBlur={() => fieldStateContainer.blur(props.path)}\n\t\t/>\n\t</FieldChrome>)\n}","import React from 'react'\nimport {FormElementProps} from '../FormElementProps'\n\ninterface HeadingAttributes {\n\tlevel: number\n\ttext: string\n}\n\nexport const Heading = (props: FormElementProps<HeadingAttributes>) =>\n\tReact.createElement('h' + props.definition.attributes.level, null, props.definition.attributes.text)","import React from 'react'\nimport {FormElementProps} from '../FormElementProps'\n\n\ninterface ParagraphAttributes {\n\ttext: string\n}\n\nexport const Paragraph = (props: FormElementProps<ParagraphAttributes>) => <p>{props.definition.attributes.text}</p>","import React, {useState} from 'react'\nimport {FieldChrome} from '../../display/FieldChrome'\nimport {FieldStateContainer} from '../../state/FieldStateContainer'\nimport {useContainer} from '../../state/useContainer'\nimport {ValuesContainer} from '../../state/ValuesContainer'\nimport {FormElementProps} from '../FormElementProps'\n\ninterface ButtonGroupAttributes {\n\tlabel: string\n\tdescription?: string\n\tinfo?: string\n\toptions: string[]\n}\n\nexport const ButtonGroup = (props: FormElementProps<ButtonGroupAttributes>) => {\n\tconst formValuesContainer = useContainer(ValuesContainer)\n\tconst fieldStateContainer = useContainer(FieldStateContainer)\n\tconst value = formValuesContainer.getValue(props.path)\n\tconst [focus, setFocus] = useState<number | null>(null)\n\n\treturn (\n\t\t<FieldChrome path={props.path} def={props.definition}>\n\t\t\t<div className=\"btn-group-wrapper\"\n\t\t\t\t onFocus={() => fieldStateContainer.focus(props.path)}\n\t\t\t\t onBlur={() => fieldStateContainer.blur(props.path)}\n\t\t\t>\n\t\t\t\t<div className=\"btn-group btn-group-toggle\">\n\t\t\t\t\t{props.definition.attributes.options.map((option, index) => (\n\t\t\t\t\t\t<label\n\t\t\t\t\t\t\tclassName={'btn btn-outline-primary' + (value === option ? ' active' : '') + (focus === index ? ' focus' : '')}\n\t\t\t\t\t\t\tkey={props.path + '_OPTION_' + option}\n\t\t\t\t\t\t\tonFocus={() => setFocus(index)}\n\t\t\t\t\t\t\tonBlur={() => setFocus(null)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\t\tvalue={option}\n\t\t\t\t\t\t\t\tchecked={option === value}\n\t\t\t\t\t\t\t\tonChange={event => formValuesContainer.setValue(props.path, event.currentTarget.value)}\n\t\t\t\t\t\t\t/>{option}\n\t\t\t\t\t\t</label>))\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</FieldChrome>)\n}","import classNames from 'classnames'\r\nimport React, {useEffect} from 'react'\r\nimport {FormElementDef} from '../../FormDef'\r\nimport {PaginationContainer} from '../../state/PaginationContainer'\r\nimport {ShowIfContainer} from '../../state/ShowIfContainer'\r\nimport {useContainer} from '../../state/useContainer'\r\nimport {ChildFormElements} from '../ChildFormElements'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\ninterface TabAttributes {\r\n\tpill?: boolean\r\n}\r\n\r\n\r\nexport const Tabs = (props: FormElementProps<TabAttributes>) => {\r\n\tconst showIfContainer = useContainer(ShowIfContainer)\r\n\tconst paginationContainer = useContainer(PaginationContainer)\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.definition.children && paginationContainer.setUp(props.path, props.definition.children)\r\n\t}, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\tif (!props.definition.children) {\r\n\t\treturn null\r\n\t}\r\n\r\n\tif (paginationContainer.currentPageIndex < 0) {\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"card rounded-0\">\r\n\t\t\t<div className=\"card-header\">\r\n\t\t\t\t<ul className={'nav ' + (props.definition.attributes.pill ? 'nav-pills card-header-pills' : 'nav-tabs card-header-tabs')}>\r\n\t\t\t\t\t{props.definition.children!.map((page, index) => {\r\n\t\t\t\t\t\tif (!showIfContainer.shouldShow(props.path, page)) {\r\n\t\t\t\t\t\t\treturn null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst key = props.path + '_PAGE_' + index\r\n\t\t\t\t\t\t//The bootstrap btn-link doesn't style the same as a link with a href when used as nav-link\r\n\t\t\t\t\t\t/* eslint-disable jsx-a11y/anchor-is-valid, no-script-url */\r\n\t\t\t\t\t\tif (index < paginationContainer.currentPageIndex) {\r\n\t\t\t\t\t\t\treturn <li className=\"nav-item\" key={key}>\r\n\t\t\t\t\t\t\t\t<a className=\"nav-link\" href=\"javascript:void(0)\" onClick={() => paginationContainer.setCurrentPageIndex(index)}>{page.attributes.label}</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/* eslint-enable no-script-url, jsx-a11y/anchor-is-valid */\r\n\t\t\t\t\t\tif (index === paginationContainer.currentPageIndex) {\r\n\t\t\t\t\t\t\treturn <li className=\"nav-item\" key={key}>\r\n\t\t\t\t\t\t\t\t<button className=\"nav-link active\">{page.attributes.label}</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (index > paginationContainer.currentPageIndex) {\r\n\t\t\t\t\t\t\treturn <li className=\"nav-item\" key={key}>\r\n\t\t\t\t\t\t\t\t<button className=\"nav-link disabled\" tabIndex={-1} aria-disabled=\"true\">{page.attributes.label}</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<ChildFormElements childFormElements={props.definition.children[paginationContainer.currentPageIndex].children as FormElementDef<any>[]} parentPath={props.parentPath}/>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<nav aria-label=\"Page navigation\">\r\n\t\t\t\t\t\t\t\t<ul className=\"pagination mb-0\">\r\n\t\t\t\t\t\t\t\t\t{!paginationContainer.currentIsFirst && <li className=\"page-item\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"page-link\" onClick={paginationContainer.previousClicked}>Previous</button>\r\n\t\t\t\t\t\t\t\t\t</li>}\r\n\t\t\t\t\t\t\t\t\t{!paginationContainer.currentIsLast && <li className={classNames('page-item', {disabled: paginationContainer.disableNext})}>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"page-link\" onClick={paginationContainer.nextClicked} disabled={paginationContainer.disableNext}>Next</button>\r\n\t\t\t\t\t\t\t\t\t</li>}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{paginationContainer.currentIsLast && <div className=\"col\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-primary float-right\" onClick={paginationContainer.submitClicked}>Submit</button>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>)\r\n}","import React from 'react'\nimport {Typeahead} from 'react-bootstrap-typeahead'\nimport {FieldChrome} from '../../display/FieldChrome'\nimport {FieldStateContainer} from '../../state/FieldStateContainer'\nimport {ReferenceDataContainer} from '../../state/ReferenceDataContainer'\nimport {useContainer} from '../../state/useContainer'\nimport {ValuesContainer} from '../../state/ValuesContainer'\nimport {FormElementProps} from '../FormElementProps'\n\nexport interface SuggestAttributes {\n\tlabel: string\n\tdescription: string\n\tinfo?: string\n\toptions?: (string | any)[]\n\treferenceDataOptions?: string\n\tmultiple?: boolean\n\tlabelKey?: string\n\tvalueKey?: string\n}\n\nexport const Suggest = (props: FormElementProps<SuggestAttributes>) => {\n\tconst referenceDataContainer = useContainer(ReferenceDataContainer)\n\tconst formValuesContainer = useContainer(ValuesContainer)\n\tconst fieldStateContainer = useContainer(FieldStateContainer)\n\tlet options = props.definition.attributes.options || []\n\tif (props.definition.attributes.referenceDataOptions && referenceDataContainer.referenceData[props.definition.attributes.referenceDataOptions]) {\n\t\tconsole.log('referenceDataContainer.referenceData[props.definition.attributes.referenceDataOptions]', referenceDataContainer.referenceData[props.definition.attributes.referenceDataOptions])\n\t\toptions = options.concat(referenceDataContainer.referenceData[props.definition.attributes.referenceDataOptions])\n\t}\n\tconsole.log('options:', options)\n\toptions = options.map(option => {\n\t\tif (typeof option === 'object') {\n\t\t\toption.id = option.value\n\t\t}\n\t\treturn option\n\t})\n\tconsole.log('options:', options)\n\treturn <FieldChrome path={props.path} def={props.definition}>\n\t\t<Typeahead\n\t\t\tmultiple={props.definition.attributes.multiple}\n\t\t\toptions={options}\n\t\t\tplaceholder=\"Choose a state...\"\n\t\t/>\n\t\t{/*\t\t<select\n\t\t\tclassName=\"form-control custom-select\"\n\t\t\tid={props.definition.fieldId}\n\t\t\tvalue={formValuesContainer.getValue(props.path) || ''}\n\t\t\tonChange={event => formValuesContainer.setValue(props.path, event.currentTarget.value)}\n\t\t\taria-describedby={props.definition.fieldId + '_description'}\n\t\t\tonFocus={() => fieldStateContainer.focus(props.path)}\n\t\t\tonBlur={() => fieldStateContainer.blur(props.path)}\n\t\t>\n\t\t\t<option value=\"\"/>\n\t\t\t{options.map((option) => {\n\t\t\t\tconst label = typeof option === 'object' ? option.label : option\n\t\t\t\tconst value = typeof option === 'object' ? option.value : option\n\t\t\t\treturn <option value={value} key={value || createKey()}>{label}</option>\n\t\t\t})}\n\t\t</select>*/}\n\t</FieldChrome>\n}","import {times} from 'lodash-es'\nimport React from 'react'\nimport {Description} from '../../display/Description'\nimport {useContainer} from '../../state/useContainer'\nimport {ValuesContainer} from '../../state/ValuesContainer'\nimport {ordinal} from '../../util'\nimport {ChildFormElements} from '../ChildFormElements'\nimport {FormElementProps} from '../FormElementProps'\n\n\nexport interface IterationAttributes {\n\tlabel: string\n\titemLabel: string\n\tdescription: string\n}\n\nexport const List = (props: FormElementProps<IterationAttributes>) => {\n\tconst formValuesContainer = useContainer(ValuesContainer)\n\treturn (\n\t\t<div className=\"form-group\">\n\t\t\t<span className=\"h4 align-middle mr-2\">{props.definition.attributes.label}</span>\n\t\t\t{props.definition.attributes.description && <Description path={props.path} text={props.definition.attributes.description}/>}\n\t\t\t{times(formValuesContainer.getCollectionSize(props.path), (index: number) =>\n\t\t\t\t<div className={'card border-bottom mb-3' + (index === 0 ? ' mt-2' : '')} key={props.path + '_COLLECTION_' + index}>\n\t\t\t\t\t<h5 className=\"card-header\">{ordinal(index + 1)} {props.definition.attributes.itemLabel}\n\t\t\t\t\t\t<button className=\"close text-dark\" onClick={() => formValuesContainer.deleteFromCollection(props.path, index)}>\n\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</h5>\n\t\t\t\t\t<div className=\"card-body pb-0\">\n\t\t\t\t\t\t{props.definition.children && <ChildFormElements childFormElements={props.definition.children} parentPath={props.path + '[' + index + ']'}/>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<button className=\"btn btn-primary d-inline\" onClick={() => formValuesContainer.addToCollection(props.path)}>Add</button>\n\t\t</div>)\n}\n","import React from 'react'\r\nimport {FormElementDef} from '../FormDef'\r\nimport {ShowIfContainer} from '../state/ShowIfContainer'\r\nimport {useContainer} from '../state/useContainer'\r\nimport {createPath} from '../util'\r\nimport {lookupElement} from './formElementTypes'\r\n\r\ninterface ChildFormElementsProps {\r\n\tchildFormElements: FormElementDef<any>[]\r\n\tparentPath: string\r\n}\r\n\r\nexport const ChildFormElements = (props: ChildFormElementsProps) => {\r\n\tconst showIfContainer = useContainer(ShowIfContainer)\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.childFormElements.map((elementDef, index) => {\r\n\t\t\t\tconst path = createPath(props.parentPath, elementDef.fieldId)\r\n\t\t\t\tif (elementDef.hidden || !showIfContainer.shouldShow(path, elementDef)) {\r\n\t\t\t\t\treturn null\r\n\t\t\t\t}\r\n\t\t\t\tconst Child: any = lookupElement(elementDef.type)\r\n\t\t\t\treturn React.createElement(Child, {\r\n\t\t\t\t\tdefinition: elementDef,\r\n\t\t\t\t\tparentPath: props.parentPath,\r\n\t\t\t\t\tpath: path,\r\n\t\t\t\t\tkey: props.parentPath + '_' + index\r\n\t\t\t\t})\r\n\t\t\t})}\r\n\t\t</div>)\r\n}","import React from 'react'\r\nimport FormDef from './FormDef'\r\nimport {ChildFormElements} from './formElements/ChildFormElements'\r\nimport {ConfigContainer} from './state/ConfigContainer'\r\nimport {ExpressionContainer} from './state/ExpressionContainer'\r\nimport {FieldStateContainer} from './state/FieldStateContainer'\r\nimport {FormStateContainer} from './state/FormStateContainer'\r\nimport {PaginationContainer} from './state/PaginationContainer'\r\nimport {ReferenceDataContainer} from './state/ReferenceDataContainer'\r\nimport {ShowIfContainer} from './state/ShowIfContainer'\r\nimport {ValidationContainer} from './state/ValidationContainer'\r\nimport {ValuesContainer} from './state/ValuesContainer'\r\n\r\nexport interface FormProps {\r\n\tformDef: FormDef\r\n}\r\n\r\nexport const Form: React.FC<FormProps> = (props) => (<div className=\"\">\r\n\t<ConfigContainer.Provider initialState={props.formDef.config}>\r\n\t\t<ReferenceDataContainer.Provider initialState={props.formDef.referenceData}>\r\n\t\t\t<FormStateContainer.Provider>\r\n\t\t\t\t<FieldStateContainer.Provider>\r\n\t\t\t\t\t<ValuesContainer.Provider>\r\n\t\t\t\t\t\t<ExpressionContainer.Provider>\r\n\t\t\t\t\t\t\t<ShowIfContainer.Provider>\r\n\t\t\t\t\t\t\t\t<ValidationContainer.Provider>\r\n\t\t\t\t\t\t\t\t\t<PaginationContainer.Provider>\r\n\t\t\t\t\t\t\t\t\t\t<ChildFormElements childFormElements={props.formDef.elements} parentPath=\"\"/>\r\n\t\t\t\t\t\t\t\t\t</PaginationContainer.Provider>\r\n\t\t\t\t\t\t\t\t</ValidationContainer.Provider>\r\n\t\t\t\t\t\t\t</ShowIfContainer.Provider>\r\n\t\t\t\t\t\t</ExpressionContainer.Provider>\r\n\t\t\t\t\t</ValuesContainer.Provider>\r\n\t\t\t\t</FieldStateContainer.Provider>\r\n\t\t\t</FormStateContainer.Provider>\r\n\t\t</ReferenceDataContainer.Provider>\r\n\t</ConfigContainer.Provider>\r\n</div>)","//import 'react-app-polyfill/ie11'\r\nimport axios from 'axios'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Form} from './Form'\r\nimport FormDef from './FormDef'\r\nimport './index.css'\r\n\r\naxios.get<FormDef>('api/formDefinition/exampleFormDefinition.json')\r\n\t.then(function (response) {\r\n\t\tReactDOM.render(\r\n\t\t\t<Form formDef={response.data}/>,\r\n\t\t\tdocument.getElementById('form')\r\n\t\t)\r\n\t})\r\n\t.catch(function (error) {\r\n\t\tconsole.error(error)\r\n\t\tthrow new Error(error)\r\n\t})"],"sourceRoot":""}