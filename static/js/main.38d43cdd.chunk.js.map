{"version":3,"sources":["hooks/useStore.tsx","hooks/useConfig.ts","hooks/useFormDef.ts","hooks/useFieldState.ts","hooks/useEvent.ts","hooks/useValues.ts","hooks/useExpression.ts","hooks/useShowIf.ts","util.ts","display/Description.tsx","validation/ValidationRules.ts","hooks/useFormState.ts","hooks/useValidation.ts","hooks/useUpdate.ts","validation/ValidationExpressions.ts","FormDef.ts","formElements/formElementTypes.tsx","display/Label.tsx","display/FieldChrome.tsx","hooks/useReferenceData.ts","svg/octicons/search.svg","formElements/input/Autocomplete.tsx","hooks/usePagination.ts","hooks/useSubmit.ts","formElements/pagination/Accordion.tsx","formElements/input/Dropdown.tsx","formElements/input/TextInput.tsx","formElements/output/Heading.tsx","formElements/output/Paragraph.tsx","formElements/input/ButtonGroup.tsx","formElements/pagination/Tabs.tsx","hooks/useSuggestion.ts","formElements/output/TextOutput.tsx","formElements/collection/List.tsx","formElements/ChildFormElements.tsx","Form.tsx","index.tsx"],"names":["StoreContext","createContext","StoreProvider","props","store","useCreateStore","initialState","Provider","value","children","useReducer","storeState","action","nextStoreState","produce","draftStoreState","actionType","set","path","array","get","splice","index","unset","Error","console","log","dispatch","defaultValue","getArrayLength","length","deleteFromCollection","useStore","React","useContext","defaultConfig","showErrors","showErrorsDelay","disableNextWhenErrors","useConfig","config","setupConfig","formDefinitionConfig","useFormDef","formDef","setupFormDef","useFieldState","handleEvent","evaluate","useExpression","actions","setFieldValue","fieldDef","expressionExtraContex","expression","data","VALUES_STORE_KEY","setStoreValue","eventType","eventDefs","events","filter","eventDef","triggers","some","trigger","triggerEventMatches","includes","triggerPathMatches","pathExpression","forEach","actionDef","useEvent","eventHappened","event","getFieldState","Date","now","setSelectedSuggestionLabel","label","FIELD_STATE_STORE_KEY","setShowManualEntryForSuggestion","showen","focus","valueChanged","blur","useValues","setValue","values","getValue","addToCollection","element","getCollectionSize","setValueExpression","def","expresion","extraContext","setUp","initialValues","jexl","addTransform","toUpperCase","toLowerCase","isAlpha","isAlphanumeric","isCurrency","isEmail","isNumeric","addBinaryOp","left","right","urlParams","useMemo","fromPairs","Array","from","URLSearchParams","window","location","search","slice","entries","extraContex","includeFieldValue","context","fieldValue","evalSync","useShowIf","shouldShow","showIf","createPath","parentPath","fieldId","Description","id","className","text","validationRules","required","validate","defaultMessage","email","isEmpty","alpha","numeric","alphanumeric","currency","useFormState","setFormState","formState","nextClicked","FORM_STATE_STORE_KEY","clearNextClicked","undefined","submitClicked","nextOrSubmit","useValidation","updateAt","useState","setCount","update","count","updateIn","ms","setTimeout","when","useUpdate","validationExpressions","validIf","invalidIf","requiredIf","useValidationExpressions","validation","reduce","message","constraint","validationRule","isValidationExpresionDef","validationExpression","name","validateConstraint","shouldShowErrors","fieldState","timePlusDelayHasPassed","time","validateAndShouldShow","hasErrorsRecursively","childFieldDef","type","childPath","formElementCollectionTypes","hasOwnProperty","size","Label","htmlFor","error","FieldChrome","description","useReferenceData","referenceData","setReferenceData","setupReferenceData","referenceDataDef","http","httpReferenceDataDef","axios","then","response","_extends","Object","assign","target","i","arguments","source","key","prototype","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fillRule","d","_ref","svgRef","title","width","height","viewBox","ref","ForwardRef","forwardRef","defDefaults","options","multiple","labelKey","valueKey","postfixSearchIcon","usePagination","submitting","submit","post","url","outcomeIndex","outcomes","findIndex","outcome","statusCodes","status","catch","useSubmit","setPath","pages","setPages","currentPageIndex","setCurrentPageIndex","firstShownPage","page","lastShownPage","findLastIndex","currentIsFirst","currentIsLast","currentPageHasErrors","disableNext","setupPages","pageDef","previousClicked","formElementNonCollectionTypes","pagination","currentPageRef","useRef","useEffect","scrollCurrentPageIntoView","current","scroll","top","getBoundingClientRect","goToPage","previous","next","role","aria-multiselectable","map","onClick","childFormElements","aria-label","classNames","disabled","referenceDataOptions","concat","onChange","currentTarget","aria-describedby","onFocus","onBlur","option","Math","random","toString","substring","level","buttonFocus","setButtonFocus","checked","tabsRef","scrollIntoView","pill","href","tabIndex","aria-disabled","suggestions","setSuggestions","httpSuggestions","setHttpSuggestions","inlineSuggestions","setInlineSuggestions","selectedSuggestionLabel","inputValue","setInputValue","showSuggestions","setShowSuggestions","inputChanged","newInputValue","lowerInputValue","trim","lowerSelectedLabel","fieldDefOption","matchingInlineOptions","JSON","stringify","clear","selectOption","valueIsWholeOption","valueExpression","useSuggestion","cursor","setCursor","inputContainerRef","suggestionsContainerRef","showManualEntryForSuggestion","document","body","addEventListener","handlePotentialOutsideClick","removeEventListener","contains","handleInputChange","changedValue","handleBlur","newTarget","activeElement","handleFocus","handleInputKeyDown","keyCode","switchToSuggestLinkLabel","manualDescription","Manager","Reference","onKeyDown","Popper","placement","style","data-placement","suggestion","showSwitchToManualEntryLink","switchToManualEntryLinkLabel","times","n","s","v","ordinal","itemLabel","aria-hidden","formElementTypes","ChildFormElements","elementDef","ChildFormElement","Child","foundType","warn","lookupElement","childProps","Form","useLayoutEffect","elements","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.38d43cdd.chunk.js","sourcesContent":["import produce from 'immer'\r\nimport {get, set, unset} from 'lodash-es'\r\nimport React, {createContext, useReducer} from 'react'\r\n\r\ninterface StoreState {\r\n\t[key: string]: any\r\n}\r\n\r\ninterface Store {\r\n\tstore: StoreState,\r\n\tset: (path: string, value: any) => void\r\n\tget: <T extends any>(path: string, defaultValue?: T) => T\r\n\tgetArrayLength: (path: string) => number\r\n\tdeleteFromCollection: (path: string, index: number) => void\r\n}\r\n\r\nexport const StoreContext = createContext<Store | null>(null)\r\n\r\nexport const StoreProvider: React.FC<{ initialState?: StoreState }> = (props) => {\r\n\tconst store = useCreateStore(props.initialState)\r\n\treturn <StoreContext.Provider value={store}>\r\n\t\t{props.children}\r\n\t</StoreContext.Provider>\r\n}\r\n\r\n\r\nconst useCreateStore = (initialState?: StoreState) => {\r\n\tconst [store, dispatch] = useReducer((storeState: StoreState, action: { actionType: 'set' | 'deleteFromCollection' | 'unset', path: string, value?: any, index?: number }) => {\r\n\t\tconst nextStoreState = produce(storeState, draftStoreState => {\r\n\t\t\tswitch (action.actionType) {\r\n\t\t\t\tcase 'set':\r\n\t\t\t\t\tset(draftStoreState, action.path, action.value)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'deleteFromCollection':\r\n\t\t\t\t\tconst array = get(draftStoreState, action.path) as any[]\r\n\t\t\t\t\tarray.splice(action.index!, 1)\r\n\t\t\t\t\tset(draftStoreState, action.path, array)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'unset':\r\n\t\t\t\t\tunset(draftStoreState, action.path)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error()\r\n\t\t\t}\r\n\t\t})\r\n\t\tconsole.log('store:', nextStoreState)\r\n\t\treturn nextStoreState\r\n\t}, initialState || {})\r\n\r\n\treturn {\r\n\t\tstore,\r\n\t\tset: (path: string, value: any) => {\r\n\t\t\tconsole.log('set:', path, value)\r\n\t\t\tdispatch({actionType: 'set', path, value})\r\n\r\n\t\t},\r\n\t\tget: <T extends any>(path: string, defaultValue?: T): T => {\r\n\t\t\treturn get(store, path, defaultValue)\r\n\t\t},\r\n\t\tgetArrayLength: (path: string): number => {\r\n\t\t\treturn get(store, path, []).length\r\n\t\t},\r\n\t\tdeleteFromCollection: (path: string, index: number) => {\r\n\t\t\tdispatch({actionType: 'deleteFromCollection', path, index})\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const useStore = (): Store => {\r\n\tconst store = React.useContext(StoreContext)\r\n\tif (store === null) {\r\n\t\tthrow new Error('Component must be wrapped with <StoreProvider>')\r\n\t}\r\n\treturn store\r\n}\r\n\r\n","import {useStore} from './useStore'\r\n\r\ntype showErrors = 'immediately' | 'onFocus' | 'onValueChanged' | 'onBlur' | 'nextOrSummit'\r\n\r\nexport interface Config {\r\n\tshowErrors: showErrors\r\n\tshowErrorsDelay: number //milliseconds\r\n\tdisableNextWhenErrors: boolean\r\n}\r\n\r\nconst defaultConfig: Config = {\r\n\tshowErrors: 'onFocus',\r\n\tshowErrorsDelay: 500,\r\n\tdisableNextWhenErrors: false\r\n}\r\n\r\nconst CONFIG_STORE_KEY = 'config'\r\n\r\nexport const useConfig = () => {\r\n\tconst {set, get} = useStore()\r\n\treturn {\r\n\t\tconfig: get(CONFIG_STORE_KEY) || {},\r\n\t\tsetupConfig: (formDefinitionConfig = {}) => {\r\n\t\t\tset(CONFIG_STORE_KEY, {...defaultConfig, ...formDefinitionConfig})\r\n\t\t}\r\n\t}\r\n}","import FormDef from '../FormDef'\r\nimport {useStore} from './useStore'\r\n\r\nconst FORM_DEF_STORE_KEY = 'formDef'\r\n\r\nexport const useFormDef = () => {\r\n\tconst {set, get} = useStore()\r\n\treturn {\r\n\t\tformDef: get(FORM_DEF_STORE_KEY) as FormDef,\r\n\t\tsetupFormDef: (formDef: FormDef) => {\r\n\t\t\tset(FORM_DEF_STORE_KEY, formDef)\r\n\t\t}\r\n\t}\r\n}","import {useEvent} from './useEvent'\r\nimport {useStore} from './useStore'\r\n\r\n/*interface FieldStates {\r\n\t[path: string]: FieldState\r\n}*/\r\n\r\ninterface FieldState extends EventTimes {\r\n\tselectedSuggestionLabel?: string\r\n\tshowManualEntryForSuggestion?: boolean\r\n}\r\n\r\ntype EventTimes = {\r\n\t[Event in FieldEvents]?: number; //Date.now() when event first happened on the field\r\n}\r\n\r\nexport type FieldEvents = 'focus' | 'valueChanged' | 'blur'\r\n\r\nconst FIELD_STATE_STORE_KEY = 'fieldStates'\r\n\r\nexport const useFieldState = () => {\r\n\tconst {set, get} = useStore()\r\n\tconst {handleEvent} = useEvent()\r\n\r\n\tconst getFieldState = (path: string): FieldState => get(`${FIELD_STATE_STORE_KEY}.${path}`, {})\r\n\r\n\tconst eventHappened = (path: string, event: FieldEvents) => {\r\n\t\thandleEvent(event,path)\r\n\t\tif (!getFieldState(path)[event]) {\r\n\t\t\tset(`${FIELD_STATE_STORE_KEY}.${path}.${event}`, Date.now())\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tgetFieldState: (path: string): FieldState => get(`${FIELD_STATE_STORE_KEY}.${path}`, {}),\r\n\r\n\t\tsetSelectedSuggestionLabel: (path: string, label: string) => {\r\n\t\t\tset(FIELD_STATE_STORE_KEY + '.' + path + '.selectedSuggestionLabel', label)\r\n\t\t},\r\n\r\n\t\tsetShowManualEntryForSuggestion: (path: string, showen: boolean) => {\r\n\t\t\tset(FIELD_STATE_STORE_KEY + '.' + path + '.showManualEntryForSuggestion', showen)\r\n\t\t},\r\n\r\n\t\tfocus: (path: string) => eventHappened(path, 'focus'),\r\n\t\tvalueChanged: (path: string) => eventHappened(path, 'valueChanged'),\r\n\t\tblur: (path: string) => eventHappened(path, 'blur'),\r\n\t}\r\n}","import {FieldDef} from '../FormDef'\r\nimport {useExpression} from './useExpression'\r\nimport {FieldEvents} from './useFieldState'\r\nimport {useFormDef} from './useFormDef'\r\nimport {useStore} from './useStore'\r\nimport {VALUES_STORE_KEY} from './useValues'\r\n\r\nexport interface EventDef {\r\n\ttriggers: Trigger[]\r\n\tactions: ActionDef[]\r\n}\r\n\r\ntype EventType = 'formLoaded' | 'beforePageNext' | 'showManualEntryForSuggestion' | FieldEvents\r\n\r\ninterface Trigger {\r\n\teventType: EventType[]\r\n\tpath?: string\r\n\tpathExpression?: string\r\n}\r\n\r\ntype ActionType = 'setFieldValue' | 'setStoreValue'\r\n\r\ninterface ActionDef {\r\n\taction: ActionType,\r\n\tpath?: string\r\n\tdata?: any\r\n\texpression?: string\r\n}\r\n\r\nexport const useEvent = () => {\r\n\tconst {evaluate} = useExpression()\r\n\tconst {set} = useStore()\r\n\tconst {formDef} = useFormDef()\r\n\r\n\r\n\tconst actions: { [action: string]: (actionDef: ActionDef, fieldDef?: FieldDef, expressionExtraContex?: any) => void } = {\r\n\t\tsetFieldValue: ({path, expression, data}, fieldDef, expressionExtraContex) => {\r\n\t\t\tif (path == null) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (data != null) {\r\n\t\t\t\tset(VALUES_STORE_KEY + '.' + path, data)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (expression) {\r\n\t\t\t\tset(VALUES_STORE_KEY + '.' + path, evaluate(expression, path, fieldDef, expressionExtraContex))\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetStoreValue: ({path, expression, data}, fieldDef, expressionExtraContex) => {\r\n\t\t\tif (path == null) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (data != null) {\r\n\t\t\t\tset(path, data)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (expression) {\r\n\t\t\t\tset(path, evaluate(expression, path, fieldDef, expressionExtraContex))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\thandleEvent: (eventType: EventType, path?: string, fieldDef?: FieldDef, expressionExtraContex?: any) => {\r\n\t\t\tconsole.log('eventType:', eventType)\r\n\t\t\tconst eventDefs = (formDef && formDef.events) || []\r\n\t\t\tconsole.log('eventDefs:', eventDefs)\r\n\t\t\tconst eventsDefWithMatchingTriggers = eventDefs.filter(eventDef => eventDef.triggers.some(trigger => {\r\n\t\t\t\t\tconst triggerEventMatches = trigger.eventType.includes(eventType)\r\n\t\t\t\t\tconst triggerPathMatches = (trigger.path == null && trigger.pathExpression == null)\r\n\t\t\t\t\t\t|| trigger.path === path\r\n\t\t\t\t\t\t|| (trigger.pathExpression && evaluate(trigger.pathExpression, path, fieldDef, expressionExtraContex))\r\n\t\t\t\t\treturn triggerEventMatches && triggerPathMatches\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\teventsDefWithMatchingTriggers.forEach(eventDef => eventDef.actions.forEach(actionDef => {\r\n\t\t\t\tconst action = actions[actionDef.action]\r\n\t\t\t\tif (action) {\r\n\t\t\t\t\taction(actionDef, fieldDef, expressionExtraContex)\r\n\t\t\t\t}\r\n\t\t\t}))\r\n\r\n\t\t}\r\n\t}\r\n}","import {ElementDef} from '../FormDef'\r\nimport {useExpression} from './useExpression'\r\nimport {useFieldState} from './useFieldState'\r\nimport {useStore} from './useStore'\r\n\r\nexport const VALUES_STORE_KEY = 'values'\r\n\r\nexport const useValues = () => {\r\n\tconst store = useStore()\r\n\tconst {valueChanged} = useFieldState()\r\n\tconst {evaluate} = useExpression()\r\n\r\n\tconst setValue = (path: string, value: any) => {\r\n\t\tstore.set(`${VALUES_STORE_KEY}.${path}`, value)\r\n\t\tvalueChanged(path)\r\n\t}\r\n\r\n\r\n\treturn {\r\n\t\tvalues: store.get(VALUES_STORE_KEY),\r\n\t\tsetValue,\r\n\t\tgetValue: (path: string): string => {\r\n\t\t\treturn store.get(`${VALUES_STORE_KEY}.${path}`)\r\n\t\t},\r\n\t\taddToCollection: (path: string, element: any = {}) => {\r\n\t\t\tsetValue(`${path}[${store.getArrayLength(`${VALUES_STORE_KEY}.${path}`)}]`, element)\r\n\t\t},\r\n\t\tdeleteFromCollection: (path: string, index: number) => {\r\n\t\t\tstore.deleteFromCollection(`${VALUES_STORE_KEY}.${path}`, index)\r\n\t\t},\r\n\t\tgetCollectionSize: (path: string) => {\r\n\t\t\treturn store.getArrayLength(`${VALUES_STORE_KEY}.${path}`)\r\n\t\t},\r\n\t\tsetValueExpression: (path: string, def: ElementDef, expresion: string, extraContext?: any) => {\r\n\t\t\tsetValue(path, evaluate(expresion, path, def, extraContext, false))\r\n\t\t},\r\n\t\tsetUp: (initialValues = {}) => {\r\n\t\t\tstore.set(VALUES_STORE_KEY, initialValues)\r\n\t\t}\r\n\t}\r\n}","import jexl from 'jexl'\r\nimport {fromPairs} from 'lodash-es'\r\nimport {useMemo} from 'react'\r\nimport isAlpha from 'validator/lib/isAlpha'\r\nimport isAlphanumeric from 'validator/lib/isAlphanumeric'\r\nimport isCurrency from 'validator/lib/isCurrency'\r\nimport isEmail from 'validator/lib/isEmail'\r\nimport isNumeric from 'validator/lib/isNumeric'\r\nimport {ElementDef} from '../FormDef'\r\nimport {useConfig} from './useConfig'\r\nimport {useStore} from './useStore'\r\nimport {VALUES_STORE_KEY} from './useValues'\r\n\r\n//Transforms\r\njexl.addTransform('toUpperCase', (value) => value.toUpperCase())\r\njexl.addTransform('toLowerCase', (value) => value.toLowerCase())\r\n\r\n//'Is' validation\r\njexl.addTransform('isAlpha', (value) => value && isAlpha(value))\r\njexl.addTransform('isAlphanumeric', (value) => value && isAlphanumeric(value))\r\njexl.addTransform('isCurrency', (value) => value && isCurrency(value))\r\njexl.addTransform('isEmail', (value) => value && isEmail(value))\r\njexl.addTransform('isNumeric', (value) => value && isNumeric(value))\r\n\r\n//case-insensitive string equality\r\njexl.addBinaryOp('_=', 20, (left, right) => left != null && right != null && left.toLowerCase() === right.toLowerCase())\r\n\r\nexport const useExpression = () => {\r\n\tconst {config} = useConfig()\r\n\tconst {store, get} = useStore()\r\n\r\n\tconst urlParams = useMemo(() => fromPairs(Array.from(new URLSearchParams(window.location.search.slice(1)).entries())), [])\r\n\r\n\treturn {\r\n\t\tevaluate: <T>(expression: string, path?: string, def?: ElementDef, extraContex?: any, includeFieldValue = true): T => {\r\n\t\t\tconst context = {\r\n\t\t\t\t...store,\r\n\t\t\t\tdef,\r\n\t\t\t\tpath,\r\n\t\t\t\tconfig,\r\n\t\t\t\turlParams,\r\n\t\t\t\t...extraContex\r\n\t\t\t}\r\n\t\t\tif (includeFieldValue) {\r\n\t\t\t\tconst fieldValue = get(`${VALUES_STORE_KEY}.${path}`)\r\n\t\t\t\tcontext.fieldValue = fieldValue\r\n\t\t\t\tcontext.value = fieldValue\r\n\t\t\t}\r\n\t\t\treturn jexl.evalSync(expression, context)\r\n\t\t}\r\n\t}\r\n}","import {ElementDef} from '../FormDef'\r\nimport {useExpression} from './useExpression'\r\n\r\nexport const useShowIf = () => {\r\n\tconst {evaluate} = useExpression()\r\n\treturn {\r\n\t\tshouldShow: (path: string, def: ElementDef): boolean => {\r\n\t\t\tif (!def.showIf) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\treturn def.showIf.some(expression => evaluate(expression, path, def))\r\n\t\t}\r\n\t}\r\n}","export const createKey = () => (Math.random() + 1).toString(36).substring(2)\r\n\r\nexport const ordinal = (n: number): string => {\r\n\tconst s = ['th', 'st', 'nd', 'rd'],\r\n\t\tv = n % 100\r\n\treturn n + (s[(v - 20) % 10] || s[v] || s[0])\r\n}\r\n\r\nexport const createPath = (parentPath: string, fieldId?: string): string => {\r\n\tif (!fieldId) {\r\n\t\treturn parentPath\r\n\t}\r\n\tif (parentPath !== '') {\r\n\t\treturn parentPath + '.' + fieldId\r\n\t}\r\n\treturn fieldId\r\n\r\n}","import React from 'react'\r\n\r\ninterface DescriptionProps {\r\n\tpath: string,\r\n\ttext: string\r\n}\r\n\r\nexport const Description = (props: DescriptionProps) => (\r\n\t<div id={props.path + '_description'} className=\"pt-2 text-muted description\">{props.text}</div>\r\n)","import isAlpha from 'validator/lib/isAlpha'\r\nimport isAlphanumeric from 'validator/lib/isAlphanumeric'\r\nimport isCurrency from 'validator/lib/isCurrency'\r\nimport isEmail from 'validator/lib/isEmail'\r\nimport isEmpty from 'validator/lib/isEmpty'\r\nimport isNumeric from 'validator/lib/isNumeric'\r\n\r\ninterface ValidationRule {\r\n\tvalidate: (value: string, args?: string | string[]) => boolean,\r\n\tdefaultMessage: string\r\n}\r\n\r\nexport const validationRules: { [name: string]: ValidationRule } = {\r\n\trequired: {\r\n\t\tvalidate: (value: string) => !(value == null || value.length <= 0 || value === ''),\r\n\t\tdefaultMessage: 'This field is required'\r\n\t},\r\n\temail: {\r\n\t\tvalidate: (value: string) => isEmpty(value) || isEmail(value),\r\n\t\tdefaultMessage: 'This field must be an email address'\r\n\t},\r\n\talpha: {\r\n\t\tvalidate: (value: string) => isEmpty(value) || isAlpha(value),\r\n\t\tdefaultMessage: 'This field must be only letters'\r\n\t},\r\n\tnumeric: {\r\n\t\tvalidate: (value: string) => isEmpty(value) || isNumeric(value),\r\n\t\tdefaultMessage: 'This field must be only numbers'\r\n\t},\r\n\talphanumeric: {\r\n\t\tvalidate: (value: string) => isEmpty(value) || isAlphanumeric(value),\r\n\t\tdefaultMessage: 'This field must be only letters and numbers'\r\n\t},\r\n\tcurrency: {\r\n\t\tvalidate: (value: string) => isEmpty(value) || isCurrency(value),\r\n\t\tdefaultMessage: 'This field must be a currency amount'\r\n\t}\r\n}","import {useStore} from './useStore'\r\n\r\ntype FormState = {\r\n\tnextClicked?: number //Date.now()\r\n\tsubmitClicked?: number\r\n\tsubmitting?: boolean\r\n\toutcomeIndex?: number\r\n\tsubmitResponse?:any\r\n\tsubmitError?:any\r\n}\r\n\r\nconst FORM_STATE_STORE_KEY = 'formState'\r\n\r\nexport const useFormState = () => {\r\n\tconst {set, get} = useStore()\r\n\tconst setFormState = (path: keyof FormState, value: any) => {\r\n\t\tset(`${FORM_STATE_STORE_KEY}.${path}`, value)\r\n\t}\r\n\r\n\treturn {\r\n\t\tformState: get<FormState>(FORM_STATE_STORE_KEY, {}),\r\n\t\tsetFormState,\r\n\t\tnextClicked: () => {\r\n\t\t\tif (!get(FORM_STATE_STORE_KEY + '.nextClicked')) {\r\n\t\t\t\tsetFormState('nextClicked', Date.now())\r\n\t\t\t}\r\n\t\t},\r\n\t\tclearNextClicked: () => {\r\n\t\t\tsetFormState('nextClicked', undefined)\r\n\t\t},\r\n\t\tsubmitClicked: () => {\r\n\t\t\tif (!get(FORM_STATE_STORE_KEY + '.submitClicked')) {\r\n\t\t\t\tsetFormState('submitClicked', Date.now())\r\n\t\t\t}\r\n\t\t},\r\n\t\tnextOrSubmit: (): boolean => {\r\n\t\t\treturn (get(FORM_STATE_STORE_KEY + '.nextClicked') || get(FORM_STATE_STORE_KEY + '.submitClicked'))\r\n\t\t}\r\n\t}\r\n}","import {ElementDef, FieldDef, isValidationExpresionDef, ValidationConstraintDef} from '../FormDef'\r\nimport {isTypeACollection} from '../formElements/formElementTypes'\r\nimport {createPath} from '../util'\r\nimport {useValidationExpressions} from '../validation/ValidationExpressions'\r\nimport {validationRules} from '../validation/ValidationRules'\r\nimport {useConfig} from './useConfig'\r\nimport {useFieldState} from './useFieldState'\r\nimport {useFormState} from './useFormState'\r\nimport {useShowIf} from './useShowIf'\r\nimport {useUpdate} from './useUpdate'\r\nimport {useValues} from './useValues'\r\n\r\nexport const useValidation = () => {\r\n\tconst config = useConfig().config\r\n\tconst {getValue, getCollectionSize} = useValues()\r\n\tconst {getFieldState} = useFieldState()\r\n\tconst {nextOrSubmit} = useFormState()\r\n\tconst {shouldShow} = useShowIf()\r\n\tconst {updateAt} = useUpdate()\r\n\tconst validationExpressions = useValidationExpressions()\r\n\r\n\tconst validate = (path: string, def: FieldDef): string | null => {\r\n\t\tif (!def.validation || def.validation.length <= 0) {\r\n\t\t\treturn null\r\n\t\t}\r\n\t\treturn def.validation.reduce<string | null>((message, constraint): string | null => {\r\n\t\t\tif (message != null) {\r\n\t\t\t\treturn message\r\n\t\t\t}\r\n\t\t\treturn validateConstraint(constraint, path, def)\r\n\t\t}, null)\r\n\t}\r\n\r\n\tfunction validateConstraint(constraint: ValidationConstraintDef | string, path: string, def: ElementDef): string | null {\r\n\t\tif (typeof constraint === 'string') {\r\n\t\t\tconst fieldValue = getValue(path) || ''\r\n\t\t\tconst validationRule = validationRules[constraint]\r\n\t\t\tif (!validationRule.validate(fieldValue)) {\r\n\t\t\t\treturn validationRule.defaultMessage\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t} else if (!isValidationExpresionDef(constraint)) {\r\n\t\t\tconst fieldValue = getValue(path) || ''\r\n\t\t\tconst validationRule = validationRules[constraint.name]\r\n\t\t\tif (!validationRule.validate(fieldValue)) {\r\n\t\t\t\treturn constraint.message || validationRule.defaultMessage\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t} else {\r\n\t\t\tconst validationExpression = validationExpressions[constraint.name]\r\n\t\t\tif (!validationExpression.validate(path, def, constraint.expression)) {\r\n\t\t\t\treturn constraint.message || validationExpression.defaultMessage\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t}\r\n\t}\r\n\r\n\tconst validateAndShouldShow = (path: string, def: ElementDef): string | null => {\r\n\t\treturn shouldShowErrors(path) ? validate(path, def) : null\r\n\t}\r\n\r\n\tconst shouldShowErrors = (path: string): boolean => {\r\n\t\tif (nextOrSubmit() || config.showErrors === 'immediately') {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tconst fieldState = getFieldState(path) || {}\r\n\t\tif (config.showErrors === 'onFocus' && fieldState.focus) {\r\n\t\t\treturn timePlusDelayHasPassed(fieldState.focus)\r\n\t\t}\r\n\t\tif (config.showErrors === 'onValueChanged' && fieldState.valueChanged) {\r\n\t\t\treturn timePlusDelayHasPassed(fieldState.valueChanged)\r\n\t\t}\r\n\t\tif (config.showErrors === 'onBlur' && fieldState.blur) {\r\n\t\t\treturn timePlusDelayHasPassed(fieldState.blur)\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\tconst timePlusDelayHasPassed = (time: number) => {\r\n\t\tif (!config.showErrorsDelay || config.showErrorsDelay === 0) {\r\n\t\t\treturn true\r\n\t\t} else if ((time + config.showErrorsDelay) < Date.now()) {\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\tupdateAt(time + config.showErrorsDelay)\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\tconst hasErrorsRecursively = (path: string, def?: ElementDef): boolean => {\r\n\t\tif (!def || !shouldShow(path, def)) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif (validate(path, def) != null) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tif (def.children) {\r\n\t\t\treturn def.children.some((childFieldDef) => {\r\n\t\t\t\tconst childPath = createPath(path, childFieldDef.fieldId)\r\n\t\t\t\tif (!shouldShow(childPath, childFieldDef)) {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\tif (isTypeACollection(childFieldDef.type)) {\r\n\t\t\t\t\tconst size = getCollectionSize(childPath)\r\n\t\t\t\t\tfor (let index = 0; index < size; index++) {\r\n\t\t\t\t\t\tif (hasErrorsRecursively(childPath + '[' + index + ']', childFieldDef)) {\r\n\t\t\t\t\t\t\treturn true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn hasErrorsRecursively(childPath, childFieldDef)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\r\n\treturn {validate, shouldShowErrors, validateAndShouldShow, hasErrorsRecursively}\r\n}","import {useState} from 'react'\n\n// Based on useUpdate, useTimeout & useTimeoutFn from https://github.com/streamich/react-use\nexport const useUpdate = () => {\n\tconst [, setCount] = useState(0)\n\tconst update = () => setCount(count => count + 1)\n\n\tconst updateIn = (ms: number) => {\n\t\tsetTimeout(() => {\n\t\t\tupdate()\n\t\t}, ms)\n\t}\n\n\treturn {\n\t\tupdate,\n\t\tupdateIn,\n\t\tupdateAt: (when: number) => {\n\t\t\tupdateIn(when - Date.now())\n\t\t}\n\t}\n}","import {ElementDef} from '../FormDef'\r\nimport {useExpression} from '../hooks/useExpression'\r\nimport {useValues} from '../hooks/useValues'\r\nimport {validationRules} from './ValidationRules'\r\n\r\nexport const useValidationExpressions = () => {\r\n\tconst {evaluate} = useExpression()\r\n\tconst {getValue} = useValues()\r\n\r\n\tinterface ValidationExpression {\r\n\t\tvalidate: (path: string, def: ElementDef, expression: string) => boolean,\r\n\t\tdefaultMessage: string\r\n\t}\r\n\r\n\tconst validationsExpressions: { [name: string]: ValidationExpression } = {\r\n\t\tvalidIf: {\r\n\t\t\tvalidate: (path: string, def: ElementDef, expression: string) => evaluate(expression, path, def),\r\n\t\t\tdefaultMessage: 'This field is invalid' // The form editor should make the user enter message as this does not give the user any information about why the field is invalid\r\n\t\t},\r\n\t\tinvalidIf: {\r\n\t\t\tvalidate: (path: string, def: ElementDef, expression: string) => !evaluate(expression, path, def),\r\n\t\t\tdefaultMessage: 'This field is invalid' // As with validIf form editor should make the user enter message as this does not give the user any information about why the field is invalid\r\n\t\t},\r\n\t\trequiredIf: {\r\n\t\t\tvalidate: (path: string, def: ElementDef, expression: string) => {\r\n\t\t\t\tif (evaluate(expression, path, def)) {\r\n\t\t\t\t\treturn validationRules.required.validate(getValue(path))\r\n\t\t\t\t}\r\n\t\t\t\treturn true\r\n\t\t\t},\r\n\t\t\tdefaultMessage: validationRules.required.defaultMessage\r\n\t\t}\r\n\t}\r\n\r\n\treturn validationsExpressions\r\n}","import {Config} from './hooks/useConfig'\r\nimport {EventDef} from './hooks/useEvent'\r\n\r\nexport default interface FormDef {\r\n\telements: ElementDef[]\r\n\tconfig?: Config\r\n\treferenceData?: ReferenceDataDef\r\n\tsubmit: {\r\n\t\turl: string,\r\n\t\toutcomes: {\r\n\t\t\tstatusCodes: number[]\r\n\t\t\telements: ElementDef[]\r\n\t\t}[]\r\n\t}\r\n\tevents: EventDef[]\r\n}\r\n\r\nexport interface ElementDef {\r\n\tfieldId?: string,\r\n\ttype: string,\r\n\tchildren?: Array<ElementDef>\r\n\tshowIf?: string[]\r\n\thidden: boolean\r\n\tlabel?: string\r\n}\r\n\r\nexport interface FieldDef extends ElementDef {\r\n\tvalidation?: Array<string | ValidationConstraintDef>\r\n\tshowIf?: string[]\r\n\thidden: boolean\r\n\tdescription?: string\r\n\tinfo?: string\r\n}\r\n\r\nexport type ValidationConstraintDef = ValidationRuleDef | ValidationExpresionDef\r\n\r\nexport function isValidationExpresionDef(constraint: ValidationConstraintDef): constraint is ValidationExpresionDef {\r\n\treturn (constraint as ValidationExpresionDef).expression !== undefined\r\n}\r\n\r\nexport interface ValidationRuleDef {\r\n\tname: string,\r\n\targuments?: string[],\r\n\tmessage?: string\r\n}\r\n\r\nexport interface ValidationExpresionDef {\r\n\tname: string,\r\n\texpression: string,\r\n\tmessage?: string\r\n}\r\n\r\nexport interface ReferenceDataDef {\r\n\tinline?: {\r\n\t\t[name: string]: any\r\n\t}\r\n\thttp?: {\r\n\t\tname: string,\r\n\t\turl: string,\r\n\t\tmethod?: 'get' | 'GET' | 'post' | 'POST',\r\n\t\tbaseURL?: string\r\n\t}[]\r\n}\r\n\r\n","import React from 'react'\r\nimport {List} from './collection/List'\r\nimport {Autocomplete} from './input/Autocomplete'\r\nimport {ButtonGroup} from './input/ButtonGroup'\r\nimport {Dropdown} from './input/Dropdown'\r\nimport {TextInput} from './input/TextInput'\r\nimport {Heading} from './output/Heading'\r\nimport {Paragraph} from './output/Paragraph'\r\nimport {TextOutput} from './output/TextOutput'\r\nimport {Accordion} from './pagination/Accordion'\r\nimport {Tabs} from './pagination/Tabs'\r\n\r\ninterface FormElementTypesMap {\r\n\t[type: string]: React.ReactNode\r\n}\r\n\r\nexport const formElementNonCollectionTypes: FormElementTypesMap = {\r\n\t'accordion': Accordion,\r\n\t'dropdown': Dropdown,\r\n\t'textInput': TextInput,\r\n\t'heading': Heading,\r\n\t'paragraph': Paragraph,\r\n\t'buttonGroup': ButtonGroup,\r\n\t'tabs': Tabs,\r\n\t'autocomplete': Autocomplete,\r\n\t'textOutput': TextOutput\r\n}\r\n\r\nexport const formElementCollectionTypes: FormElementTypesMap = {\r\n\t'list': List\r\n}\r\n\r\nexport const formElementTypes: FormElementTypesMap = {...formElementNonCollectionTypes, ...formElementCollectionTypes}\r\n\r\nexport function lookupElement(type: string): React.ReactNode {\r\n\tconst foundType = formElementTypes[type]\r\n\tif (!foundType) {\r\n\t\tconsole.warn('Could not find form element type:' + type)\r\n\t\treturn () => <div>Could not find form element type <code>{type}</code>.</div>\r\n\t}\r\n\treturn foundType\r\n}\r\n\r\nexport function isTypeACollection(type: string): boolean {\r\n\treturn formElementCollectionTypes.hasOwnProperty(type)\r\n}","import React from 'react'\r\n\r\ninterface LabelProps {\r\n\ttext: string,\r\n\thtmlFor: string,\r\n\terror?: boolean\r\n}\r\n\r\nexport const Label = (props: LabelProps) => <label htmlFor={props.htmlFor} className={'mr-2 ' + (props.error ? 'text-danger' : '')}>{props.text}</label>","import React from 'react'\r\nimport {FieldDef} from '../FormDef'\r\nimport {useValidation} from '../hooks/useValidation'\r\nimport {Description} from './Description'\r\nimport {Label} from './Label'\r\n\r\n\r\ninterface FieldChromeProps {\r\n\tpath: string\r\n\tdef: FieldDef\r\n}\r\n\r\nexport const FieldChrome: React.FC<FieldChromeProps> = (props) => {\r\n\tconst error = useValidation().validateAndShouldShow(props.path, props.def)\r\n\r\n\treturn <div className=\"form-group pt-1\">\r\n\t\t{props.def.label && <Label htmlFor={props.path} text={props.def.label} error={!!error}/>}\r\n\t\t{props.children}\r\n\t\t{error && <div className=\"error-message text-danger pt-2\">{error}</div>}\r\n\t\t{props.def.description && <Description path={props.path} text={props.def.description}/>}\r\n\t</div>\r\n}","import axios from 'axios'\r\nimport {ReferenceDataDef} from '../FormDef'\r\nimport {useStore} from './useStore'\r\n\r\ninterface ReferenceData {\r\n\t[name: string]: any\r\n}\r\n\r\nconst REFERENCE_DATA_STORE_KEY = 'referenceData'\r\n\r\nexport const useReferenceData = () => {\r\n\tconst {set, get} = useStore()\r\n\r\n\treturn {\r\n\t\treferenceData: get<ReferenceData>(REFERENCE_DATA_STORE_KEY),\r\n\t\tsetReferenceData: (name: string, data: any) => {\r\n\t\t\tset(`${REFERENCE_DATA_STORE_KEY}.${name}`, data)\r\n\t\t},\r\n\t\tsetupReferenceData: (referenceDataDef: ReferenceDataDef = {}) => {\r\n\t\t\treferenceDataDef.http!.forEach(httpReferenceDataDef => {\r\n\t\t\t\taxios(httpReferenceDataDef)\r\n\t\t\t\t\t.then(function (response) {\r\n\t\t\t\t\t\tset(`${REFERENCE_DATA_STORE_KEY}.${httpReferenceDataDef.name}`, response.data)\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z\"\n});\n\nvar SvgSearch = function SvgSearch(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgSearch, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/search.bf4782c8.svg\";\nexport { ForwardRef as ReactComponent };","import React, {KeyboardEvent, useEffect, useRef, useState} from 'react'\r\nimport {Manager, Popper, Reference} from 'react-popper'\r\nimport {Description} from '../../display/Description'\r\nimport {FieldChrome} from '../../display/FieldChrome'\r\nimport {Label} from '../../display/Label'\r\nimport {useFieldState} from '../../hooks/useFieldState'\r\nimport {SuggestDef, useSuggestion} from '../../hooks/useSuggestion'\r\nimport {ReactComponent as Search} from '../../svg/octicons/search.svg'\r\nimport {ChildFormElements} from '../ChildFormElements'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\nexport interface AutocompleteDef extends SuggestDef {\r\n\tlabel: string\r\n\tdescription: string\r\n\tmanualDescription: string\r\n\tinfo?: string\r\n\tpostfixSearchIcon?: boolean\r\n\tshowSwitchToManualEntryLink: boolean\r\n\tswitchToManualEntryLinkLabel?: string\r\n\tswitchToSuggestLinkLabel?: string\r\n}\r\n\r\nconst defDefaults: Partial<AutocompleteDef> = {\r\n\toptions: [],\r\n\tmultiple: false,\r\n\tlabelKey: 'label',\r\n\tvalueKey: 'value',\r\n\tpostfixSearchIcon: true\r\n}\r\n\r\nexport const Autocomplete = (props: FormElementProps<AutocompleteDef>) => {\r\n\tconst def = {...defDefaults, ...props.def}\r\n\r\n\tconst {focus, blur, getFieldState, setShowManualEntryForSuggestion} = useFieldState()\r\n\tconst {inputValue, inputChanged, suggestions, showSuggestions, clear, selectOption} = useSuggestion(props.path, props.def)\r\n\tconst [cursor, setCursor] = useState<number>(-1)\r\n\r\n\tconst inputContainerRef = useRef<HTMLDivElement>(null)\r\n\tconst suggestionsContainerRef = useRef<HTMLDivElement>(null)\r\n\r\n\tconst showManualEntryForSuggestion = getFieldState(props.path).showManualEntryForSuggestion\r\n\r\n\tuseEffect(() => {\r\n\t\tif (showSuggestions && suggestions && suggestions.length > 0) {\r\n\t\t\tinputContainerRef.current!.scrollIntoView()\r\n\t\t}\r\n\t}, [showSuggestions, suggestions])\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.body.addEventListener('touchend', handlePotentialOutsideClick!)\r\n\t\tdocument.body.addEventListener('click', handlePotentialOutsideClick!)\r\n\t\treturn () => {\r\n\t\t\tdocument.body.removeEventListener('touchend', handlePotentialOutsideClick!)\r\n\t\t\tdocument.body.removeEventListener('click', handlePotentialOutsideClick!)\r\n\t\t}\r\n\t})\r\n\r\n\tconst handlePotentialOutsideClick = (event: Event) => {\r\n\t\tif (!showManualEntryForSuggestion\r\n\t\t\t&& inputContainerRef && !inputContainerRef.current!.contains(event.target as Node)\r\n\t\t\t&& suggestionsContainerRef && !suggestionsContainerRef.current!.contains(event.target as Node)) {\r\n\t\t\tclear()\r\n\t\t}\r\n\t}\r\n\tconst handleInputChange = (changedValue: string) => {\r\n\t\tinputChanged(changedValue)\r\n\t\tsetCursor(-1)\r\n\t}\r\n\tconst handleSelectionClicked = (option: any) => {\r\n\t\tselectOption(option)\r\n\t\tsetCursor(-1)\r\n\t}\r\n\tconst handleBlur = () => {\r\n\t\tblur(props.path)\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst newTarget = document.activeElement\r\n\t\t\tif (!inputContainerRef.current!.contains(newTarget) && !suggestionsContainerRef.current!.contains(newTarget)) {\r\n\t\t\t\tclear()\r\n\t\t\t}\r\n\t\t}, 1)// Have to wait 1 ms so that document.activeElement is not body\r\n\t}\r\n\tconst handleFocus = () => {\r\n\t\tfocus(props.path)\r\n\t\tif (inputValue && inputValue.length > 0) {\r\n\t\t\thandleInputChange(inputValue)\r\n\t\t}\r\n\t}\r\n\tconst handleInputKeyDown = (event: KeyboardEvent) => {\r\n\t\tif (event.keyCode === 38 && cursor > 0) { // up\r\n\t\t\tsetCursor(cursor - 1)\r\n\t\t} else if (event.keyCode === 40 && cursor < suggestions.length - 1) { // down\r\n\t\t\tsetCursor(cursor + 1)\r\n\t\t} else if (event.keyCode === 13 && cursor >= 0 && cursor < suggestions.length) { // enter\r\n\t\t\tselectOption(suggestions[cursor])\r\n\t\t} else if (event.keyCode === 27) { // esc\r\n\t\t\tclear()\r\n\t\t}\r\n\t}\r\n\r\n\tif (!showManualEntryForSuggestion) {\r\n\t\treturn <>\r\n\t\t\t<FieldChrome path={props.path} def={props.def}>\r\n\t\t\t\t<Manager>\r\n\t\t\t\t\t<Reference>\r\n\t\t\t\t\t\t{({ref}) => (<div ref={inputContainerRef} className=\"input-group\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tref={ref}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\tid={props.path}\r\n\t\t\t\t\t\t\t\t\taria-describedby={props.path + '_description'}\r\n\t\t\t\t\t\t\t\t\tvalue={inputValue || ''}\r\n\t\t\t\t\t\t\t\t\tonChange={event => handleInputChange(event.target.value)}\r\n\t\t\t\t\t\t\t\t\tonKeyDown={handleInputKeyDown}\r\n\t\t\t\t\t\t\t\t\tonFocus={handleFocus}\r\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{def.postfixSearchIcon && <div className=\"input-group-append\" onClick={() => inputChanged(inputValue)}>\r\n\t\t\t\t\t\t\t<span className=\"input-group-text\">\r\n\t\t\t\t\t\t\t\t<Search className=\"search-icon\"/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Reference>\r\n\t\t\t\t\t<Popper placement=\"bottom-start\">\r\n\t\t\t\t\t\t{({ref, style, placement}) => (\r\n\t\t\t\t\t\t\t<div ref={suggestionsContainerRef}>\r\n\t\t\t\t\t\t\t\t<div ref={ref} style={style} className=\"popper\" data-placement={placement}>\r\n\t\t\t\t\t\t\t\t\t{showSuggestions && suggestions && suggestions.length > 0 && <div className=\"dropdown-menu show\">\r\n\t\t\t\t\t\t\t\t\t\t{suggestions.map((suggestion, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\tlet value\r\n\t\t\t\t\t\t\t\t\t\t\tlet label\r\n\t\t\t\t\t\t\t\t\t\t\tif (typeof suggestion === 'string') {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue = suggestion\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel = suggestion\r\n\t\t\t\t\t\t\t\t\t\t\t} else if (typeof suggestion === 'object') {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue = def.valueKey && suggestion[def.valueKey]\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabel = def.labelKey && suggestion[def.labelKey]\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\treturn <button className={'dropdown-item' + (cursor === index ? ' active' : '')} key={value + label} onClick={() => handleSelectionClicked(suggestion)}>{label}</button>\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Popper>\r\n\t\t\t\t</Manager>\r\n\t\t\t</FieldChrome>\r\n\t\t\t{def.showSwitchToManualEntryLink &&\r\n\t\t\t<button className=\"btn btn-link pt-0 pl-0 manual-entry-link\" onClick={() => setShowManualEntryForSuggestion(props.path, true)}>{def.switchToManualEntryLinkLabel}</button>}\r\n\t\t</>\r\n\t} else {\r\n\t\treturn <div className=\"form-group pt-2\">\r\n\t\t\t{props.def.label && <Label htmlFor={props.path} text={props.def.label}/>}\r\n\t\t\t{props.def.children && <div className=\"card\">\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<button className=\"btn btn-link pt-0 pl-0 pb-1 mt-n1\" onClick={() => setShowManualEntryForSuggestion(props.path, false)}>{def.switchToSuggestLinkLabel}</button>\r\n\t\t\t\t\t<ChildFormElements parentPath={props.path} childFormElements={props.def.children}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>}\r\n\t\t\t{props.def.manualDescription && <Description path={props.path} text={props.def.manualDescription}/>}\r\n\t\t</div>\r\n\t}\r\n}","import {findLastIndex} from 'lodash-es'\r\nimport {useState} from 'react'\r\nimport {ElementDef} from '../FormDef'\r\nimport {useConfig} from './useConfig'\r\nimport {useFormState} from './useFormState'\r\nimport {useShowIf} from './useShowIf'\r\nimport {useSubmit} from './useSubmit'\r\nimport {useValidation} from './useValidation'\r\n\r\nexport const usePagination = () => {\r\n\tconst {config} = useConfig()\r\n\tconst {hasErrorsRecursively} = useValidation()\r\n\tconst {nextClicked, clearNextClicked, submitClicked} = useFormState()\r\n\tconst {shouldShow} = useShowIf()\r\n\tconst {submitting, submit} = useSubmit()\r\n\r\n\tconst [path, setPath] = useState<string>('')\r\n\tconst [pages, setPages] = useState<ElementDef[]>([])\r\n\tconst [currentPageIndex, setCurrentPageIndex] = useState<number>(-1)\r\n\r\n\tconst firstShownPage = pages.findIndex(page => shouldShow(path, page))\r\n\tconst lastShownPage = findLastIndex(pages, page => shouldShow(path, page))\r\n\r\n\tconst currentIsFirst = currentPageIndex === firstShownPage\r\n\tconst currentIsLast = currentPageIndex === lastShownPage\r\n\r\n\tconst currentPageHasErrors = () => hasErrorsRecursively(path, pages[currentPageIndex])\r\n\tconst disableNext = config.disableNextWhenErrors && currentPageHasErrors()\r\n\r\n\r\n\treturn {\r\n\t\tsetUp: (path: string, setupPages: ElementDef[]) => {\r\n\t\t\tsetPath(path)\r\n\t\t\tsetPages(setupPages)\r\n\t\t\tif (currentPageIndex < 0) {\r\n\t\t\t\tsetCurrentPageIndex(setupPages.findIndex(page => shouldShow(path, page)))\r\n\t\t\t}\r\n\t\t},\r\n\t\tnextClicked: () => {\r\n\t\t\tif (currentPageHasErrors()) {\r\n\t\t\t\tnextClicked()\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = currentPageIndex + 1; i < pages.length; i++) {\r\n\t\t\t\t\tconst pageDef = pages[i]\r\n\t\t\t\t\tif (pageDef && shouldShow(path, pageDef)) {\r\n\t\t\t\t\t\tclearNextClicked()\r\n\t\t\t\t\t\tsetCurrentPageIndex(i)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tpreviousClicked: () => {\r\n\t\t\tfor (let i = currentPageIndex - 1; i >= 0; i--) {\r\n\t\t\t\tconst pageDef = pages[i]\r\n\t\t\t\tif (pageDef && shouldShow(path, pageDef)) {\r\n\t\t\t\t\tclearNextClicked()\r\n\t\t\t\t\tsetCurrentPageIndex(i)\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsubmitClicked: () => {\r\n\t\t\tif (currentPageHasErrors()) {\r\n\t\t\t\tsubmitClicked()\r\n\t\t\t} else {\r\n\t\t\t\tsubmit()\r\n\t\t\t}\r\n\t\t},\r\n\t\tcurrentPageIndex, setCurrentPageIndex, currentIsFirst, currentIsLast, currentPageHasErrors, disableNext, submitting\r\n\t}\r\n}","import axios from 'axios'\nimport {useFormDef} from './useFormDef'\nimport {useFormState} from './useFormState'\nimport {useValues} from './useValues'\n\nexport const useSubmit = () => {\n\tconst {formDef} = useFormDef()\n\tconst {values} = useValues()\n\tconst {formState, setFormState} = useFormState()\n\n\n\treturn {\n\t\tsubmitting: formState.submitting,\n\t\tsubmit: () => {\n\t\t\tsetFormState('submitting', true)\n\t\t\taxios.post(formDef.submit.url, values)\n\t\t\t\t.then(function (response) {\n\t\t\t\t\tconsole.log(response)\n\t\t\t\t\tsetFormState('submitting', false)\n\t\t\t\t\tsetFormState('submitResponse', response)\n\t\t\t\t\tconst outcomeIndex = formDef.submit.outcomes.findIndex((outcome) => {\n\t\t\t\t\t\tif (outcome.statusCodes.includes(response.status)) {\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false\n\t\t\t\t\t})\n\t\t\t\t\tsetFormState('outcomeIndex', outcomeIndex)\n\t\t\t\t}).catch(function (error) {\n\t\t\t\tsetFormState('submitError', error)\n\t\t\t\tconsole.error('error:', error)\n\t\t\t})\n\n\t\t}\n\t}\n}\n","import classNames from 'classnames'\r\nimport React, {useEffect, useRef} from 'react'\r\nimport {ElementDef} from '../../FormDef'\r\nimport {usePagination} from '../../hooks/usePagination'\r\nimport {useShowIf} from '../../hooks/useShowIf'\r\nimport {ChildFormElements} from '../ChildFormElements'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\n\r\nexport const Accordion = (props: FormElementProps) => {\r\n\tconst {shouldShow} = useShowIf()\r\n\tconst pagination = usePagination()\r\n\tconst currentPageRef = useRef<HTMLDivElement>(null)\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.def.children && pagination.setUp(props.path, props.def.children)\r\n\t})\r\n\r\n\tif (!props.def.children) {\r\n\t\treturn null\r\n\t}\r\n\r\n\r\n\tconst scrollCurrentPageIntoView = () => {\r\n\t\tif (currentPageRef && currentPageRef.current) {\r\n\t\t\twindow.scroll({top: currentPageRef.current.getBoundingClientRect().top - 100})\r\n\t\t}\r\n\t}\r\n\r\n\tconst goToPage = (index: number) => {\r\n\t\tpagination.setCurrentPageIndex(index)\r\n\t\tscrollCurrentPageIntoView()\r\n\t}\r\n\r\n\tconst previous = () => {\r\n\t\tpagination.previousClicked()\r\n\t\tscrollCurrentPageIntoView()\r\n\t}\r\n\r\n\tconst next = () => {\r\n\t\tpagination.nextClicked()\r\n\t\tscrollCurrentPageIntoView()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\r\n\t\t\t{props.def.children!.map((page, index) => shouldShow(props.path, page) && <div className=\"card\" key={props.path + '_PAGE_' + index}>\r\n\t\t\t\t\t{pagination.currentPageIndex === index && <div ref={currentPageRef}/>}\r\n\t\t\t\t\t<div className=\"card-header cursor-pointer\" onClick={() => goToPage(index)}>\r\n\t\t\t\t\t\t<h3 className=\"d-inline\">{page.label}</h3>{index < pagination.currentPageIndex && <button className=\"link-button text-muted px-1\" onClick={() => goToPage(index)}><u>edit</u></button>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{pagination.currentPageIndex === index && <div className=\"card-body m-1\">\r\n\t\t\t\t\t\t{page.children && <ChildFormElements childFormElements={page.children as ElementDef[]} parentPath={props.parentPath}/>}\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t\t<nav aria-label=\"Page navigation\">\r\n\t\t\t\t\t\t\t\t\t<ul className=\"pagination mb-0\">\r\n\t\t\t\t\t\t\t\t\t\t{!pagination.currentIsFirst && <li className=\"page-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"page-link\" onClick={previous}>Previous</button>\r\n\t\t\t\t\t\t\t\t\t\t</li>}\r\n\t\t\t\t\t\t\t\t\t\t{!pagination.currentIsLast && <li className={classNames('page-item', {disabled: pagination.disableNext})}>\r\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"page-link\" onClick={next} disabled={pagination.disableNext}>Next</button>\r\n\t\t\t\t\t\t\t\t\t\t</li>}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{pagination.currentIsLast && <div className=\"col\">\r\n\t\t\t\t\t\t\t\t<button className=\"btn btn-primary float-right\" onClick={pagination.submitClicked}>Submit</button>\r\n\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\nimport {FieldChrome} from '../../display/FieldChrome'\r\nimport {FieldDef} from '../../FormDef'\r\nimport {useFieldState} from '../../hooks/useFieldState'\r\nimport {useReferenceData} from '../../hooks/useReferenceData'\r\nimport {useValues} from '../../hooks/useValues'\r\nimport {createKey} from '../../util'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\nexport interface DropdownDef extends FieldDef {\r\n\tinfo?: string\r\n\toptions?: string[]\r\n\treferenceDataOptions?: string\r\n}\r\n\r\ninterface Option {\r\n\tvalue: string | number,\r\n\tlabel: string\r\n}\r\n\r\ntype Data = string | number\r\n\r\nexport const Dropdown = (props: FormElementProps<DropdownDef>) => {\r\n\tconst referenceData = useReferenceData().referenceData\r\n\tconst {getValue, setValue} = useValues()\r\n\tconst {blur, focus} = useFieldState()\r\n\tlet options: Array<Option | Data> = props.def.options || []\r\n\tif (props.def.referenceDataOptions) {\r\n\t\toptions = options.concat(referenceData[props.def.referenceDataOptions])\r\n\t}\r\n\treturn <FieldChrome path={props.path} def={props.def}>\r\n\t\t<select\r\n\t\t\tclassName=\"form-control custom-select\"\r\n\t\t\tid={props.def.fieldId}\r\n\t\t\tvalue={getValue(props.path) || ''}\r\n\t\t\tonChange={event => setValue(props.path, event.currentTarget.value)}\r\n\t\t\taria-describedby={props.def.fieldId + '_description'}\r\n\t\t\tonFocus={() => focus(props.path)}\r\n\t\t\tonBlur={() => blur(props.path)}\r\n\t\t>\r\n\t\t\t<option value=\"\"/>\r\n\t\t\t{options.map((option) => {\r\n\t\t\t\tconst label = typeof option === 'object' ? option.label : option\r\n\t\t\t\tconst value = typeof option === 'object' ? option.value : option\r\n\t\t\t\treturn <option value={value} key={value || createKey()}>{label}</option>\r\n\t\t\t})}\r\n\t\t</select>\r\n\t</FieldChrome>\r\n}","import React from 'react'\r\nimport {FieldChrome} from '../../display/FieldChrome'\r\nimport {FieldDef} from '../../FormDef'\r\nimport {useFieldState} from '../../hooks/useFieldState'\r\nimport {useValues} from '../../hooks/useValues'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\ninterface TextInputDef extends FieldDef {\r\n}\r\n\r\nexport const TextInput = (props: FormElementProps<TextInputDef>) => {\r\n\tconst {getValue, setValue} = useValues()\r\n\tconst {blur, focus} = useFieldState()\r\n\r\n\treturn (<FieldChrome path={props.path} def={props.def}>\r\n\t\t<input\r\n\t\t\ttype=\"text\"\r\n\t\t\tclassName=\"form-control\"\r\n\t\t\tid={props.path}\r\n\t\t\taria-describedby={props.path + '_description'}\r\n\t\t\tvalue={getValue(props.path) || ''}\r\n\t\t\tonChange={event => setValue(props.path, event.currentTarget.value)}\r\n\t\t\tonFocus={() => focus(props.path)}\r\n\t\t\tonBlur={() => blur(props.path)}\r\n\t\t/>\r\n\t</FieldChrome>)\r\n}","import React from 'react'\nimport {FormElementProps} from '../FormElementProps'\n\ninterface HeadingAttributes {\n\tlevel: number\n\ttext: string\n}\n\nexport const Heading = (props: FormElementProps<HeadingAttributes>) =>\n\tReact.createElement('h' + props.def.level, null, props.def.text)","import React from 'react'\nimport {FormElementProps} from '../FormElementProps'\n\n\ninterface ParagraphAttributes {\n\ttext: string\n}\n\nexport const Paragraph = (props: FormElementProps<ParagraphAttributes>) => <p>{props.def.text}</p>","import React, {useState} from 'react'\r\nimport {FieldChrome} from '../../display/FieldChrome'\r\nimport {FieldDef} from '../../FormDef'\r\nimport {useFieldState} from '../../hooks/useFieldState'\r\n\r\nimport {useValues} from '../../hooks/useValues'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\ninterface ButtonGroupDef extends FieldDef {\r\n\tlabel: string\r\n\tdescription?: string\r\n\tinfo?: string\r\n\toptions: string[]\r\n}\r\n\r\nexport const ButtonGroup = (props: FormElementProps<ButtonGroupDef>) => {\r\n\tconst {setValue, getValue} = useValues()\r\n\tconst {blur, focus} = useFieldState()\r\n\tconst value = getValue(props.path)\r\n\tconst [buttonFocus, setButtonFocus] = useState<number | null>(null)\r\n\r\n\treturn (\r\n\t\t<FieldChrome path={props.path} def={props.def}>\r\n\t\t\t<div className=\"btn-group-wrapper\"\r\n\t\t\t\t onFocus={() => focus(props.path)}\r\n\t\t\t\t onBlur={() => blur(props.path)}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"btn-group btn-group-toggle\">\r\n\t\t\t\t\t{props.def.options.map((option, index) => (\r\n\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\tclassName={'btn btn-outline-primary' + (value === option ? ' active' : '') + (buttonFocus === index ? ' focus' : '')}\r\n\t\t\t\t\t\t\tkey={props.path + '_OPTION_' + option}\r\n\t\t\t\t\t\t\tonFocus={() => setButtonFocus(index)}\r\n\t\t\t\t\t\t\tonBlur={() => setButtonFocus(null)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\tvalue={option}\r\n\t\t\t\t\t\t\t\tchecked={option === value}\r\n\t\t\t\t\t\t\t\tonChange={event => setValue(props.path, event.currentTarget.value)}\r\n\t\t\t\t\t\t\t/>{option}\r\n\t\t\t\t\t\t</label>))\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</FieldChrome>)\r\n}","import classNames from 'classnames'\r\nimport React, {useEffect, useRef} from 'react'\r\nimport {ElementDef} from '../../FormDef'\r\nimport {usePagination} from '../../hooks/usePagination'\r\nimport {useShowIf} from '../../hooks/useShowIf'\r\nimport {ChildFormElements} from '../ChildFormElements'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\ninterface TabsDef extends ElementDef {\r\n\tpill?: boolean\r\n}\r\n\r\n\r\nexport const Tabs = (props: FormElementProps<TabsDef>) => {\r\n\tconst {shouldShow} = useShowIf()\r\n\tconst pagination = usePagination()\r\n\tconst tabsRef = useRef<HTMLDivElement>(null)\r\n\r\n\t/* eslint-disable react-hooks/exhaustive-deps */\r\n\tuseEffect(() => {\r\n\t\tprops.def.children && pagination.setUp(props.path, props.def.children)\r\n\t}, [props.def, props.path])\r\n\t/* eslint-enable react-hooks/exhaustive-deps */\r\n\r\n\tuseEffect(() => {\r\n\t\tif (tabsRef && tabsRef.current && tabsRef.current.getBoundingClientRect().top < 0) {\r\n\t\t\ttabsRef.current.scrollIntoView()\r\n\t\t}\r\n\t}, [pagination.currentPageIndex])\r\n\r\n\tif (!props.def.children) {\r\n\t\treturn null\r\n\t}\r\n\r\n\tif (pagination.currentPageIndex < 0) {\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"card rounded-0\">\r\n\t\t\t<div className=\"card-header\" ref={tabsRef}>\r\n\t\t\t\t<ul className={'nav ' + (props.def.pill ? 'nav-pills card-header-pills' : 'nav-tabs card-header-tabs')}>\r\n\t\t\t\t\t{props.def.children!.map((page, index) => {\r\n\t\t\t\t\t\tif (!shouldShow(props.path, page)) {\r\n\t\t\t\t\t\t\treturn null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst key = props.path + '_PAGE_' + index\r\n\t\t\t\t\t\t//The bootstrap btn-link doesn't style the same as a link with a href when used as nav-link\r\n\t\t\t\t\t\t/* eslint-disable jsx-a11y/anchor-is-valid, no-script-url */\r\n\t\t\t\t\t\tif (index < pagination.currentPageIndex) {\r\n\t\t\t\t\t\t\treturn <li className=\"nav-item\" key={key}>\r\n\t\t\t\t\t\t\t\t<a className=\"nav-link\" href=\"javascript:void(0)\" onClick={() => pagination.setCurrentPageIndex(index)}>{page.label}</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/* eslint-enable no-script-url, jsx-a11y/anchor-is-valid */\r\n\t\t\t\t\t\tif (index === pagination.currentPageIndex) {\r\n\t\t\t\t\t\t\treturn <li className=\"nav-item\" key={key}>\r\n\t\t\t\t\t\t\t\t<button className=\"nav-link active\">{page.label}</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (index > pagination.currentPageIndex) {\r\n\t\t\t\t\t\t\treturn <li className=\"nav-item\" key={key}>\r\n\t\t\t\t\t\t\t\t<button className=\"nav-link disabled\" tabIndex={-1} aria-disabled=\"true\">{page.label}</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<ChildFormElements childFormElements={props.def.children[pagination.currentPageIndex].children as ElementDef[]} parentPath={props.parentPath}/>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<nav aria-label=\"Page navigation\">\r\n\t\t\t\t\t\t\t\t<ul className=\"pagination mb-0\">\r\n\t\t\t\t\t\t\t\t\t{!pagination.currentIsFirst && <li className=\"page-item\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"page-link\" onClick={pagination.previousClicked}>Previous</button>\r\n\t\t\t\t\t\t\t\t\t</li>}\r\n\t\t\t\t\t\t\t\t\t{!pagination.currentIsLast && <li className={classNames('page-item', {disabled: pagination.disableNext})}>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"page-link\" onClick={pagination.nextClicked} disabled={pagination.disableNext}>Next</button>\r\n\t\t\t\t\t\t\t\t\t</li>}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</nav>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{pagination.currentIsLast && <div className=\"col\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-primary float-right\" onClick={pagination.submitClicked}>Submit</button>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>)\r\n}","import axios from 'axios'\r\nimport {useEffect, useState} from 'react'\r\nimport {FieldDef} from '../FormDef'\r\nimport {useFieldState} from './useFieldState'\r\nimport {useReferenceData} from './useReferenceData'\r\nimport {useValues} from './useValues'\r\n\r\nexport interface SuggestDef extends FieldDef {\r\n\toptions?: any[]\r\n\treferenceDataOptions?: string\r\n\tmultiple?: boolean\r\n\tlabelKey?: string\r\n\tvalueKey?: string\r\n\tvalueIsWholeOption?: boolean\r\n\tvalueExpression?: string\r\n\thttp?: { url?: string }\r\n}\r\n\r\nexport function useSuggestion(path: string, def: SuggestDef) {\r\n\tconst {referenceData} = useReferenceData()\r\n\tconst {setValue, setValueExpression} = useValues()\r\n\tconst {getFieldState, setSelectedSuggestionLabel} = useFieldState()\r\n\tconst fieldState = getFieldState(path)\r\n\r\n\tconst [suggestions, setSuggestions] = useState<any[]>([])\r\n\tconst [httpSuggestions, setHttpSuggestions] = useState<any[]>([])\r\n\tconst [inlineSuggestions, setInlineSuggestions] = useState<any[]>([])\r\n\tconst [inputValue, setInputValue] = useState<string>(fieldState.selectedSuggestionLabel || '')\r\n\tconst [showSuggestions, setShowSuggestions] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSuggestions(inlineSuggestions.concat(httpSuggestions))\r\n\t}, [inlineSuggestions, httpSuggestions])\r\n\r\n\tconst inputChanged = (newInputValue: string) => {\r\n\t\tsetInputValue(newInputValue)\r\n\t\tsetInlineSuggestions([])\r\n\t\tsetHttpSuggestions([])\r\n\t\tsetSuggestions([])\r\n\t\tconst lowerInputValue = newInputValue.trim().toLowerCase()\r\n\t\tconst lowerSelectedLabel = fieldState.selectedSuggestionLabel && fieldState.selectedSuggestionLabel.toLowerCase()\r\n\t\tif (lowerInputValue !== lowerSelectedLabel && lowerInputValue.length > 0) {\r\n\t\t\tconst referenceDataOptions = (def.referenceDataOptions && referenceData[def.referenceDataOptions]) || []\r\n\t\t\tconst fieldDefOption = def.options || []\r\n\t\t\tconst inlineOptions = referenceDataOptions.concat(fieldDefOption)\r\n\r\n\t\t\tconst matchingInlineOptions = inlineOptions.filter((option: any) => {\r\n\t\t\t\treturn JSON.stringify(option).toLowerCase().includes(lowerInputValue)\r\n\t\t\t})\r\n\r\n\t\t\tsetInlineSuggestions(matchingInlineOptions)\r\n\r\n\t\t\tif (def.http && def.http.url) {\r\n\t\t\t\taxios.get<any[]>(def.http.url + newInputValue)\r\n\t\t\t\t\t.then(function (response) {\r\n\t\t\t\t\t\tsetHttpSuggestions(response.data)\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tsetShowSuggestions(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst clear = () => {\r\n\t\tsetShowSuggestions(false)\r\n\t}\r\n\r\n\tconst selectOption = (option: any) => {\r\n\t\tif (typeof option === 'string') {\r\n\t\t\tsetValue(path, option)\r\n\t\t\tsetSelectedSuggestionLabel(path, option)\r\n\t\t\tsetInputValue(option)\r\n\t\t} else if (typeof option === 'object') {\r\n\t\t\tif (def.valueIsWholeOption) {\r\n\t\t\t\tsetValue(path, option)\r\n\t\t\t} else if (def.valueExpression) {\r\n\t\t\t\tsetValueExpression(path, def, def.valueExpression, {option})\r\n\t\t\t} else if (def.valueKey) {\r\n\t\t\t\tsetValue(path, option[def.valueKey])\r\n\t\t\t}\r\n\t\t\tsetSelectedSuggestionLabel(path, option[def.labelKey || 'label'])\r\n\t\t\tsetInputValue(option[def.labelKey || 'label'])\r\n\r\n\t\t}\r\n\t\tsetShowSuggestions(false)\r\n\t}\r\n\r\n\treturn {inputValue, inputChanged, suggestions, showSuggestions, clear, selectOption}\r\n}","import React from 'react'\r\nimport {FieldDef} from '../../FormDef'\r\nimport {useExpression} from '../../hooks/useExpression'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\ninterface TextOutputDef extends FieldDef {\r\n\texpression?: string\r\n\tvalue?: string\r\n}\r\n\r\nexport const TextOutput = (props: FormElementProps<TextOutputDef>) => {\r\n\tconst {evaluate} = useExpression()\r\n\tif (props.def.expression) {\r\n\t\treturn <>{evaluate(props.def.expression, props.path, props.def)}</>\r\n\t}\r\n\tif (props.def.value) {\r\n\t\treturn <>{props.def.value}</>\r\n\t}\r\n\treturn null\r\n}","import {times} from 'lodash-es'\r\nimport React from 'react'\r\nimport {Description} from '../../display/Description'\r\nimport {FieldDef} from '../../FormDef'\r\nimport {useValues} from '../../hooks/useValues'\r\nimport {ordinal} from '../../util'\r\nimport {ChildFormElements} from '../ChildFormElements'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\n\r\nexport interface ListDef extends FieldDef {\r\n\titemLabel: string\r\n}\r\n\r\nexport const List = (props: FormElementProps<ListDef>) => {\r\n\tconst {getCollectionSize, addToCollection, deleteFromCollection} = useValues()\r\n\treturn (\r\n\t\t<div className=\"form-group\">\r\n\t\t\t<span className=\"h5 align-middle mr-2\">{props.def.label}</span>\r\n\t\t\t{props.def.description && <Description path={props.path} text={props.def.description}/>}\r\n\t\t\t{times(getCollectionSize(props.path), (index: number) =>\r\n\t\t\t\t<div className={'card border-bottom mb-3' + (index === 0 ? ' mt-2' : '')} key={props.path + '_COLLECTION_' + index}>\r\n\t\t\t\t\t<h6 className=\"card-header\">{ordinal(index + 1)} {props.def.itemLabel}\r\n\t\t\t\t\t\t<button className=\"close text-dark\" onClick={() => deleteFromCollection(props.path, index)} aria-label=\"close\">\r\n\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</h6>\r\n\t\t\t\t\t<div className=\"card-body pb-0\">\r\n\t\t\t\t\t\t{props.def.children && <ChildFormElements childFormElements={props.def.children} parentPath={props.path + '[' + index + ']'}/>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<button className=\"btn btn-primary d-inline\" onClick={() => addToCollection(props.path)}>Add</button>\r\n\t\t</div>)\r\n}\r\n","import React from 'react'\r\nimport {ElementDef, FieldDef} from '../FormDef'\r\nimport {useShowIf} from '../hooks/useShowIf'\r\nimport {createPath} from '../util'\r\nimport {FormElementProps} from './FormElementProps'\r\nimport {lookupElement} from './formElementTypes'\r\n\r\nexport const ChildFormElements: React.FC<{ childFormElements: (FieldDef | ElementDef)[], parentPath: string }> = (props) =>\r\n\t<div>\r\n\t\t{props.childFormElements.map((elementDef, index) => {\r\n\t\t\tconst path = createPath(props.parentPath, elementDef.fieldId)\r\n\t\t\treturn <ChildFormElement path={path} parentPath={props.parentPath} elementDef={elementDef} key={path + '_' + index}/>\r\n\t\t})}\r\n\t</div>\r\n\r\nconst ChildFormElement: React.FC<{ path: string, parentPath: string, elementDef: ElementDef }> = (props) => {\r\n\tconst {shouldShow} = useShowIf()\r\n\tif (!shouldShow(props.path, props.elementDef)) {\r\n\t\treturn null\r\n\t}\r\n\tconst Child: any = lookupElement(props.elementDef.type)\r\n\tconst childProps: FormElementProps = {\r\n\t\tdef: props.elementDef,\r\n\t\tparentPath: props.parentPath,\r\n\t\tpath: props.path\r\n\t}\r\n\treturn React.createElement(Child, childProps)\r\n}","import React, {useLayoutEffect} from 'react'\r\nimport FormDef from './FormDef'\r\nimport {ChildFormElements} from './formElements/ChildFormElements'\r\nimport {useConfig} from './hooks/useConfig'\r\nimport {useFormDef} from './hooks/useFormDef'\r\nimport {useFormState} from './hooks/useFormState'\r\nimport {useReferenceData} from './hooks/useReferenceData'\r\n\r\nexport interface FormProps {\r\n\tformDef: FormDef\r\n}\r\n\r\nexport const Form: React.FC<FormProps> = (props) => {\r\n\tconst {setupFormDef} = useFormDef()\r\n\tconst {setupConfig} = useConfig()\r\n\tconst {setupReferenceData} = useReferenceData()\r\n\r\n\t/* eslint-disable react-hooks/exhaustive-deps */\r\n\tuseLayoutEffect(() => {\r\n\t\tsetupFormDef(props.formDef)\r\n\t\tsetupConfig(props.formDef.config)\r\n\t\tsetupReferenceData(props.formDef.referenceData)\r\n\t}, [])\r\n\t/* eslint-enable react-hooks/exhaustive-deps */\r\n\r\n\tconst outcomeIndex = useFormState().formState.outcomeIndex\r\n\tif (outcomeIndex != null) {\r\n\t\treturn <div className=\"outcome container\">\r\n\t\t\t<ChildFormElements childFormElements={props.formDef.submit.outcomes[outcomeIndex].elements} parentPath=\"\"/>\r\n\t\t</div>\r\n\t}\r\n\r\n\treturn <div className=\"form\">\r\n\t\t<ChildFormElements childFormElements={props.formDef.elements} parentPath=\"\"/>\r\n\t</div>\r\n}","//import 'react-app-polyfill/ie11'\r\nimport axios from 'axios'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {Form} from './Form'\r\nimport FormDef from './FormDef'\r\nimport {StoreProvider} from './hooks/useStore'\r\n\r\nimport './index.css'\r\n\r\naxios.get<FormDef>('api/formDefinition/exampleFormDefinition.json')\r\n\t.then(function (response) {\r\n\t\tReactDOM.render(\r\n\t\t\t<StoreProvider>\r\n\t\t\t\t<Form formDef={response.data}/>\r\n\t\t\t</StoreProvider>,\r\n\t\t\tdocument.getElementById('form')\r\n\t\t)\r\n\t})"],"sourceRoot":""}