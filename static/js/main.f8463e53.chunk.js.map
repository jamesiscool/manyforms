{"version":3,"sources":["util.ts","display/Description.tsx","state/FieldStateContainer.ts","state/ValuesContainer.ts","validation/ValidationRule.ts","state/ConfigContainer.ts","state/ExpressionContainer.ts","state/FormStateContainer.ts","state/ValidationContainer.ts","FormDef.ts","formElements/formElementTypes.tsx","display/Label.tsx","display/FieldChrome.tsx","formElements/pagination/Accordion.tsx","formElements/input/Dropdown.tsx","formElements/input/TextInput.tsx","formElements/output/Heading.tsx","formElements/output/Paragraph.tsx","formElements/input/ButtonGroup.tsx","formElements/collection/List.tsx","formElements/ChildFormElements.tsx","Form.tsx","index.tsx"],"names":["createFiledPath","parentPath","fieldId","Description","props","react_default","a","createElement","id","path","className","text","FieldStateContainer","createContainer","_useState","useState","_useState2","Object","slicedToArray","fieldStates","setFieldStates","setEventNow","event","nextFieldStates","produce","draftFieldStates","fieldState","Date","now","get","focus","valueChanged","blur","ValuesContainer","initialState","arguments","length","undefined","fieldStateContainer","useContainer","formValues","setFormValues","setValue","value","nextFormValues","draftFormValues","set","getValue","addToCollection","oldCollection","newCollection","concat","toConsumableArray","deleteFromCollection","index","slice","getCollectionSize","collection","validationRuleMap","email","validate","isEmail","defaultMessage","alpha","isAlpha","numeric","isNumeric","alphanumeric","isAlphanumeric","currency","isCurrency","defaultConfig","showErrors","showErrorsDelay","disableNextWhenErrors","ConfigContainer","userConfig","config","assign","jexl","addTransform","val","toUpperCase","toLowerCase","addBinaryOp","left","right","ExpressionContainer","valuesContainer","evaluate","fieldDef","expression","console","log","context","evalSync","FormStateContainer","formState","setFormState","nextClicked","nextFormStates","draftFormState","clearNextClicked","submitClicked","nextOrSubmit","ValidationContainer","formStateContainer","expressionContainer","nextTick","setNextTick","useEffect","setTimeout","validation","fieldValue","required","constraints","reduce","firstErrorMessage","constraint","name","isValidationRuleDef","validationRule","message","validateConstraint","shouldShowErrors","timeHasPassedAndShouldShowError","time","validateAndShouldShow","validateRecursively","children","some","childFieldDef","type","childPath","formElementCollectionTypes","hasOwnProperty","size","Label","htmlFor","error","FieldChrome","def","attributes","label","Label_Label","description","Description_Description","formElementNonCollectionTypes","accordion","validationContainer","currentPageRef","useRef","currentPage","setCurrentPage","definition","isFirst","isLast","currentPageHasErrors","disableNext","goToPage","newIndex","current","window","scroll","top","getBoundingClientRect","previous","next","submit","role","aria-multiselectable","map","page","key","ref","onClick","ChildFormElements_ChildFormElements","childFormElements","aria-label","classNames","disabled","dropdown","formValuesContainer","FieldChrome_FieldChrome","onChange","currentTarget","aria-describedby","onFocus","onBlur","options","option","textInput","heading","React","level","paragraph","buttonGroup","setFocus","checked","list","times","n","s","v","ordinal","itemLabel","aria-hidden","formElementTypes","ChildFormElements","elementDef","Child","foundType","warn","lookupElement","Form","Provider","formDef","elements","axios","then","response","ReactDOM","render","Form_Form","data","document","getElementById","catch","Error"],"mappings":"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","file":"static/js/main.f8463e53.chunk.js","sourcesContent":["//export const createKey = () => (Math.random() + 1).toString(36).substring(2)\n\nexport const ordinal = (n: number): string => {\n    const s = ['th', 'st', 'nd', 'rd'],\n        v = n % 100\n    return n + (s[(v - 20) % 10] || s[v] || s[0])\n}\n\nexport const createFiledPath = (parentPath: string, fieldId?: string): string => {\n    if (!fieldId) {\n        return parentPath\n    }\n    if (parentPath !== '') {\n        return parentPath + '.' + fieldId\n    }\n    return fieldId\n\n}","import React from 'react'\n\ninterface DescriptionProps {\n    path: string,\n    text: string\n}\n\nexport const Description = (props: DescriptionProps) => (\n    <div id={props.path + '_description'} className=\"pt-2 text-muted description\">{props.text}</div>\n)","import produce from 'immer'\r\nimport {useState} from 'react'\r\nimport {createContainer} from 'unstated-next'\r\n\r\ntype Events = 'focus' | 'valueChanged' | 'blur'\r\n\r\ntype FieldState = {\r\n    [Event in Events]: number //Date.now() when field first got focused\r\n}\r\n\r\nexport function useFieldState() {\r\n    const [fieldStates, setFieldStates] = useState<{ [path: string]: FieldState }>({})\r\n    const get = (path: string) => fieldStates[path] || {}\r\n    const setEventNow = (path: string, event: Events) => {\r\n        const nextFieldStates = produce(fieldStates, draftFieldStates => {\r\n                const fieldState = draftFieldStates[path] || {}\r\n                if (!fieldState[event]) {\r\n                    fieldState[event] = Date.now()\r\n                }\r\n                draftFieldStates[path] = fieldState\r\n            }\r\n        )\r\n        setFieldStates(nextFieldStates)\r\n    }\r\n    const focus = (path: string) => setEventNow(path, 'focus')\r\n    const valueChanged = (path: string) => setEventNow(path, 'valueChanged')\r\n    const blur = (path: string) => setEventNow(path, 'blur')\r\n\r\n    return {fieldStates, get, focus, valueChanged, blur}\r\n}\r\n\r\nexport const FieldStateContainer = createContainer(useFieldState)","import produce from 'immer'\r\nimport get from 'lodash-es/get'\r\nimport set from 'lodash-es/set'\r\nimport {useState} from 'react'\r\nimport {createContainer, useContainer} from 'unstated-next'\r\nimport {FieldStateContainer} from './FieldStateContainer'\r\n\r\nexport function useValues(initialState = {}) {\r\n    const fieldStateContainer = useContainer(FieldStateContainer)\r\n\r\n    const [formValues, setFormValues] = useState(initialState)\r\n\r\n    const setValue = (path: string, value: any) => {\r\n        const nextFormValues = produce(formValues, draftFormValues => {\r\n            set(draftFormValues, path, value)\r\n        })\r\n        setFormValues(nextFormValues)\r\n        fieldStateContainer.valueChanged(path)\r\n    }\r\n\r\n    function getValue(path: string): string {\r\n        return get(formValues, path)\r\n    }\r\n\r\n    const addToCollection = (path: string) => {\r\n        const nextFormValues = produce(formValues, draftFormValues => {\r\n            const oldCollection = get(draftFormValues, path, [])\r\n            const newCollection = [...oldCollection, {}]\r\n            set(draftFormValues, path, newCollection)\r\n        })\r\n        setFormValues(nextFormValues)\r\n    }\r\n    const deleteFromCollection = (path: string, index: number) => {\r\n        const nextFormValues = produce(formValues, draftFormValues => {\r\n            const oldCollection = get(draftFormValues, path)\r\n            const newCollection = [...oldCollection.slice(0, index), ...oldCollection.slice(index + 1)]\r\n            set(draftFormValues, path, newCollection)\r\n        })\r\n        setFormValues(nextFormValues)\r\n    }\r\n    const getCollectionSize = (path: string) => {\r\n        const collection = get(formValues, path)\r\n        return collection ? collection.length : 0\r\n    }\r\n    return {formValues, setValue, getValue, addToCollection, deleteFromCollection, getCollectionSize}\r\n}\r\n\r\nexport const ValuesContainer = createContainer(useValues)","import isAlpha from 'validator/lib/isAlpha'\r\nimport isAlphanumeric from 'validator/lib/isAlphanumeric'\r\nimport isCurrency from 'validator/lib/isCurrency'\r\nimport isEmail from 'validator/lib/isEmail'\r\nimport isNumeric from 'validator/lib/isNumeric'\r\n\r\ninterface ValidationRule {\r\n    validate: (value: string, args?: string[]) => boolean,\r\n    defaultMessage: string\r\n}\r\n\r\nexport const validationRuleMap: { [name: string]: ValidationRule } = {\r\n    email: {\r\n        validate: (value: string) => isEmail(value),\r\n        defaultMessage: 'Please enter a email address'\r\n    },\r\n    alpha: {\r\n        validate: (value: string) => isAlpha(value),\r\n        defaultMessage: 'Please enter only letters'\r\n    },\r\n    numeric: {\r\n        validate: (value: string) => isNumeric(value),\r\n        defaultMessage: 'Please enter only numbers'\r\n    },\r\n    alphanumeric: {\r\n        validate: (value: string) => isAlphanumeric(value),\r\n        defaultMessage: 'Please enter only letters and numbers'\r\n    },\r\n    currency: {\r\n        validate: (value: string) => isCurrency(value),\r\n        defaultMessage: 'Please enter a currency amount'\r\n    }\r\n}","import {createContainer} from 'unstated-next'\r\n\r\ntype showErrors = 'immediately' | 'afterFocus' | 'afterValueChanged' | 'afterBlur' | 'nextOrSummit'\r\n\r\nexport interface Config {\r\n    showErrors: showErrors\r\n    showErrorsDelay: number //milliseconds\r\n    disableNextWhenErrors: boolean\r\n}\r\n\r\nconst defaultConfig: Config = {\r\n    showErrors: 'immediately',\r\n    showErrorsDelay: 0,\r\n    disableNextWhenErrors: false\r\n}\r\n\r\nexport const useConfig = (userConfig = {}) => {\r\n    const config = Object.assign(defaultConfig, userConfig)\r\n    return {config}\r\n}\r\n\r\nexport const ConfigContainer = createContainer(useConfig)","import jexl from 'jexl'\r\nimport {createContainer, useContainer} from 'unstated-next'\r\nimport {FormElementDef} from '../FormDef'\r\nimport {ConfigContainer} from './ConfigContainer'\r\nimport {ValuesContainer} from './ValuesContainer'\r\n\r\njexl.addTransform('toUpperCase', (val) => val.toUpperCase())\r\njexl.addTransform('toLowerCase', (val) => val.toLowerCase())\r\n\r\njexl.addBinaryOp('_=', 20, (left, right) => left.toLowerCase() === right.toLowerCase()) //case-insensitive string equality\r\n\r\nfunction useExpression() {\r\n    const config = useContainer(ConfigContainer).config\r\n    const valuesContainer = useContainer(ValuesContainer)\r\n\r\n\r\n    const evaluate = <T>(path: string, fieldDef: FormElementDef<{}>, expression: string): T => {\r\n        console.log('expression:', expression)\r\n        const context = {\r\n\r\n            formValues: valuesContainer.formValues,\r\n            value: valuesContainer.getValue(path),\r\n            config,\r\n            fieldDef\r\n        }\r\n        console.log('expression:', expression, 'context:', context, 'outcome', jexl.evalSync(expression, context))\r\n        return jexl.evalSync(expression, context)\r\n    }\r\n\r\n    return {evaluate}\r\n}\r\n\r\nexport const ExpressionContainer = createContainer(useExpression)","import produce from 'immer'\r\nimport {useState} from 'react'\r\nimport {createContainer} from 'unstated-next'\r\n\r\ntype FormState = {\r\n    nextClicked?: number\r\n    submitClicked?: number\r\n    nextOrSubmitClicked?: number //Date.now() when field first got focused\r\n}\r\n\r\nexport function useFormState() {\r\n    const [formState, setFormState] = useState<FormState>({})\r\n\r\n    const nextClicked = () => {\r\n        const nextFormStates = produce(formState, draftFormState => {\r\n                if (!draftFormState.nextClicked) {\r\n                    draftFormState.nextClicked = Date.now()\r\n                }\r\n            }\r\n        )\r\n        setFormState(nextFormStates)\r\n    }\r\n\r\n    const clearNextClicked = () => {\r\n        const nextFormStates = produce(formState, draftFormState => {\r\n                draftFormState.nextClicked = undefined\r\n            }\r\n        )\r\n        setFormState(nextFormStates)\r\n\r\n    }\r\n\r\n    const submitClicked = () => {\r\n        const nextFormStates = produce(formState, draftFormState => {\r\n                if (!draftFormState.submitClicked) {\r\n                    draftFormState.submitClicked = Date.now()\r\n                }\r\n            }\r\n        )\r\n        setFormState(nextFormStates)\r\n    }\r\n\r\n    const nextOrSubmit = (): boolean => {\r\n        return !!formState.nextClicked || !!formState.submitClicked\r\n    }\r\n\r\n    return {formState, nextClicked, clearNextClicked, submitClicked, nextOrSubmit}\r\n}\r\n\r\nexport const FormStateContainer = createContainer(useFormState)","import {useEffect, useState} from 'react'\r\nimport {createContainer, useContainer} from 'unstated-next'\r\nimport {FormElementDef, isValidationRuleDef, ValidationConstraintDef} from '../FormDef'\r\nimport {isTypeACollection} from '../formElements/formElementTypes'\r\nimport {createFiledPath} from '../util'\r\nimport {validationRuleMap} from '../validation/ValidationRule'\r\nimport {ConfigContainer} from './ConfigContainer'\r\nimport {ExpressionContainer} from './ExpressionContainer'\r\nimport {FieldStateContainer} from './FieldStateContainer'\r\nimport {FormStateContainer} from './FormStateContainer'\r\nimport {ValuesContainer} from './ValuesContainer'\r\n\r\nfunction useValidation() {\r\n    const config = useContainer(ConfigContainer).config\r\n    const valuesContainer = useContainer(ValuesContainer)\r\n    const fieldStateContainer = useContainer(FieldStateContainer)\r\n    const formStateContainer = useContainer(FormStateContainer)\r\n    const expressionContainer = useContainer(ExpressionContainer)\r\n\r\n    const [nextTick, setNextTick] = useState<number>(0)\r\n    useEffect(() => {\r\n        if (nextTick > Date.now()) {\r\n            setTimeout(() => setNextTick(0), nextTick - Date.now())\r\n        }\r\n    }, [nextTick])\r\n\r\n    const validate = (path: string, fieldDef: FormElementDef<{}>): string | null => {\r\n        if (!fieldDef.validation) {\r\n            return null\r\n        }\r\n        const fieldValue = valuesContainer.getValue(path)\r\n        if (fieldDef.validation.required && (!fieldValue || fieldValue.length <= 0)) {\r\n            return 'This field is required'\r\n        }\r\n        console.log('fieldDef.validation', fieldDef.validation)\r\n        if (fieldDef.validation.constraints) {\r\n            return fieldDef.validation.constraints.reduce<string | null>((firstErrorMessage, constraint): string | null => {\r\n                if (firstErrorMessage) {\r\n                    return firstErrorMessage\r\n                }\r\n                return validateConstraint(constraint, path, fieldDef, fieldValue)\r\n            }, null)\r\n        }\r\n        return null\r\n    }\r\n\r\n    function validateConstraint(constraint: ValidationConstraintDef, path: string, fieldDef: FormElementDef<{}>, fieldValue: string) {\r\n        if (isValidationRuleDef(constraint)) {\r\n            const validationRule = validationRuleMap[constraint.name]\r\n            if (!validationRule.validate(fieldValue)) {\r\n                return constraint.message || validationRule.defaultMessage\r\n            }\r\n            return null\r\n        } else {\r\n            if (!expressionContainer.evaluate(path, fieldDef, constraint.expression)) {\r\n                return constraint.message\r\n            }\r\n            return null\r\n        }\r\n    }\r\n\r\n    const validateAndShouldShow = (path: string, fieldDef: FormElementDef<{}>): string | null => {\r\n        return shouldShowErrors(path, fieldDef) ? validate(path, fieldDef) : null\r\n    }\r\n\r\n    const shouldShowErrors = (path: string, fieldDef: FormElementDef<{}>): boolean => {\r\n        if (formStateContainer.nextOrSubmit() || config.showErrors === 'immediately') {\r\n            return true\r\n        }\r\n        const fieldState = fieldStateContainer.get(path)\r\n        if (config.showErrors === 'afterFocus' && fieldState.focus) {\r\n            return timeHasPassedAndShouldShowError(fieldState.focus)\r\n        }\r\n        if (config.showErrors === 'afterValueChanged' && fieldState.valueChanged) {\r\n            return timeHasPassedAndShouldShowError(fieldState.valueChanged)\r\n        }\r\n        if (config.showErrors === 'afterBlur' && fieldState.blur) {\r\n            return timeHasPassedAndShouldShowError(fieldState.valueChanged)\r\n        }\r\n        return false\r\n    }\r\n\r\n    const timeHasPassedAndShouldShowError = (time: number) => {\r\n        if (!config.showErrorsDelay || config.showErrorsDelay === 0) {\r\n            return true\r\n        } else if ((time + config.showErrorsDelay) < Date.now()) {\r\n            return true\r\n        } else {\r\n            setNextTick(time + config.showErrorsDelay)\r\n            return false\r\n        }\r\n    }\r\n\r\n    const validateRecursively = (path: string, fieldDef?: FormElementDef<{}>): boolean => {\r\n        if (!fieldDef) {\r\n            return false\r\n        }\r\n        if (validate(path, fieldDef)) {\r\n            return true\r\n        }\r\n        if (fieldDef.children) {\r\n            return fieldDef.children.some((childFieldDef) => {\r\n                const childPath = createFiledPath(path, childFieldDef.fieldId)\r\n                if (isTypeACollection(childFieldDef.type)) {\r\n                    const size = valuesContainer.getCollectionSize(childPath)\r\n                    for (let index = 0; index < size; index++) {\r\n                        if (validateRecursively(childPath + '[' + index + ']', childFieldDef)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                    return false\r\n                } else {\r\n                    return validateRecursively(childPath, childFieldDef)\r\n                }\r\n            })\r\n        }\r\n        return false\r\n    }\r\n\r\n    return {validate, shouldShowErrors, validateAndShouldShow, validateRecursively}\r\n}\r\n\r\nexport const ValidationContainer = createContainer(useValidation)","import {Config} from './state/ConfigContainer'\r\n\r\nexport default interface FormDef {\r\n    elements: FormElementDef<{}>[]\r\n    config?: Config\r\n}\r\n\r\nexport interface FormElementDef<Attributes> {\r\n    type: string,\r\n    attributes: Attributes,\r\n    fieldId?: string,\r\n    children?: Array<FormElementDef<any>>\r\n    validation?: {\r\n        required?: boolean\r\n        constraints?: ValidationConstraintDef[]\r\n    }\r\n}\r\n\r\nexport type ValidationConstraintDef = ValidationRuleDef | ValidationExpresionDef\r\n\r\nexport function isValidationRuleDef(constraint: ValidationConstraintDef): constraint is ValidationRuleDef {\r\n    return (constraint as ValidationRuleDef).name !== undefined\r\n}\r\n\r\nexport interface ValidationRuleDef {\r\n    name: string,\r\n    arguments?: string[],\r\n    message?: string\r\n}\r\n\r\nexport interface ValidationExpresionDef {\r\n    expression: string,\r\n    message: string\r\n}\r\n\r\n","import React from 'react'\r\nimport {List} from './collection/List'\r\nimport {ButtonGroup} from './input/ButtonGroup'\r\nimport {Dropdown} from './input/Dropdown'\r\nimport {TextInput} from './input/TextInput'\r\nimport {Heading} from './output/Heading'\r\nimport {Paragraph} from './output/Paragraph'\r\nimport {Accordion} from './pagination/Accordion'\r\n\r\ninterface FormElementTypesMap {\r\n    [type: string]: React.ReactNode\r\n}\r\n\r\nexport const formElementNonCollectionTypes: FormElementTypesMap = {\r\n    'accordion': Accordion,\r\n    'dropdown': Dropdown,\r\n    'textInput': TextInput,\r\n    'heading': Heading,\r\n    'paragraph': Paragraph,\r\n    'buttonGroup': ButtonGroup,\r\n}\r\n\r\nexport const formElementCollectionTypes: FormElementTypesMap = {\r\n    'list': List\r\n}\r\n\r\nexport const formElementTypes: FormElementTypesMap = Object.assign(formElementNonCollectionTypes, formElementCollectionTypes)\r\n\r\nexport function lookupElement(type: string): React.ReactNode {\r\n    const foundType = formElementTypes[type]\r\n    if (!foundType) {\r\n        console.warn('Could not find form element type:' + type)\r\n        return () => <div>Could not find form element type {type}.</div>\r\n    }\r\n    return foundType\r\n}\r\n\r\nexport function isTypeACollection(type: string): boolean {\r\n    return formElementCollectionTypes.hasOwnProperty(type)\r\n}","import React from 'react'\n\ninterface LabelProps {\n    text: string,\n    htmlFor: string,\n    error: boolean\n}\n\nexport const Label = (props: LabelProps) => <label htmlFor={props.htmlFor} className={'mr-2 h5 ' + (props.error ? 'text-danger' : '')}>{props.text}</label>","import React from 'react'\nimport {useContainer} from 'unstated-next'\nimport {FormElementDef} from '../FormDef'\nimport {ValidationContainer} from '../state/ValidationContainer'\nimport {Description} from './Description'\nimport {Label} from './Label'\n\n\ninterface FieldChromeProps {\n    path: string\n    def: FormElementDef<any>\n}\n\nexport const FieldChrome: React.FC<FieldChromeProps> = (props) => {\n    const validationContainer = useContainer(ValidationContainer)\n    const error = validationContainer.validateAndShouldShow(props.path, props.def)\n\n    return (<div className=\"form-group py-2\">\n        {props.def.attributes.label && <Label htmlFor={props.path} text={props.def.attributes.label} error={!!error}/>}\n        {props.children}\n        {error && <div className=\"error-message text-danger pt-2\">{error}</div>}\n        {props.def.attributes.description && <Description path={props.path} text={props.def.attributes.description}/>}\n    </div>)\n}","import classNames from 'classnames'\r\nimport React, {useRef, useState} from 'react'\r\nimport {useContainer} from 'unstated-next'\r\nimport {FormElementDef} from '../../FormDef'\r\nimport {ConfigContainer} from '../../state/ConfigContainer'\r\nimport {FormStateContainer} from '../../state/FormStateContainer'\r\nimport {ValidationContainer} from '../../state/ValidationContainer'\r\nimport {ChildFormElements} from '../ChildFormElements'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\nexport interface AccordionAttributes {\r\n}\r\n\r\nexport const Accordion = (props: FormElementProps<AccordionAttributes>) => {\r\n    const config = useContainer(ConfigContainer).config\r\n    const validationContainer = useContainer(ValidationContainer)\r\n    const formStateContainer = useContainer(FormStateContainer)\r\n\r\n    const currentPageRef = useRef<HTMLDivElement>(null)\r\n    const [currentPage, setCurrentPage] = useState<number>(0)\r\n\r\n    if (!props.definition.children) {\r\n        return null\r\n    }\r\n    const isFirst = currentPage === 0\r\n    const isLast = currentPage === (props.definition.children!.length - 1)\r\n    const currentPageHasErrors = validationContainer.validateRecursively(props.path, props.definition.children[currentPage])\r\n    const disableNext = config.disableNextWhenErrors && currentPageHasErrors\r\n\r\n    const goToPage = (newIndex: number) => {\r\n        setCurrentPage(newIndex)\r\n        if (currentPageRef && currentPageRef.current) {\r\n            window.scroll({top: currentPageRef.current.getBoundingClientRect().top - 100})\r\n        }\r\n    }\r\n\r\n    const previous = () => {\r\n        goToPage(currentPage - 1)\r\n        formStateContainer.clearNextClicked()\r\n\r\n    }\r\n\r\n    const next = () => {\r\n        if (currentPageHasErrors) {\r\n            formStateContainer.nextClicked()\r\n        } else {\r\n            formStateContainer.clearNextClicked()\r\n            goToPage(currentPage + 1)\r\n        }\r\n    }\r\n\r\n    const submit = () => {\r\n        if (currentPageHasErrors) {\r\n            formStateContainer.submitClicked()\r\n        } else {\r\n            console.log('Submit')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\r\n            {props.definition.children!.map((page, index) => (\r\n                <div className=\"card\" key={props.path + '_PAGE_' + index}>\r\n                    {currentPage === index && <div ref={currentPageRef}/>}\r\n                    <div className=\"card-header cursor-pointer\" onClick={() => goToPage(index)}>\r\n                        <h3 className=\"d-inline\">{page.attributes.label}</h3>{index < currentPage && <button className=\"link-button text-muted px-1\" onClick={() => goToPage(index)}><u>edit</u></button>}\r\n                    </div>\r\n                    {currentPage === index && <div className=\"card-body m-1\">\r\n                        {page.children && <ChildFormElements childFormElements={page.children as FormElementDef<any>[]} parentPath={props.parentPath}/>}\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <nav aria-label=\"Page navigation\">\r\n                                    <ul className=\"pagination mb-0\">\r\n                                        {!isFirst && <li className=\"page-item\">\r\n                                            <button className=\"page-link\" onClick={previous}>Previous</button>\r\n                                        </li>}\r\n                                        {!isLast && <li className={classNames('page-item', {disabled: disableNext})}>\r\n                                            <button className=\"page-link\" onClick={next} disabled={disableNext}>Next</button>\r\n                                        </li>}\r\n                                    </ul>\r\n                                </nav>\r\n                            </div>\r\n                            {isLast &&\r\n                            <div className=\"col\">\r\n                                <button className=\"btn btn-primary float-right\" onClick={submit}>Submit</button>\r\n                            </div>}\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}","import React from 'react'\nimport {useContainer} from 'unstated-next'\nimport {FieldChrome} from '../../display/FieldChrome'\nimport {FieldStateContainer} from '../../state/FieldStateContainer'\nimport {ValuesContainer} from '../../state/ValuesContainer'\nimport {FormElementProps} from '../FormElementProps'\n\nexport interface DropdownAttributes {\n    label: string\n    description: string\n    info?: string\n    options: string[]\n}\n\nexport const Dropdown = (props: FormElementProps<DropdownAttributes>) => {\n    const formValuesContainer = useContainer(ValuesContainer)\n    const fieldStateContainer = useContainer(FieldStateContainer)\n    return <FieldChrome path={props.path} def={props.definition}>\n        <select\n            className=\"form-control custom-select\"\n            id={props.definition.fieldId}\n            value={formValuesContainer.getValue(props.path) || ''}\n            onChange={event => formValuesContainer.setValue(props.path, event.currentTarget.value)}\n            aria-describedby={props.definition.fieldId + '_description'}\n            onFocus={() => fieldStateContainer.focus(props.path)}\n            onBlur={() => fieldStateContainer.blur(props.path)}\n        >\n            <option value=\"\" disabled={props.definition.validation && props.definition.validation.required}/>\n            {props.definition.attributes.options.map((option) => <option value={option} key={option}>{option}</option>)}\n        </select>\n    </FieldChrome>\n}","import React from 'react'\nimport {useContainer} from 'unstated-next'\nimport {FieldChrome} from '../../display/FieldChrome'\nimport {FieldStateContainer} from '../../state/FieldStateContainer'\nimport {ValuesContainer} from '../../state/ValuesContainer'\nimport {FormElementProps} from '../FormElementProps'\n\ninterface TextInputAttributes {\n    label: string\n    description: string\n    info?: string\n}\n\nexport const TextInput = (props: FormElementProps<TextInputAttributes>) => {\n    const formValuesContainer = useContainer(ValuesContainer)\n    const fieldStateContainer = useContainer(FieldStateContainer)\n\n    return (<FieldChrome path={props.path} def={props.definition}>\n        <input\n            type=\"text\"\n            className=\"form-control\"\n            id={props.definition.fieldId}\n            aria-describedby={props.path + '_description'}\n            value={formValuesContainer.getValue(props.path) || ''}\n            onChange={event => formValuesContainer.setValue(props.path, event.currentTarget.value)}\n            onFocus={() => fieldStateContainer.focus(props.path)}\n            onBlur={() => fieldStateContainer.blur(props.path)}\n        />\n    </FieldChrome>)\n}","import React from 'react'\nimport {FormElementProps} from '../FormElementProps'\n\ninterface HeadingAttributes {\n    level: number\n    text: string\n}\n\nexport const Heading = (props: FormElementProps<HeadingAttributes>) =>\n    React.createElement('h' + props.definition.attributes.level, null, props.definition.attributes.text)","import React from 'react'\nimport {FormElementProps} from '../FormElementProps'\n\n\ninterface ParagraphAttributes {\n    text: string\n}\n\nexport const Paragraph = (props: FormElementProps<ParagraphAttributes>) => <p>{props.definition.attributes.text}</p>","import React, {useState} from 'react'\nimport {useContainer} from 'unstated-next'\nimport {FieldChrome} from '../../display/FieldChrome'\nimport {FieldStateContainer} from '../../state/FieldStateContainer'\nimport {ValuesContainer} from '../../state/ValuesContainer'\nimport {FormElementProps} from '../FormElementProps'\n\ninterface ButtonGroupAttributes {\n    label: string\n    description?: string\n    info?: string\n    options: string[]\n}\n\nexport const ButtonGroup = (props: FormElementProps<ButtonGroupAttributes>) => {\n    const formValuesContainer = useContainer(ValuesContainer)\n    const fieldStateContainer = useContainer(FieldStateContainer)\n    const value = formValuesContainer.getValue(props.path)\n    const [focus, setFocus] = useState<number | null>(null)\n\n    return (\n        <FieldChrome path={props.path} def={props.definition}>\n            <div className=\"btn-group-wrapper\"\n                 onFocus={() => fieldStateContainer.focus(props.path)}\n                 onBlur={() => fieldStateContainer.blur(props.path)}\n            >\n                <div className=\"btn-group btn-group-toggle\">\n                    {props.definition.attributes.options.map((option, index) => (\n                        <label\n                            className={'btn btn-outline-secondary' + (value === option ? ' active' : '') + (focus === index ? ' focus' : '')}\n                            key={props.path + '_OPTION_' + option}\n                            onFocus={() => setFocus(index)}\n                            onBlur={() => setFocus(null)}\n                        >\n                            <input\n                                type=\"radio\"\n                                value={option}\n                                checked={option === value}\n                                onChange={event => formValuesContainer.setValue(props.path, event.currentTarget.value)}\n                            />{option}\n                        </label>))\n                    }\n                </div>\n            </div>\n        </FieldChrome>)\n}","import {times} from 'lodash-es'\nimport React from 'react'\nimport {useContainer} from 'unstated-next'\nimport {Description} from '../../display/Description'\nimport {ValuesContainer} from '../../state/ValuesContainer'\nimport {ordinal} from '../../util'\nimport {ChildFormElements} from '../ChildFormElements'\nimport {FormElementProps} from '../FormElementProps'\n\n\nexport interface IterationAttributes {\n    label: string\n    itemLabel: string\n    description: string\n}\n\nexport const List = (props: FormElementProps<IterationAttributes>) => {\n    const formValuesContainer = useContainer(ValuesContainer)\n    return (\n        <div className=\"form-group\">\n            <span className=\"h4 align-middle mr-2\">{props.definition.attributes.label}</span>\n            {props.definition.attributes.description && <Description path={props.path} text={props.definition.attributes.description}/>}\n            {times(formValuesContainer.getCollectionSize(props.path), (index: number) =>\n                <div className={'card border-bottom mb-3' + (index === 0 ? ' mt-2' : '')} key={props.path + '_COLLECTION_' + index}>\n                    <h5 className=\"card-header\">{ordinal(index + 1)} {props.definition.attributes.itemLabel}\n                        <button className=\"close text-dark\" onClick={() => formValuesContainer.deleteFromCollection(props.path, index)}>\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </h5>\n                    <div className=\"card-body pb-0\">\n                        {props.definition.children && <ChildFormElements childFormElements={props.definition.children} parentPath={props.path + '[' + index + ']'}/>}\n                    </div>\n                </div>\n            )}\n            <button className=\"btn btn-secondary d-inline\" onClick={() => formValuesContainer.addToCollection(props.path)}>Add</button>\n        </div>)\n}\n","import React from 'react'\r\nimport {FormElementDef} from '../FormDef'\r\nimport {createFiledPath} from '../util'\r\nimport {lookupElement} from './formElementTypes'\r\n\r\ninterface ChildFormElementsProps {\r\n    childFormElements: FormElementDef<any>[]\r\n    parentPath: string\r\n}\r\n\r\nexport const ChildFormElements = (props: ChildFormElementsProps) => {\r\n    return (\r\n        <div>\r\n            {props.childFormElements.map((elementDef, index) => {\r\n                const Child: any = lookupElement(elementDef.type)\r\n                return React.createElement(Child, {\r\n                    definition: elementDef,\r\n                    parentPath: props.parentPath,\r\n                    path: createFiledPath(props.parentPath, elementDef.fieldId),\r\n                    key: props.parentPath + '_' + index\r\n                })\r\n            })}\r\n        </div>)\r\n}","import React from 'react'\nimport FormDef from './FormDef'\nimport {ChildFormElements} from './formElements/ChildFormElements'\nimport {ConfigContainer} from './state/ConfigContainer'\nimport {ExpressionContainer} from './state/ExpressionContainer'\nimport {FieldStateContainer} from './state/FieldStateContainer'\nimport {FormStateContainer} from './state/FormStateContainer'\nimport {ValidationContainer} from './state/ValidationContainer'\nimport {ValuesContainer} from './state/ValuesContainer'\n\nexport interface FormProps {\n    formDef: FormDef\n}\n\nexport const Form = (props: FormProps) =>\n    (<div className=\"p-2 container\">\n        <ConfigContainer.Provider initialState={props.formDef.config}>\n            <FormStateContainer.Provider>\n                <FieldStateContainer.Provider>\n                    <ValuesContainer.Provider>\n                        <ExpressionContainer.Provider>\n                            <ValidationContainer.Provider>\n                                <ChildFormElements childFormElements={props.formDef.elements} parentPath=\"\"/>\n                            </ValidationContainer.Provider>\n                        </ExpressionContainer.Provider>\n                    </ValuesContainer.Provider>\n                </FieldStateContainer.Provider>\n            </FormStateContainer.Provider>\n        </ConfigContainer.Provider>\n    </div>)","import axios from 'axios'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Form} from './Form'\nimport FormDef from './FormDef'\nimport './index.css'\n\naxios.get<FormDef>('exampleFormDefinition.json')\n    .then(function (response) {\n        ReactDOM.render(\n            <Form formDef={response.data}/>,\n            document.getElementById('form')\n        )\n    })\n    .catch(function (error) {\n        console.error(error)\n        throw new Error(error)\n    })"],"sourceRoot":""}