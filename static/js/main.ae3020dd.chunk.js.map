{"version":3,"sources":["validation/ValidationRule.ts","state/useContainer.tsx","state/ConfigContainer.ts","state/FieldStateContainer.ts","state/ValuesContainer.ts","state/ExpressionContainer.ts","state/ShowIfContainer.ts","util.ts","display/Description.tsx","state/FormStateContainer.ts","state/ValidationContainer.ts","FormDef.ts","formElements/formElementTypes.tsx","display/Label.tsx","display/FieldChrome.tsx","state/ReferenceDataContainer.ts","state/PaginationContainer.ts","formElements/pagination/Accordion.tsx","formElements/input/Dropdown.tsx","formElements/input/TextInput.tsx","formElements/output/Heading.tsx","formElements/output/Paragraph.tsx","formElements/input/ButtonGroup.tsx","formElements/pagination/Tabs.tsx","formElements/collection/List.tsx","formElements/ChildFormElements.tsx","Form.tsx","index.tsx"],"names":["validationRuleMap","required","validate","value","length","defaultMessage","email","isEmail","alpha","isAlpha","numeric","isNumeric","alphanumeric","isAlphanumeric","currency","isCurrency","createContainer","useHook","Context","React","createContext","Provider","props","initialState","react_default","a","createElement","children","useContainer","useContext","Error","container","defaultConfig","showErrors","showErrorsDelay","disableNextWhenErrors","ConfigContainer","userConfig","arguments","undefined","config","Object","assign","FieldStateContainer","_useState","useState","_useState2","slicedToArray","fieldStates","setFieldStates","setEventNow","path","event","nextFieldStates","produce","draftFieldStates","fieldState","Date","now","get","focus","valueChanged","blur","ValuesContainer","fieldStateContainer","formValues","setFormValues","setValue","nextFormValues","draftFormValues","set","getValue","addToCollection","oldCollection","newCollection","concat","toConsumableArray","deleteFromCollection","index","slice","getCollectionSize","collection","jexl","addTransform","val","toUpperCase","toLowerCase","addBinaryOp","left","right","ExpressionContainer","configContainer","valuesContainer","evaluate","fieldDef","expression","fieldValue","context","evalSync","expressionValidations","validIf","invalidIf","requiredIf","ShowIfContainer","expressionContainer","shouldShow","showIf","some","createPath","parentPath","fieldId","Description","id","className","text","FormStateContainer","formState","setFormState","nextClicked","nextFormStates","draftFormState","clearNextClicked","submitClicked","nextOrSubmit","ValidationContainer","formStateContainer","showIfContainer","nextTick","setNextTick","useEffect","setTimeout","validation","reduce","message","constraint","validationRule","isValidationExpresionDef","expressionValidation","name","validateConstraint","shouldShowErrors","timeHasPassedAndShouldShowError","time","validateAndShouldShow","hasErrorsRecursively","childFieldDef","type","childPath","formElementCollectionTypes","hasOwnProperty","size","Label","htmlFor","error","FieldChrome","def","attributes","label","Label_Label","description","Description_Description","ReferenceDataContainer","referenceData","inline","PaginationContainer","validationContainer","setPath","_useState3","_useState4","pages","setPages","_useState5","_useState6","currentPageIndex","setCurrentPageIndex","firstShownPage","findIndex","page","lastShownPage","findLastIndex","currentIsFirst","currentIsLast","currentPageHasErrors","disableNext","setUp","setupPages","previousClicked","i","pageDef","console","log","formElementNonCollectionTypes","accordion","paginationContainer","currentPageRef","useRef","definition","scrollCurrentPageIntoView","current","window","scroll","top","getBoundingClientRect","goToPage","previous","next","role","aria-multiselectable","map","key","ref","onClick","ChildFormElements_ChildFormElements","childFormElements","aria-label","classNames","disabled","dropdown","referenceDataContainer","formValuesContainer","options","referenceDataOptions","FieldChrome_FieldChrome","onChange","currentTarget","aria-describedby","onFocus","onBlur","option","textInput","heading","level","paragraph","buttonGroup","setFocus","checked","tabs","pill","href","tabIndex","aria-disabled","list","times","n","s","v","ordinal","itemLabel","aria-hidden","formElementTypes","ChildFormElements","elementDef","Child","foundType","warn","lookupElement","Form","formDef","elements","axios","then","response","ReactDOM","render","Form_Form","data","document","getElementById","catch"],"mappings":"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","file":"static/js/main.ae3020dd.chunk.js","sourcesContent":["import isAlpha from 'validator/lib/isAlpha'\r\nimport isAlphanumeric from 'validator/lib/isAlphanumeric'\r\nimport isCurrency from 'validator/lib/isCurrency'\r\nimport isEmail from 'validator/lib/isEmail'\r\nimport isNumeric from 'validator/lib/isNumeric'\r\n\r\ninterface ValidationRule {\r\n    validate: (value: string, args?: string | string[]) => boolean,\r\n    defaultMessage: string\r\n}\r\n\r\nexport const validationRuleMap: { [name: string]: ValidationRule } = {\r\n    required: {\r\n        validate: (value: string) => !(value == null || value.length <= 0 || value === ''),\r\n        defaultMessage: 'This field is required'\r\n    },\r\n    email: {\r\n        validate: (value: string) => isEmail(value),\r\n        defaultMessage: 'This field must be an email address'\r\n    },\r\n    alpha: {\r\n        validate: (value: string) => isAlpha(value),\r\n        defaultMessage: 'This field must be only letters'\r\n    },\r\n    numeric: {\r\n        validate: (value: string) => isNumeric(value),\r\n        defaultMessage: 'This field must be only numbers'\r\n    },\r\n    alphanumeric: {\r\n        validate: (value: string) => isAlphanumeric(value),\r\n        defaultMessage: 'This field must be only letters and numbers'\r\n    },\r\n    currency: {\r\n        validate: (value: string) => isCurrency(value),\r\n        defaultMessage: 'This field must be a currency amount'\r\n    }\r\n}","import React from 'react'\r\n\r\nexport interface ContainerProviderProps<State = any> {\r\n    initialState?: State\r\n    children: React.ReactNode\r\n}\r\n\r\nexport interface Container<Value, State = any> {\r\n    Provider: React.ComponentType<ContainerProviderProps<State>>\r\n    useContainer: () => Value\r\n}\r\n\r\nexport function createContainer<Value, State = any>(useHook: (initialState?: State) => Value): Container<Value, State> {\r\n    let Context = React.createContext<Value | null>(null)\r\n\r\n    function Provider(props: ContainerProviderProps<State>) {\r\n        let value = useHook(props.initialState)\r\n        return <Context.Provider value={value}>{props.children}</Context.Provider>\r\n    }\r\n\r\n    function useContainer(): Value {\r\n        let value = React.useContext(Context)\r\n        if (value === null) {\r\n            throw new Error('Component must be wrapped with <Container.Provider>')\r\n        }\r\n        return value\r\n    }\r\n\r\n    return {Provider, useContainer}\r\n}\r\n\r\nexport function useContainer<Value, State = any>(container: Container<Value, State>): Value {\r\n    return container.useContainer()\r\n}","import {createContainer} from './useContainer'\r\n\r\n\r\ntype showErrors = 'immediately' | 'onFocus' | 'onValueChanged' | 'onBlur' | 'nextOrSummit'\r\n\r\nexport interface Config {\r\n    showErrors: showErrors\r\n    showErrorsDelay: number //milliseconds\r\n    disableNextWhenErrors: boolean\r\n}\r\n\r\nconst defaultConfig: Config = {\r\n    showErrors: 'onFocus',\r\n    showErrorsDelay: 500,\r\n    disableNextWhenErrors: false\r\n}\r\n\r\nexport const ConfigContainer = createContainer((userConfig = {}) => {\r\n    const config = Object.assign(defaultConfig, userConfig)\r\n    return {config}\r\n})","import produce from 'immer'\r\nimport {useState} from 'react'\r\nimport {createContainer} from './useContainer'\r\n\r\ntype Events = 'focus' | 'valueChanged' | 'blur'\r\n\r\ntype FieldState = {\r\n    [Event in Events]: number //Date.now() when field first got focused\r\n}\r\n\r\nexport const FieldStateContainer = createContainer(() => {\r\n    const [fieldStates, setFieldStates] = useState<{ [path: string]: FieldState }>({})\r\n    const get = (path: string) => fieldStates[path] || {}\r\n    const setEventNow = (path: string, event: Events) => {\r\n        const nextFieldStates = produce(fieldStates, draftFieldStates => {\r\n                const fieldState = draftFieldStates[path] || {}\r\n                if (!fieldState[event]) {\r\n                    fieldState[event] = Date.now()\r\n                }\r\n                draftFieldStates[path] = fieldState\r\n            }\r\n        )\r\n        setFieldStates(nextFieldStates)\r\n    }\r\n    const focus = (path: string) => setEventNow(path, 'focus')\r\n    const valueChanged = (path: string) => setEventNow(path, 'valueChanged')\r\n    const blur = (path: string) => setEventNow(path, 'blur')\r\n\r\n    return {fieldStates, get, focus, valueChanged, blur}\r\n})","import produce from 'immer'\r\nimport get from 'lodash-es/get'\r\nimport set from 'lodash-es/set'\r\nimport {useState} from 'react'\r\nimport {FieldStateContainer} from './FieldStateContainer'\r\nimport {createContainer, useContainer} from './useContainer'\r\n\r\nexport const ValuesContainer = createContainer((initialState = {}) => {\r\n    const fieldStateContainer = useContainer(FieldStateContainer)\r\n    const [formValues, setFormValues] = useState<{}>(initialState)\r\n\r\n    const setValue = (path: string, value: any) => {\r\n        const nextFormValues = produce(formValues, draftFormValues => {\r\n            set(draftFormValues, path, value)\r\n        })\r\n        setFormValues(nextFormValues)\r\n        fieldStateContainer.valueChanged(path)\r\n        //console.log('formValues:', JSON.stringify(nextFormValues, null, 2))\r\n    }\r\n\r\n    function getValue(path: string): string {\r\n        return get(formValues, path)\r\n    }\r\n\r\n    const addToCollection = (path: string) => {\r\n        const nextFormValues = produce(formValues, draftFormValues => {\r\n            const oldCollection = get(draftFormValues, path, [])\r\n            const newCollection = [...oldCollection, {}]\r\n            set(draftFormValues, path, newCollection)\r\n        })\r\n        setFormValues(nextFormValues)\r\n    }\r\n    const deleteFromCollection = (path: string, index: number) => {\r\n        const nextFormValues = produce(formValues, draftFormValues => {\r\n            const oldCollection = get(draftFormValues, path)\r\n            const newCollection = [...oldCollection.slice(0, index), ...oldCollection.slice(index + 1)]\r\n            set(draftFormValues, path, newCollection)\r\n        })\r\n        setFormValues(nextFormValues)\r\n    }\r\n    const getCollectionSize = (path: string) => {\r\n        const collection = get(formValues, path)\r\n        return collection ? collection.length : 0\r\n    }\r\n    return {formValues, setValue, getValue, addToCollection, deleteFromCollection, getCollectionSize}\r\n})","import jexl from 'jexl'\r\nimport isAlpha from 'validator/lib/isAlpha'\r\nimport isAlphanumeric from 'validator/lib/isAlphanumeric'\r\nimport isCurrency from 'validator/lib/isCurrency'\r\nimport isEmail from 'validator/lib/isEmail'\r\nimport isNumeric from 'validator/lib/isNumeric'\r\nimport {FormElementDef} from '../FormDef'\r\nimport {validationRuleMap} from '../validation/ValidationRule'\r\nimport {ConfigContainer} from './ConfigContainer'\r\nimport {createContainer, useContainer} from './useContainer'\r\nimport {ValuesContainer} from './ValuesContainer'\r\n\r\n//Basic transforms\r\njexl.addTransform('toUpperCase', (val) => val.toUpperCase())\r\njexl.addTransform('toLowerCase', (val) => val.toLowerCase())\r\n\r\n//Transform as a boolean validation\r\njexl.addTransform('isAlpha', (val) => val && isAlpha(val))\r\njexl.addTransform('isAlphanumeric', (val) => val && isAlphanumeric(val))\r\njexl.addTransform('isCurrency', (val) => val && isCurrency(val))\r\njexl.addTransform('isEmail', (val) => val && isEmail(val))\r\njexl.addTransform('isNumeric', (val) => val && isNumeric(val))\r\n\r\n//case-insensitive string equality\r\njexl.addBinaryOp('_=', 20, (left, right) => left.toLowerCase() === right.toLowerCase())\r\n\r\ninterface ValidationExpression {\r\n    validate: (path: string, fieldDef: FormElementDef<{}>, expression: string) => boolean,\r\n    defaultMessage: string\r\n}\r\n\r\nfunction useExpression() {\r\n    const configContainer = useContainer(ConfigContainer)\r\n    const valuesContainer = useContainer(ValuesContainer)\r\n\r\n\r\n    const evaluate = <T>(path: string, fieldDef: FormElementDef<{}>, expression: string): T => {\r\n        const fieldValue = valuesContainer.getValue(path)\r\n        const context = {\r\n            formValues: valuesContainer.formValues,\r\n            fieldValue,\r\n            value: fieldValue,\r\n            config: configContainer.config,\r\n            fieldDef\r\n        }\r\n        return jexl.evalSync(expression, context)\r\n    }\r\n\r\n    const expressionValidations: { [name: string]: ValidationExpression } = {\r\n        validIf: {\r\n            validate: (path: string, fieldDef: FormElementDef<{}>, expression: string) => evaluate(path, fieldDef, expression),\r\n            defaultMessage: 'This field is invalid' // The form editor should make the user enter message as this does not give the user any information about why the field is invalid\r\n        },\r\n        invalidIf: {\r\n            validate: (path: string, fieldDef: FormElementDef<{}>, expression: string) => !evaluate(path, fieldDef, expression),\r\n            defaultMessage: 'This field is invalid' // As with validIf form editor should make the user enter message as this does not give the user any information about why the field is invalid\r\n        },\r\n        requiredIf: {\r\n            validate: (path: string, fieldDef: FormElementDef<{}>, expression: string) => {\r\n                if (evaluate(path, fieldDef, expression)) {\r\n                    return validationRuleMap.required.validate(valuesContainer.getValue(path))\r\n                }\r\n                return true\r\n            },\r\n            defaultMessage: validationRuleMap.required.defaultMessage\r\n        }\r\n    }\r\n\r\n    return {evaluate, expressionValidations}\r\n}\r\n\r\nexport const ExpressionContainer = createContainer(useExpression)","import {FormElementDef} from '../FormDef'\nimport {ExpressionContainer} from './ExpressionContainer'\nimport {createContainer, useContainer} from './useContainer'\n\nexport const ShowIfContainer = createContainer(() => {\n    const expressionContainer = useContainer(ExpressionContainer)\n\n    function shouldShow(path: string, fieldDef: FormElementDef<{}>): boolean {\n        if (!fieldDef.showIf) {\n            return true\n        }\n        return fieldDef.showIf.some(expression => expressionContainer.evaluate(path, fieldDef, expression))\n    }\n\n    return {shouldShow}\n})","export const createKey = () => (Math.random() + 1).toString(36).substring(2)\r\n\r\nexport const ordinal = (n: number): string => {\r\n    const s = ['th', 'st', 'nd', 'rd'],\r\n        v = n % 100\r\n    return n + (s[(v - 20) % 10] || s[v] || s[0])\r\n}\r\n\r\nexport const createPath = (parentPath: string, fieldId?: string): string => {\r\n    if (!fieldId) {\r\n        return parentPath\r\n    }\r\n    if (parentPath !== '') {\r\n        return parentPath + '.' + fieldId\r\n    }\r\n    return fieldId\r\n\r\n}","import React from 'react'\n\ninterface DescriptionProps {\n    path: string,\n    text: string\n}\n\nexport const Description = (props: DescriptionProps) => (\n    <div id={props.path + '_description'} className=\"pt-2 text-muted description\">{props.text}</div>\n)","import produce from 'immer'\r\nimport {useState} from 'react'\r\nimport {createContainer} from './useContainer'\r\n\r\ntype FormState = {\r\n    nextClicked?: number\r\n    submitClicked?: number\r\n    nextOrSubmitClicked?: number //Date.now() when field first got focused\r\n}\r\n\r\nexport const FormStateContainer = createContainer(() => {\r\n    const [formState, setFormState] = useState<FormState>({})\r\n\r\n    const nextClicked = () => {\r\n        const nextFormStates = produce(formState, draftFormState => {\r\n                if (!draftFormState.nextClicked) {\r\n                    draftFormState.nextClicked = Date.now()\r\n                }\r\n            }\r\n        )\r\n        setFormState(nextFormStates)\r\n    }\r\n\r\n    const clearNextClicked = () => {\r\n        const nextFormStates = produce(formState, draftFormState => {\r\n                draftFormState.nextClicked = undefined\r\n            }\r\n        )\r\n        setFormState(nextFormStates)\r\n\r\n    }\r\n\r\n    const submitClicked = () => {\r\n        const nextFormStates = produce(formState, draftFormState => {\r\n                if (!draftFormState.submitClicked) {\r\n                    draftFormState.submitClicked = Date.now()\r\n                }\r\n            }\r\n        )\r\n        setFormState(nextFormStates)\r\n    }\r\n\r\n    const nextOrSubmit = (): boolean => {\r\n        return !!formState.nextClicked || !!formState.submitClicked\r\n    }\r\n\r\n    return {formState, nextClicked, clearNextClicked, submitClicked, nextOrSubmit}\r\n})","import {useEffect, useState} from 'react'\r\nimport {FormElementDef, isValidationExpresionDef, ValidationConstraintDef} from '../FormDef'\r\nimport {isTypeACollection} from '../formElements/formElementTypes'\r\nimport {createPath} from '../util'\r\nimport {validationRuleMap} from '../validation/ValidationRule'\r\nimport {ConfigContainer} from './ConfigContainer'\r\nimport {ExpressionContainer} from './ExpressionContainer'\r\nimport {FieldStateContainer} from './FieldStateContainer'\r\nimport {FormStateContainer} from './FormStateContainer'\r\nimport {ShowIfContainer} from './ShowIfContainer'\r\nimport {createContainer, useContainer} from './useContainer'\r\nimport {ValuesContainer} from './ValuesContainer'\r\n\r\nexport const ValidationContainer = createContainer(() => {\r\n    const configContainer = useContainer(ConfigContainer)\r\n    const valuesContainer = useContainer(ValuesContainer)\r\n    const fieldStateContainer = useContainer(FieldStateContainer)\r\n    const formStateContainer = useContainer(FormStateContainer)\r\n    const expressionContainer = useContainer(ExpressionContainer)\r\n    const showIfContainer = useContainer(ShowIfContainer)\r\n\r\n    const [nextTick, setNextTick] = useState<number>(0)\r\n    useEffect(() => {\r\n        if (nextTick > Date.now()) {\r\n            setTimeout(() => setNextTick(0), nextTick - Date.now())\r\n        }\r\n    }, [nextTick])\r\n\r\n    const config = configContainer.config\r\n\r\n    const validate = (path: string, fieldDef: FormElementDef<{}>): string | null => {\r\n        if (!fieldDef.validation || fieldDef.validation.length <= 0) {\r\n            return null\r\n        }\r\n        return fieldDef.validation.reduce<string | null>((message, constraint): string | null => {\r\n            if (message != null) {\r\n                return message\r\n            }\r\n            return validateConstraint(constraint, path, fieldDef)\r\n        }, null)\r\n    }\r\n\r\n    function validateConstraint(constraint: ValidationConstraintDef | string, path: string, fieldDef: FormElementDef<{}>): string | null {\r\n        if (typeof constraint === 'string') {\r\n            const fieldValue = valuesContainer.getValue(path) || ''\r\n            const validationRule = validationRuleMap[constraint]\r\n            if (!validationRule.validate(fieldValue)) {\r\n                return validationRule.defaultMessage\r\n            }\r\n            return null\r\n        } else if (!isValidationExpresionDef(constraint)) {\r\n            const fieldValue = valuesContainer.getValue(path) || ''\r\n            const validationRule = validationRuleMap[constraint.name]\r\n            if (!validationRule.validate(fieldValue)) {\r\n                return constraint.message || validationRule.defaultMessage\r\n            }\r\n            return null\r\n        } else {\r\n            const expressionValidation = expressionContainer.expressionValidations[constraint.name]\r\n            if (!expressionValidation.validate(path, fieldDef, constraint.expression)) {\r\n                return constraint.message || expressionValidation.defaultMessage\r\n            }\r\n            return null\r\n        }\r\n    }\r\n\r\n    const validateAndShouldShow = (path: string, fieldDef: FormElementDef<{}>): string | null => {\r\n        return shouldShowErrors(path, fieldDef) ? validate(path, fieldDef) : null\r\n    }\r\n\r\n    const shouldShowErrors = (path: string, fieldDef: FormElementDef<{}>): boolean => {\r\n        if (formStateContainer.nextOrSubmit() || config.showErrors === 'immediately') {\r\n            return true\r\n        }\r\n        const fieldState = fieldStateContainer.get(path)\r\n        if (config.showErrors === 'onFocus' && fieldState.focus) {\r\n            return timeHasPassedAndShouldShowError(fieldState.focus)\r\n        }\r\n        if (config.showErrors === 'onValueChanged' && fieldState.valueChanged) {\r\n            return timeHasPassedAndShouldShowError(fieldState.valueChanged)\r\n        }\r\n        if (config.showErrors === 'onBlur' && fieldState.blur) {\r\n            return timeHasPassedAndShouldShowError(fieldState.blur)\r\n        }\r\n        return false\r\n    }\r\n\r\n    const timeHasPassedAndShouldShowError = (time: number) => {\r\n        if (!config.showErrorsDelay || config.showErrorsDelay === 0) {\r\n            return true\r\n        } else if ((time + config.showErrorsDelay) < Date.now()) {\r\n            return true\r\n        } else {\r\n            setNextTick(time + config.showErrorsDelay)\r\n            return false\r\n        }\r\n    }\r\n\r\n    const hasErrorsRecursively = (path: string, fieldDef?: FormElementDef<{}>): boolean => {\r\n        if (!fieldDef || !showIfContainer.shouldShow(path, fieldDef)) {\r\n            return false\r\n        }\r\n        if (validate(path, fieldDef) != null) {\r\n            return true\r\n        }\r\n        if (fieldDef.children) {\r\n            return fieldDef.children.some((childFieldDef) => {\r\n                const childPath = createPath(path, childFieldDef.fieldId)\r\n                if (!showIfContainer.shouldShow(childPath, childFieldDef)) {\r\n                    return false\r\n                }\r\n                if (isTypeACollection(childFieldDef.type)) {\r\n                    const size = valuesContainer.getCollectionSize(childPath)\r\n                    for (let index = 0; index < size; index++) {\r\n                        if (hasErrorsRecursively(childPath + '[' + index + ']', childFieldDef)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                    return false\r\n                } else {\r\n                    return hasErrorsRecursively(childPath, childFieldDef)\r\n                }\r\n            })\r\n        }\r\n        return false\r\n    }\r\n\r\n    return {validate, shouldShowErrors, validateAndShouldShow, hasErrorsRecursively}\r\n})","import {Config} from './state/ConfigContainer'\r\n\r\nexport default interface FormDef {\r\n    elements: FormElementDef<{}>[]\r\n    config?: Config\r\n    referenceData?: ReferenceDataDef\r\n}\r\n\r\nexport interface FormElementDef<Attributes> {\r\n    type: string,\r\n    attributes: Attributes,\r\n    fieldId?: string,\r\n    children?: Array<FormElementDef<any>>\r\n    validation?: Array<string | ValidationConstraintDef>\r\n    showIf?: string[]\r\n}\r\n\r\nexport type ValidationConstraintDef = ValidationRuleDef | ValidationExpresionDef\r\n\r\nexport function isValidationExpresionDef(constraint: ValidationConstraintDef): constraint is ValidationExpresionDef {\r\n    return (constraint as ValidationExpresionDef).expression !== undefined\r\n}\r\n\r\nexport interface ValidationRuleDef {\r\n    name: string,\r\n    arguments?: string[],\r\n    message?: string\r\n}\r\n\r\nexport interface ValidationExpresionDef {\r\n    name: string,\r\n    expression: string,\r\n    message?: string\r\n}\r\n\r\nexport interface ReferenceDataDef {\r\n    inline?: {\r\n        [name: string]: any\r\n    }\r\n    http?: {\r\n        name: string,\r\n        url: string,\r\n        method?: 'get' | 'GET' | 'post' | 'POST',\r\n        baseURL?: string\r\n    }[]\r\n}\r\n\r\n","import React from 'react'\r\nimport {List} from './collection/List'\r\nimport {ButtonGroup} from './input/ButtonGroup'\r\nimport {Dropdown} from './input/Dropdown'\r\nimport {TextInput} from './input/TextInput'\r\nimport {Heading} from './output/Heading'\r\nimport {Paragraph} from './output/Paragraph'\r\nimport {Accordion} from './pagination/Accordion'\r\nimport {Tabs} from './pagination/Tabs'\r\n\r\ninterface FormElementTypesMap {\r\n    [type: string]: React.ReactNode\r\n}\r\n\r\nexport const formElementNonCollectionTypes: FormElementTypesMap = {\r\n    'accordion': Accordion,\r\n    'dropdown': Dropdown,\r\n    'textInput': TextInput,\r\n    'heading': Heading,\r\n    'paragraph': Paragraph,\r\n    'buttonGroup': ButtonGroup,\r\n    'tabs': Tabs\r\n}\r\n\r\nexport const formElementCollectionTypes: FormElementTypesMap = {\r\n    'list': List\r\n}\r\n\r\nexport const formElementTypes: FormElementTypesMap = Object.assign(formElementNonCollectionTypes, formElementCollectionTypes)\r\n\r\nexport function lookupElement(type: string): React.ReactNode {\r\n    const foundType = formElementTypes[type]\r\n    if (!foundType) {\r\n        console.warn('Could not find form element type:' + type)\r\n        return () => <div>Could not find form element type {type}.</div>\r\n    }\r\n    return foundType\r\n}\r\n\r\nexport function isTypeACollection(type: string): boolean {\r\n    return formElementCollectionTypes.hasOwnProperty(type)\r\n}","import React from 'react'\n\ninterface LabelProps {\n    text: string,\n    htmlFor: string,\n    error: boolean\n}\n\nexport const Label = (props: LabelProps) => <label htmlFor={props.htmlFor} className={'mr-2 h5 ' + (props.error ? 'text-danger' : '')}>{props.text}</label>","import React from 'react'\nimport {FormElementDef} from '../FormDef'\nimport {useContainer} from '../state/useContainer'\nimport {ValidationContainer} from '../state/ValidationContainer'\nimport {Description} from './Description'\nimport {Label} from './Label'\n\n\ninterface FieldChromeProps {\n    path: string\n    def: FormElementDef<any>\n}\n\nexport const FieldChrome: React.FC<FieldChromeProps> = (props) => {\n    const validationContainer = useContainer(ValidationContainer)\n    const error = validationContainer.validateAndShouldShow(props.path, props.def)\n\n    return (<div className=\"form-group pt-2\">\n        {props.def.attributes.label && <Label htmlFor={props.path} text={props.def.attributes.label} error={!!error}/>}\n        {props.children}\n        {error && <div className=\"error-message text-danger pt-2\">{error}</div>}\n        {props.def.attributes.description && <Description path={props.path} text={props.def.attributes.description}/>}\n    </div>)\n}","import {ReferenceDataDef} from '../FormDef'\r\nimport {createContainer} from './useContainer'\r\n\r\nexport const ReferenceDataContainer = createContainer((initialReferenceData: ReferenceDataDef = {}) => {\r\n    const referenceData = initialReferenceData.inline || {}\r\n    return {referenceData}\r\n})","import {findLastIndex} from 'lodash-es'\r\nimport {useState} from 'react'\r\nimport {FormElementDef} from '../FormDef'\r\nimport {ConfigContainer} from './ConfigContainer'\r\nimport {FormStateContainer} from './FormStateContainer'\r\nimport {ShowIfContainer} from './ShowIfContainer'\r\nimport {createContainer, useContainer} from './useContainer'\r\nimport {ValidationContainer} from './ValidationContainer'\r\n\r\nexport const PaginationContainer = createContainer((initialState = {}) => {\r\n    const configContainer = useContainer(ConfigContainer)\r\n    const validationContainer = useContainer(ValidationContainer)\r\n    const formStateContainer = useContainer(FormStateContainer)\r\n    const showIfContainer = useContainer(ShowIfContainer)\r\n    const [path, setPath] = useState<string>('')\r\n    const [pages, setPages] = useState<FormElementDef<any>[]>([])\r\n    const [currentPageIndex, setCurrentPageIndex] = useState<number>(-1)\r\n\r\n    const setUp = (path: string, setupPages: FormElementDef<any>[]) => {\r\n        setPath(path)\r\n        setPages(setupPages)\r\n        if (currentPageIndex < 0) {\r\n            setCurrentPageIndex(setupPages.findIndex(page => showIfContainer.shouldShow(path, page)))\r\n        }\r\n    }\r\n\r\n    const firstShownPage = pages.findIndex(page => showIfContainer.shouldShow(path, page))\r\n    const lastShownPage = findLastIndex(pages, page => showIfContainer.shouldShow(path, page))\r\n\r\n    const currentIsFirst = currentPageIndex === firstShownPage\r\n    const currentIsLast = currentPageIndex === lastShownPage\r\n\r\n    const currentPageHasErrors = () => validationContainer.hasErrorsRecursively(path, pages[currentPageIndex])\r\n    const disableNext = configContainer.config.disableNextWhenErrors && currentPageHasErrors()\r\n\r\n    const previousClicked = () => {\r\n        for (let i = currentPageIndex - 1; i >= 0; i--) {\r\n            const pageDef = pages[i]\r\n            if (pageDef && showIfContainer.shouldShow(path, pageDef)) {\r\n                formStateContainer.clearNextClicked()\r\n                setCurrentPageIndex(i)\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    const nextClicked = () => {\r\n        if (currentPageHasErrors()) {\r\n            formStateContainer.nextClicked()\r\n        } else {\r\n            for (let i = currentPageIndex + 1; i < pages.length; i++) {\r\n                const pageDef = pages[i]\r\n                if (pageDef && showIfContainer.shouldShow(path, pageDef)) {\r\n                    formStateContainer.clearNextClicked()\r\n                    setCurrentPageIndex(i)\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const submitClicked = () => {\r\n        if (currentPageHasErrors()) {\r\n            formStateContainer.submitClicked()\r\n        } else {\r\n            console.log('Submit')\r\n        }\r\n    }\r\n\r\n\r\n    return {setUp, currentPageIndex, setCurrentPageIndex, currentIsFirst, currentIsLast, currentPageHasErrors, disableNext, previousClicked, nextClicked, submitClicked}\r\n})","import classNames from 'classnames'\r\nimport React, {useEffect, useRef} from 'react'\r\nimport {FormElementDef} from '../../FormDef'\r\nimport {PaginationContainer} from '../../state/PaginationContainer'\r\nimport {ShowIfContainer} from '../../state/ShowIfContainer'\r\nimport {useContainer} from '../../state/useContainer'\r\nimport {ChildFormElements} from '../ChildFormElements'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\nexport const Accordion = (props: FormElementProps<void>) => {\r\n    const showIfContainer = useContainer(ShowIfContainer)\r\n    const paginationContainer = useContainer(PaginationContainer)\r\n\r\n    const currentPageRef = useRef<HTMLDivElement>(null)\r\n\r\n\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n    useEffect(() => {\r\n        props.definition.children && paginationContainer.setUp(props.path, props.definition.children)\r\n    }, [])\r\n    /* eslint-enable react-hooks/exhaustive-deps */\r\n\r\n    if (!props.definition.children) {\r\n        return null\r\n    }\r\n\r\n\r\n    const scrollCurrentPageIntoView = () => {\r\n        if (currentPageRef && currentPageRef.current) {\r\n            window.scroll({top: currentPageRef.current.getBoundingClientRect().top - 100})\r\n        }\r\n    }\r\n\r\n    const goToPage = (index: number) => {\r\n        paginationContainer.setCurrentPageIndex(index)\r\n        scrollCurrentPageIntoView()\r\n    }\r\n\r\n    const previous = () => {\r\n        paginationContainer.previousClicked()\r\n        scrollCurrentPageIntoView()\r\n    }\r\n\r\n    const next = () => {\r\n        paginationContainer.nextClicked()\r\n        scrollCurrentPageIntoView()\r\n    }\r\n\r\n    return (\r\n        <div className=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\r\n            {props.definition.children!.map((page, index) => showIfContainer.shouldShow(props.path, page) && <div className=\"card\" key={props.path + '_PAGE_' + index}>\r\n                    {paginationContainer.currentPageIndex === index && <div ref={currentPageRef}/>}\r\n                    <div className=\"card-header cursor-pointer\" onClick={() => goToPage(index)}>\r\n                        <h3 className=\"d-inline\">{page.attributes.label}</h3>{index < paginationContainer.currentPageIndex && <button className=\"link-button text-muted px-1\" onClick={() => goToPage(index)}><u>edit</u></button>}\r\n                    </div>\r\n                    {paginationContainer.currentPageIndex === index && <div className=\"card-body m-1\">\r\n                        {page.children && <ChildFormElements childFormElements={page.children as FormElementDef<any>[]} parentPath={props.parentPath}/>}\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <nav aria-label=\"Page navigation\">\r\n                                    <ul className=\"pagination mb-0\">\r\n                                        {!paginationContainer.currentIsFirst && <li className=\"page-item\">\r\n                                            <button className=\"page-link\" onClick={previous}>Previous</button>\r\n                                        </li>}\r\n                                        {!paginationContainer.currentIsLast && <li className={classNames('page-item', {disabled: paginationContainer.disableNext})}>\r\n                                            <button className=\"page-link\" onClick={next} disabled={paginationContainer.disableNext}>Next</button>\r\n                                        </li>}\r\n                                    </ul>\r\n                                </nav>\r\n                            </div>\r\n                            {paginationContainer.currentIsLast && <div className=\"col\">\r\n                                <button className=\"btn btn-primary float-right\" onClick={paginationContainer.submitClicked}>Submit</button>\r\n                            </div>}\r\n                        </div>\r\n                    </div>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React from 'react'\nimport {FieldChrome} from '../../display/FieldChrome'\nimport {FieldStateContainer} from '../../state/FieldStateContainer'\nimport {ReferenceDataContainer} from '../../state/ReferenceDataContainer'\nimport {useContainer} from '../../state/useContainer'\nimport {ValuesContainer} from '../../state/ValuesContainer'\nimport {FormElementProps} from '../FormElementProps'\n\nexport interface DropdownAttributes {\n    label: string\n    description: string\n    info?: string\n    options?: string[]\n    referenceDataOptions?: string\n}\n\ninterface Option {\n    value: string | number,\n    label: string\n}\n\ntype Data = string | number\n\nexport const Dropdown = (props: FormElementProps<DropdownAttributes>) => {\n    const referenceDataContainer = useContainer(ReferenceDataContainer)\n    const formValuesContainer = useContainer(ValuesContainer)\n    const fieldStateContainer = useContainer(FieldStateContainer)\n    let options: Array<Option | Data> = props.definition.attributes.options || []\n    if (props.definition.attributes.referenceDataOptions) {\n        options = options.concat(referenceDataContainer.referenceData[props.definition.attributes.referenceDataOptions])\n    }\n    return <FieldChrome path={props.path} def={props.definition}>\n        <select\n            className=\"form-control custom-select\"\n            id={props.definition.fieldId}\n            value={formValuesContainer.getValue(props.path) || ''}\n            onChange={event => formValuesContainer.setValue(props.path, event.currentTarget.value)}\n            aria-describedby={props.definition.fieldId + '_description'}\n            onFocus={() => fieldStateContainer.focus(props.path)}\n            onBlur={() => fieldStateContainer.blur(props.path)}\n        >\n            <option value=\"\"/>\n            {options.map((option) => {\n                const label = typeof option === 'object' ? option.label : option\n                const value = typeof option === 'object' ? option.value : option\n                return <option value={value} key={value}>{label}</option>\n            })}\n        </select>\n    </FieldChrome>\n}","import React from 'react'\nimport {FieldChrome} from '../../display/FieldChrome'\nimport {FieldStateContainer} from '../../state/FieldStateContainer'\nimport {useContainer} from '../../state/useContainer'\nimport {ValuesContainer} from '../../state/ValuesContainer'\nimport {FormElementProps} from '../FormElementProps'\n\ninterface TextInputAttributes {\n    label: string\n    description: string\n    info?: string\n}\n\nexport const TextInput = (props: FormElementProps<TextInputAttributes>) => {\n    const formValuesContainer = useContainer(ValuesContainer)\n    const fieldStateContainer = useContainer(FieldStateContainer)\n\n    return (<FieldChrome path={props.path} def={props.definition}>\n        <input\n            type=\"text\"\n            className=\"form-control\"\n            id={props.definition.fieldId}\n            aria-describedby={props.path + '_description'}\n            value={formValuesContainer.getValue(props.path) || ''}\n            onChange={event => formValuesContainer.setValue(props.path, event.currentTarget.value)}\n            onFocus={() => fieldStateContainer.focus(props.path)}\n            onBlur={() => fieldStateContainer.blur(props.path)}\n        />\n    </FieldChrome>)\n}","import React from 'react'\nimport {FormElementProps} from '../FormElementProps'\n\ninterface HeadingAttributes {\n    level: number\n    text: string\n}\n\nexport const Heading = (props: FormElementProps<HeadingAttributes>) =>\n    React.createElement('h' + props.definition.attributes.level, null, props.definition.attributes.text)","import React from 'react'\nimport {FormElementProps} from '../FormElementProps'\n\n\ninterface ParagraphAttributes {\n    text: string\n}\n\nexport const Paragraph = (props: FormElementProps<ParagraphAttributes>) => <p>{props.definition.attributes.text}</p>","import React, {useState} from 'react'\nimport {FieldChrome} from '../../display/FieldChrome'\nimport {FieldStateContainer} from '../../state/FieldStateContainer'\nimport {useContainer} from '../../state/useContainer'\nimport {ValuesContainer} from '../../state/ValuesContainer'\nimport {FormElementProps} from '../FormElementProps'\n\ninterface ButtonGroupAttributes {\n    label: string\n    description?: string\n    info?: string\n    options: string[]\n}\n\nexport const ButtonGroup = (props: FormElementProps<ButtonGroupAttributes>) => {\n    const formValuesContainer = useContainer(ValuesContainer)\n    const fieldStateContainer = useContainer(FieldStateContainer)\n    const value = formValuesContainer.getValue(props.path)\n    const [focus, setFocus] = useState<number | null>(null)\n\n    return (\n        <FieldChrome path={props.path} def={props.definition}>\n            <div className=\"btn-group-wrapper\"\n                 onFocus={() => fieldStateContainer.focus(props.path)}\n                 onBlur={() => fieldStateContainer.blur(props.path)}\n            >\n                <div className=\"btn-group btn-group-toggle\">\n                    {props.definition.attributes.options.map((option, index) => (\n                        <label\n                            className={'btn btn-outline-primary' + (value === option ? ' active' : '') + (focus === index ? ' focus' : '')}\n                            key={props.path + '_OPTION_' + option}\n                            onFocus={() => setFocus(index)}\n                            onBlur={() => setFocus(null)}\n                        >\n                            <input\n                                type=\"radio\"\n                                value={option}\n                                checked={option === value}\n                                onChange={event => formValuesContainer.setValue(props.path, event.currentTarget.value)}\n                            />{option}\n                        </label>))\n                    }\n                </div>\n            </div>\n        </FieldChrome>)\n}","import classNames from 'classnames'\r\nimport React, {useEffect} from 'react'\r\nimport {FormElementDef} from '../../FormDef'\r\nimport {PaginationContainer} from '../../state/PaginationContainer'\r\nimport {ShowIfContainer} from '../../state/ShowIfContainer'\r\nimport {useContainer} from '../../state/useContainer'\r\nimport {ChildFormElements} from '../ChildFormElements'\r\nimport {FormElementProps} from '../FormElementProps'\r\n\r\ninterface TabAttributes {\r\n    pill?: boolean\r\n}\r\n\r\n\r\nexport const Tabs = (props: FormElementProps<TabAttributes>) => {\r\n    const showIfContainer = useContainer(ShowIfContainer)\r\n    const paginationContainer = useContainer(PaginationContainer)\r\n\r\n    /* eslint-disable react-hooks/exhaustive-deps */\r\n    useEffect(() => {\r\n        props.definition.children && paginationContainer.setUp(props.path, props.definition.children)\r\n    }, [])\r\n    /* eslint-enable react-hooks/exhaustive-deps */\r\n\r\n    if (!props.definition.children) {\r\n        return null\r\n    }\r\n\r\n    if (paginationContainer.currentPageIndex < 0) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <ul className={'nav ' + (props.definition.attributes.pill ? 'nav-pills card-header-pills' : 'nav-tabs card-header-tabs')}>\r\n                    {props.definition.children!.map((page, index) => {\r\n                        if (!showIfContainer.shouldShow(props.path, page)) {\r\n                            return null\r\n                        }\r\n                        const key = props.path + '_PAGE_' + index\r\n                        //The bootstrap btn-link doesn't style the same as a link with a href when used as nav-link\r\n                        /* eslint-disable jsx-a11y/anchor-is-valid, no-script-url */\r\n                        if (index < paginationContainer.currentPageIndex) {\r\n                            return <li className=\"nav-item\" key={key}>\r\n                                <a className=\"nav-link\" href=\"javascript:void(0)\" onClick={() => paginationContainer.setCurrentPageIndex(index)}>{page.attributes.label}</a>\r\n                            </li>\r\n\r\n                        }\r\n                        /* eslint-enable no-script-url, jsx-a11y/anchor-is-valid */\r\n                        if (index === paginationContainer.currentPageIndex) {\r\n                            return <li className=\"nav-item\" key={key}>\r\n                                <button className=\"nav-link active\">{page.attributes.label}</button>\r\n                            </li>\r\n                        }\r\n                        if (index > paginationContainer.currentPageIndex) {\r\n                            return <li className=\"nav-item\" key={key}>\r\n                                <button className=\"nav-link disabled\" tabIndex={-1} aria-disabled=\"true\">{page.attributes.label}</button>\r\n                            </li>\r\n                        }\r\n                        return null\r\n                    })}\r\n                </ul>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div className=\"container\">\r\n                    <ChildFormElements childFormElements={props.definition.children[paginationContainer.currentPageIndex].children as FormElementDef<any>[]} parentPath={props.parentPath}/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <nav aria-label=\"Page navigation\">\r\n                                <ul className=\"pagination mb-0\">\r\n                                    {!paginationContainer.currentIsFirst && <li className=\"page-item\">\r\n                                        <button className=\"page-link\" onClick={paginationContainer.previousClicked}>Previous</button>\r\n                                    </li>}\r\n                                    {!paginationContainer.currentIsLast && <li className={classNames('page-item', {disabled: paginationContainer.disableNext})}>\r\n                                        <button className=\"page-link\" onClick={paginationContainer.nextClicked} disabled={paginationContainer.disableNext}>Next</button>\r\n                                    </li>}\r\n                                </ul>\r\n                            </nav>\r\n                        </div>\r\n                        {paginationContainer.currentIsLast && <div className=\"col\">\r\n                            <button className=\"btn btn-primary float-right\" onClick={paginationContainer.submitClicked}>Submit</button>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}","import {times} from 'lodash-es'\nimport React from 'react'\nimport {Description} from '../../display/Description'\nimport {useContainer} from '../../state/useContainer'\nimport {ValuesContainer} from '../../state/ValuesContainer'\nimport {ordinal} from '../../util'\nimport {ChildFormElements} from '../ChildFormElements'\nimport {FormElementProps} from '../FormElementProps'\n\n\nexport interface IterationAttributes {\n    label: string\n    itemLabel: string\n    description: string\n}\n\nexport const List = (props: FormElementProps<IterationAttributes>) => {\n    const formValuesContainer = useContainer(ValuesContainer)\n    return (\n        <div className=\"form-group\">\n            <span className=\"h4 align-middle mr-2\">{props.definition.attributes.label}</span>\n            {props.definition.attributes.description && <Description path={props.path} text={props.definition.attributes.description}/>}\n            {times(formValuesContainer.getCollectionSize(props.path), (index: number) =>\n                <div className={'card border-bottom mb-3' + (index === 0 ? ' mt-2' : '')} key={props.path + '_COLLECTION_' + index}>\n                    <h5 className=\"card-header\">{ordinal(index + 1)} {props.definition.attributes.itemLabel}\n                        <button className=\"close text-dark\" onClick={() => formValuesContainer.deleteFromCollection(props.path, index)}>\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </h5>\n                    <div className=\"card-body pb-0\">\n                        {props.definition.children && <ChildFormElements childFormElements={props.definition.children} parentPath={props.path + '[' + index + ']'}/>}\n                    </div>\n                </div>\n            )}\n            <button className=\"btn btn-primary d-inline\" onClick={() => formValuesContainer.addToCollection(props.path)}>Add</button>\n        </div>)\n}\n","import React from 'react'\r\nimport {FormElementDef} from '../FormDef'\r\nimport {ShowIfContainer} from '../state/ShowIfContainer'\r\nimport {useContainer} from '../state/useContainer'\r\nimport {createPath} from '../util'\r\nimport {lookupElement} from './formElementTypes'\r\n\r\ninterface ChildFormElementsProps {\r\n    childFormElements: FormElementDef<any>[]\r\n    parentPath: string\r\n}\r\n\r\nexport const ChildFormElements = (props: ChildFormElementsProps) => {\r\n    const showIfContainer = useContainer(ShowIfContainer)\r\n    return (\r\n        <div>\r\n            {props.childFormElements.map((elementDef, index) => {\r\n                const path = createPath(props.parentPath, elementDef.fieldId)\r\n                if (!showIfContainer.shouldShow(path, elementDef)) {\r\n                    return null\r\n                }\r\n                const Child: any = lookupElement(elementDef.type)\r\n                return React.createElement(Child, {\r\n                    definition: elementDef,\r\n                    parentPath: props.parentPath,\r\n                    path: path,\r\n                    key: props.parentPath + '_' + index\r\n                })\r\n            })}\r\n        </div>)\r\n}","import React from 'react'\nimport FormDef from './FormDef'\nimport {ChildFormElements} from './formElements/ChildFormElements'\nimport {ConfigContainer} from './state/ConfigContainer'\nimport {ExpressionContainer} from './state/ExpressionContainer'\nimport {FieldStateContainer} from './state/FieldStateContainer'\nimport {FormStateContainer} from './state/FormStateContainer'\nimport {PaginationContainer} from './state/PaginationContainer'\nimport {ReferenceDataContainer} from './state/ReferenceDataContainer'\nimport {ShowIfContainer} from './state/ShowIfContainer'\nimport {ValidationContainer} from './state/ValidationContainer'\nimport {ValuesContainer} from './state/ValuesContainer'\n\nexport interface FormProps {\n    formDef: FormDef\n}\n\nexport const Form: React.FC<FormProps> = (props) => (<div className=\"\">\n    <ConfigContainer.Provider initialState={props.formDef.config}>\n        <ReferenceDataContainer.Provider initialState={props.formDef.referenceData}>\n            <FormStateContainer.Provider>\n                <FieldStateContainer.Provider>\n                    <ValuesContainer.Provider>\n                        <ExpressionContainer.Provider>\n                            <ShowIfContainer.Provider>\n                                <ValidationContainer.Provider>\n                                    <PaginationContainer.Provider>\n                                        <ChildFormElements childFormElements={props.formDef.elements} parentPath=\"\"/>\n                                    </PaginationContainer.Provider>\n                                </ValidationContainer.Provider>\n                            </ShowIfContainer.Provider>\n                        </ExpressionContainer.Provider>\n                    </ValuesContainer.Provider>\n                </FieldStateContainer.Provider>\n            </FormStateContainer.Provider>\n        </ReferenceDataContainer.Provider>\n    </ConfigContainer.Provider>\n</div>)","//import 'react-app-polyfill/ie11'\nimport axios from 'axios'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport {Form} from './Form'\nimport FormDef from './FormDef'\nimport './index.css'\n\naxios.get<FormDef>('exampleFormDefinition.json')\n    .then(function (response) {\n        ReactDOM.render(\n            <Form formDef={response.data}/>,\n            document.getElementById('form')\n        )\n    })\n    .catch(function (error) {\n        console.error(error)\n        throw new Error(error)\n    })"],"sourceRoot":""}